//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.1
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.1 版自动生成。
// 
#pragma warning disable 1591

namespace LGHISJKZGQ.shsjdzyyyweb {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    // CODEGEN: 未处理命名空间“http://www.w3.org/2006/05/addressing/wsdl”中的可选 WSDL 扩展元素“UsingAddressing”。
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="FGPLServiceSoap11Binding", Namespace="http://tempuri.org/")]
    public partial class FGPLService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback UpdateApplyBillStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetApplyBillOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendReportOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public FGPLService() {
            this.Url = "http://192.168.1.158:1405/services/FGPLService.FGPLServiceHttpSoap11Endpoint";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event UpdateApplyBillStateCompletedEventHandler UpdateApplyBillStateCompleted;
        
        /// <remarks/>
        public event GetApplyBillCompletedEventHandler GetApplyBillCompleted;
        
        /// <remarks/>
        public event SendReportCompletedEventHandler SendReportCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:UpdateApplyBillState", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("payload")]
        public string UpdateApplyBillState(string PACS) {
            object[] results = this.Invoke("UpdateApplyBillState", new object[] {
                        PACS});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateApplyBillStateAsync(string PACS) {
            this.UpdateApplyBillStateAsync(PACS, null);
        }
        
        /// <remarks/>
        public void UpdateApplyBillStateAsync(string PACS, object userState) {
            if ((this.UpdateApplyBillStateOperationCompleted == null)) {
                this.UpdateApplyBillStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateApplyBillStateOperationCompleted);
            }
            this.InvokeAsync("UpdateApplyBillState", new object[] {
                        PACS}, this.UpdateApplyBillStateOperationCompleted, userState);
        }
        
        private void OnUpdateApplyBillStateOperationCompleted(object arg) {
            if ((this.UpdateApplyBillStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateApplyBillStateCompleted(this, new UpdateApplyBillStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:GetApplyBill", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("payload")]
        public string GetApplyBill(string PACS) {
            object[] results = this.Invoke("GetApplyBill", new object[] {
                        PACS});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetApplyBillAsync(string PACS) {
            this.GetApplyBillAsync(PACS, null);
        }
        
        /// <remarks/>
        public void GetApplyBillAsync(string PACS, object userState) {
            if ((this.GetApplyBillOperationCompleted == null)) {
                this.GetApplyBillOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetApplyBillOperationCompleted);
            }
            this.InvokeAsync("GetApplyBill", new object[] {
                        PACS}, this.GetApplyBillOperationCompleted, userState);
        }
        
        private void OnGetApplyBillOperationCompleted(object arg) {
            if ((this.GetApplyBillCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetApplyBillCompleted(this, new GetApplyBillCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:SendReport", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("payload")]
        public string SendReport(string PACS) {
            object[] results = this.Invoke("SendReport", new object[] {
                        PACS});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendReportAsync(string PACS) {
            this.SendReportAsync(PACS, null);
        }
        
        /// <remarks/>
        public void SendReportAsync(string PACS, object userState) {
            if ((this.SendReportOperationCompleted == null)) {
                this.SendReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendReportOperationCompleted);
            }
            this.InvokeAsync("SendReport", new object[] {
                        PACS}, this.SendReportOperationCompleted, userState);
        }
        
        private void OnSendReportOperationCompleted(object arg) {
            if ((this.SendReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendReportCompleted(this, new SendReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateApplyBillStateCompletedEventHandler(object sender, UpdateApplyBillStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateApplyBillStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateApplyBillStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetApplyBillCompletedEventHandler(object sender, GetApplyBillCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetApplyBillCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetApplyBillCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SendReportCompletedEventHandler(object sender, SendReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591