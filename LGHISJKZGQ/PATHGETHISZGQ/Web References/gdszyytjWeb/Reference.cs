//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.1
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.1 版自动生成。
// 
#pragma warning disable 1591

namespace LGHISJKZGQ.gdszyytjWeb {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="LisServiceSoap", Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(absModel))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TestInfo))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(BaseSpecimenHeadInfo))]
    public partial class LisService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetPrintBarcodeCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelLabForCFHOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelLabNumOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBarCodeDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback LabCreateOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertMedicalAdvicesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHospitalsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSrcinfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDepHeadsOperationCompleted;
        
        private System.Threading.SendOrPostCallback LAB_REFListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMachineOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHealthCareUnitOperationCompleted;
        
        private System.Threading.SendOrPostCallback Page_PaintResultSOperationCompleted;
        
        private System.Threading.SendOrPostCallback Page_PaintResultS_1OperationCompleted;
        
        private System.Threading.SendOrPostCallback fastPaintResultSOperationCompleted;
        
        private System.Threading.SendOrPostCallback fastPaintResultS_1OperationCompleted;
        
        private System.Threading.SendOrPostCallback fastPaintResultSByHospitalIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback fastPaintResultSByHospitalID_1OperationCompleted;
        
        private System.Threading.SendOrPostCallback PagePaintResultSOperationCompleted;
        
        private System.Threading.SendOrPostCallback getgetMACHDESCOperationCompleted;
        
        private System.Threading.SendOrPostCallback StateNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTestRenarkOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTestItemsDescOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetIsRightOperationCompleted;
        
        private System.Threading.SendOrPostCallback get_DataLoad_ItemsResultOperationCompleted;
        
        private System.Threading.SendOrPostCallback get_Load_ItemsInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePrintBarCodeFlagOperationCompleted;
        
        private System.Threading.SendOrPostCallback ShowItemMeanOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMachineByHospitalIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback getLabGroupLabOperationCompleted;
        
        private System.Threading.SendOrPostCallback getLabPriceByCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTestTypeByInGroupInitCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetContainersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSourcesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetExtmthdsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getLabPriceSourseOperationCompleted;
        
        private System.Threading.SendOrPostCallback getLabPriceSourseBySrcIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSourcesListOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertHisMedicalAdvicesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getHisMedicalAdviceHeadByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPriceByCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPricesByCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getApprovalLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTestTypesOperationCompleted;
        
        private System.Threading.SendOrPostCallback get_DataLoad_HistoryResultOperationCompleted;
        
        private System.Threading.SendOrPostCallback get_DataLoad_ItemsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getLoadPaintInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReferenceRangeAccessOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHostoryDataAccessOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReportPrintLogCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTempleteIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReportTempOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReportSourceOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateReportTempOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetServerDateTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOperatorOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserLocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDepartmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCpiOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccumulateOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchAccumulateOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateAccumulateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLisReportDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertPrintLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback OpenPrintLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDeptCodesOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitCodeByTesttypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPrintCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsNullOperationCompleted;
        
        private System.Threading.SendOrPostCallback ZiMianListOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTestTypeByLabNumOperationCompleted;
        
        private System.Threading.SendOrPostCallback getItemsByInitCodeListOperationCompleted;
        
        private System.Threading.SendOrPostCallback getItemsByInitCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getLabNumsByCFH_ordIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectPaientByLabNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectMastestByLabNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectMicrodatByLabNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectODTitleOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectSResultOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectODResultOperationCompleted;
        
        private System.Threading.SendOrPostCallback getServiceDateTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSysParameterValueOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetSysParameterValueOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHospIDByLabNumOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public LisService() {
            this.Url = global::LGHISJKZGQ.Properties.Settings.Default.PATHGETHISZGQ_gdszyytjWeb_LisService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetPrintBarcodeCountCompletedEventHandler GetPrintBarcodeCountCompleted;
        
        /// <remarks/>
        public event CancelLabForCFHCompletedEventHandler CancelLabForCFHCompleted;
        
        /// <remarks/>
        public event CancelLabNumCompletedEventHandler CancelLabNumCompleted;
        
        /// <remarks/>
        public event GetBarCodeDataCompletedEventHandler GetBarCodeDataCompleted;
        
        /// <remarks/>
        public event LabCreateCompletedEventHandler LabCreateCompleted;
        
        /// <remarks/>
        public event InsertMedicalAdvicesCompletedEventHandler InsertMedicalAdvicesCompleted;
        
        /// <remarks/>
        public event GetHospitalsCompletedEventHandler GetHospitalsCompleted;
        
        /// <remarks/>
        public event GetSrcinfoCompletedEventHandler GetSrcinfoCompleted;
        
        /// <remarks/>
        public event GetDepHeadsCompletedEventHandler GetDepHeadsCompleted;
        
        /// <remarks/>
        public event LAB_REFListCompletedEventHandler LAB_REFListCompleted;
        
        /// <remarks/>
        public event GetMachineCompletedEventHandler GetMachineCompleted;
        
        /// <remarks/>
        public event GetLocationCompletedEventHandler GetLocationCompleted;
        
        /// <remarks/>
        public event GetHealthCareUnitCompletedEventHandler GetHealthCareUnitCompleted;
        
        /// <remarks/>
        public event Page_PaintResultSCompletedEventHandler Page_PaintResultSCompleted;
        
        /// <remarks/>
        public event Page_PaintResultS_1CompletedEventHandler Page_PaintResultS_1Completed;
        
        /// <remarks/>
        public event fastPaintResultSCompletedEventHandler fastPaintResultSCompleted;
        
        /// <remarks/>
        public event fastPaintResultS_1CompletedEventHandler fastPaintResultS_1Completed;
        
        /// <remarks/>
        public event fastPaintResultSByHospitalIDCompletedEventHandler fastPaintResultSByHospitalIDCompleted;
        
        /// <remarks/>
        public event fastPaintResultSByHospitalID_1CompletedEventHandler fastPaintResultSByHospitalID_1Completed;
        
        /// <remarks/>
        public event PagePaintResultSCompletedEventHandler PagePaintResultSCompleted;
        
        /// <remarks/>
        public event getgetMACHDESCCompletedEventHandler getgetMACHDESCCompleted;
        
        /// <remarks/>
        public event StateNameCompletedEventHandler StateNameCompleted;
        
        /// <remarks/>
        public event GetTestRenarkCompletedEventHandler GetTestRenarkCompleted;
        
        /// <remarks/>
        public event GetTestItemsDescCompletedEventHandler GetTestItemsDescCompleted;
        
        /// <remarks/>
        public event GetIsRightCompletedEventHandler GetIsRightCompleted;
        
        /// <remarks/>
        public event get_DataLoad_ItemsResultCompletedEventHandler get_DataLoad_ItemsResultCompleted;
        
        /// <remarks/>
        public event get_Load_ItemsInfoCompletedEventHandler get_Load_ItemsInfoCompleted;
        
        /// <remarks/>
        public event UpdatePrintBarCodeFlagCompletedEventHandler UpdatePrintBarCodeFlagCompleted;
        
        /// <remarks/>
        public event ShowItemMeanCompletedEventHandler ShowItemMeanCompleted;
        
        /// <remarks/>
        public event GetMachineByHospitalIDCompletedEventHandler GetMachineByHospitalIDCompleted;
        
        /// <remarks/>
        public event getLabGroupLabCompletedEventHandler getLabGroupLabCompleted;
        
        /// <remarks/>
        public event getLabPriceByCodeCompletedEventHandler getLabPriceByCodeCompleted;
        
        /// <remarks/>
        public event getTestTypeByInGroupInitCodeCompletedEventHandler getTestTypeByInGroupInitCodeCompleted;
        
        /// <remarks/>
        public event GetContainersCompletedEventHandler GetContainersCompleted;
        
        /// <remarks/>
        public event GetSourcesCompletedEventHandler GetSourcesCompleted;
        
        /// <remarks/>
        public event GetExtmthdsCompletedEventHandler GetExtmthdsCompleted;
        
        /// <remarks/>
        public event getLabPriceSourseCompletedEventHandler getLabPriceSourseCompleted;
        
        /// <remarks/>
        public event getLabPriceSourseBySrcIDCompletedEventHandler getLabPriceSourseBySrcIDCompleted;
        
        /// <remarks/>
        public event GetSourcesListCompletedEventHandler GetSourcesListCompleted;
        
        /// <remarks/>
        public event InsertHisMedicalAdvicesCompletedEventHandler InsertHisMedicalAdvicesCompleted;
        
        /// <remarks/>
        public event getHisMedicalAdviceHeadByIDCompletedEventHandler getHisMedicalAdviceHeadByIDCompleted;
        
        /// <remarks/>
        public event GetPriceByCodeCompletedEventHandler GetPriceByCodeCompleted;
        
        /// <remarks/>
        public event GetPricesByCodeCompletedEventHandler GetPricesByCodeCompleted;
        
        /// <remarks/>
        public event getApprovalLogCompletedEventHandler getApprovalLogCompleted;
        
        /// <remarks/>
        public event GetTestTypesCompletedEventHandler GetTestTypesCompleted;
        
        /// <remarks/>
        public event get_DataLoad_HistoryResultCompletedEventHandler get_DataLoad_HistoryResultCompleted;
        
        /// <remarks/>
        public event get_DataLoad_ItemsCompletedEventHandler get_DataLoad_ItemsCompleted;
        
        /// <remarks/>
        public event getLoadPaintInfoCompletedEventHandler getLoadPaintInfoCompleted;
        
        /// <remarks/>
        public event GetReferenceRangeAccessCompletedEventHandler GetReferenceRangeAccessCompleted;
        
        /// <remarks/>
        public event GetHostoryDataAccessCompletedEventHandler GetHostoryDataAccessCompleted;
        
        /// <remarks/>
        public event GetReportPrintLogCountCompletedEventHandler GetReportPrintLogCountCompleted;
        
        /// <remarks/>
        public event GetTempleteIDCompletedEventHandler GetTempleteIDCompleted;
        
        /// <remarks/>
        public event GetReportTempCompletedEventHandler GetReportTempCompleted;
        
        /// <remarks/>
        public event GetReportSourceCompletedEventHandler GetReportSourceCompleted;
        
        /// <remarks/>
        public event UpdateReportTempCompletedEventHandler UpdateReportTempCompleted;
        
        /// <remarks/>
        public event GetServerDateTimeCompletedEventHandler GetServerDateTimeCompleted;
        
        /// <remarks/>
        public event GetOperatorCompletedEventHandler GetOperatorCompleted;
        
        /// <remarks/>
        public event GetUserLocationCompletedEventHandler GetUserLocationCompleted;
        
        /// <remarks/>
        public event GetDepartmentCompletedEventHandler GetDepartmentCompleted;
        
        /// <remarks/>
        public event GetCpiCompletedEventHandler GetCpiCompleted;
        
        /// <remarks/>
        public event GetAccumulateCompletedEventHandler GetAccumulateCompleted;
        
        /// <remarks/>
        public event SearchAccumulateCompletedEventHandler SearchAccumulateCompleted;
        
        /// <remarks/>
        public event UpdateAccumulateCompletedEventHandler UpdateAccumulateCompleted;
        
        /// <remarks/>
        public event GetLisReportDataCompletedEventHandler GetLisReportDataCompleted;
        
        /// <remarks/>
        public event InsertPrintLogCompletedEventHandler InsertPrintLogCompleted;
        
        /// <remarks/>
        public event OpenPrintLogCompletedEventHandler OpenPrintLogCompleted;
        
        /// <remarks/>
        public event GetDeptCodesCompletedEventHandler GetDeptCodesCompleted;
        
        /// <remarks/>
        public event InitCodeByTesttypeCompletedEventHandler InitCodeByTesttypeCompleted;
        
        /// <remarks/>
        public event GetPrintCountCompletedEventHandler GetPrintCountCompleted;
        
        /// <remarks/>
        public event IsNullCompletedEventHandler IsNullCompleted;
        
        /// <remarks/>
        public event ZiMianListCompletedEventHandler ZiMianListCompleted;
        
        /// <remarks/>
        public event getTestTypeByLabNumCompletedEventHandler getTestTypeByLabNumCompleted;
        
        /// <remarks/>
        public event getItemsByInitCodeListCompletedEventHandler getItemsByInitCodeListCompleted;
        
        /// <remarks/>
        public event getItemsByInitCodeCompletedEventHandler getItemsByInitCodeCompleted;
        
        /// <remarks/>
        public event getLabNumsByCFH_ordIDCompletedEventHandler getLabNumsByCFH_ordIDCompleted;
        
        /// <remarks/>
        public event SelectPaientByLabNumberCompletedEventHandler SelectPaientByLabNumberCompleted;
        
        /// <remarks/>
        public event SelectMastestByLabNumberCompletedEventHandler SelectMastestByLabNumberCompleted;
        
        /// <remarks/>
        public event SelectMicrodatByLabNumberCompletedEventHandler SelectMicrodatByLabNumberCompleted;
        
        /// <remarks/>
        public event SelectODTitleCompletedEventHandler SelectODTitleCompleted;
        
        /// <remarks/>
        public event SelectSResultCompletedEventHandler SelectSResultCompleted;
        
        /// <remarks/>
        public event SelectODResultCompletedEventHandler SelectODResultCompleted;
        
        /// <remarks/>
        public event getServiceDateTimeCompletedEventHandler getServiceDateTimeCompleted;
        
        /// <remarks/>
        public event GetSysParameterValueCompletedEventHandler GetSysParameterValueCompleted;
        
        /// <remarks/>
        public event SetSysParameterValueCompletedEventHandler SetSysParameterValueCompleted;
        
        /// <remarks/>
        public event GetHospIDByLabNumCompletedEventHandler GetHospIDByLabNumCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPrintBarcodeCount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetPrintBarcodeCount(string strLabNum, string itemIntTCode) {
            object[] results = this.Invoke("GetPrintBarcodeCount", new object[] {
                        strLabNum,
                        itemIntTCode});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetPrintBarcodeCountAsync(string strLabNum, string itemIntTCode) {
            this.GetPrintBarcodeCountAsync(strLabNum, itemIntTCode, null);
        }
        
        /// <remarks/>
        public void GetPrintBarcodeCountAsync(string strLabNum, string itemIntTCode, object userState) {
            if ((this.GetPrintBarcodeCountOperationCompleted == null)) {
                this.GetPrintBarcodeCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPrintBarcodeCountOperationCompleted);
            }
            this.InvokeAsync("GetPrintBarcodeCount", new object[] {
                        strLabNum,
                        itemIntTCode}, this.GetPrintBarcodeCountOperationCompleted, userState);
        }
        
        private void OnGetPrintBarcodeCountOperationCompleted(object arg) {
            if ((this.GetPrintBarcodeCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPrintBarcodeCountCompleted(this, new GetPrintBarcodeCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CancelLabForCFH", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CancelLabForCFH(string hospitalID, string ordID, string cfhNum, string cancelUserID, string cancelReason) {
            object[] results = this.Invoke("CancelLabForCFH", new object[] {
                        hospitalID,
                        ordID,
                        cfhNum,
                        cancelUserID,
                        cancelReason});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CancelLabForCFHAsync(string hospitalID, string ordID, string cfhNum, string cancelUserID, string cancelReason) {
            this.CancelLabForCFHAsync(hospitalID, ordID, cfhNum, cancelUserID, cancelReason, null);
        }
        
        /// <remarks/>
        public void CancelLabForCFHAsync(string hospitalID, string ordID, string cfhNum, string cancelUserID, string cancelReason, object userState) {
            if ((this.CancelLabForCFHOperationCompleted == null)) {
                this.CancelLabForCFHOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelLabForCFHOperationCompleted);
            }
            this.InvokeAsync("CancelLabForCFH", new object[] {
                        hospitalID,
                        ordID,
                        cfhNum,
                        cancelUserID,
                        cancelReason}, this.CancelLabForCFHOperationCompleted, userState);
        }
        
        private void OnCancelLabForCFHOperationCompleted(object arg) {
            if ((this.CancelLabForCFHCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelLabForCFHCompleted(this, new CancelLabForCFHCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CancelLabNum", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CancelLabNum(string labNum, string reason, string cancelBy) {
            object[] results = this.Invoke("CancelLabNum", new object[] {
                        labNum,
                        reason,
                        cancelBy});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CancelLabNumAsync(string labNum, string reason, string cancelBy) {
            this.CancelLabNumAsync(labNum, reason, cancelBy, null);
        }
        
        /// <remarks/>
        public void CancelLabNumAsync(string labNum, string reason, string cancelBy, object userState) {
            if ((this.CancelLabNumOperationCompleted == null)) {
                this.CancelLabNumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelLabNumOperationCompleted);
            }
            this.InvokeAsync("CancelLabNum", new object[] {
                        labNum,
                        reason,
                        cancelBy}, this.CancelLabNumOperationCompleted, userState);
        }
        
        private void OnCancelLabNumOperationCompleted(object arg) {
            if ((this.CancelLabNumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelLabNumCompleted(this, new CancelLabNumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBarCodeData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BarCodeInfo GetBarCodeData(string labNum) {
            object[] results = this.Invoke("GetBarCodeData", new object[] {
                        labNum});
            return ((BarCodeInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetBarCodeDataAsync(string labNum) {
            this.GetBarCodeDataAsync(labNum, null);
        }
        
        /// <remarks/>
        public void GetBarCodeDataAsync(string labNum, object userState) {
            if ((this.GetBarCodeDataOperationCompleted == null)) {
                this.GetBarCodeDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBarCodeDataOperationCompleted);
            }
            this.InvokeAsync("GetBarCodeData", new object[] {
                        labNum}, this.GetBarCodeDataOperationCompleted, userState);
        }
        
        private void OnGetBarCodeDataOperationCompleted(object arg) {
            if ((this.GetBarCodeDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBarCodeDataCompleted(this, new GetBarCodeDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LabCreate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LabCreate(
                    string m_UpdateType, 
                    string m_HospitalID, 
                    string m_LabNum, 
                    string m_HospNum, 
                    string m_PatientName, 
                    string m_Sex, 
                    string m_Birthdate, 
                    string m_Age, 
                    string m_Age_Month, 
                    string m_Age_Day, 
                    string m_HEALTH_NUM, 
                    string m_Blood_Group, 
                    string m_LocationID, 
                    string m_LocationName, 
                    string m_Room_Num, 
                    string m_Bed_Num, 
                    string m_Doc_NO_AD_ID, 
                    string m_Doc_NO_AD_Name, 
                    string m_Doc_NO_CP1_ID, 
                    string m_Doc_NO_CP1_Name, 
                    string m_Doc_NO_CP2_ID, 
                    string m_Doc_NO_CP2_Name, 
                    string m_Doc_NO_CP3_ID, 
                    string m_Doc_NO_CP3_Name, 
                    string m_Ord_ID, 
                    string m_CFH, 
                    string m_Organ_ID, 
                    string m_Organ_Name, 
                    System.DateTime m_OrdTime, 
                    string m_OrdbY, 
                    System.DateTime m_CollTime, 
                    string m_CollBy, 
                    string m_CollAt, 
                    bool m_Privacy, 
                    string m_PatientType, 
                    string m_Spec_Intm, 
                    string m_Comments, 
                    string m_Item_Code, 
                    string m_Item_GroupCode, 
                    string m_Item_LabSource, 
                    string m_Item_Container, 
                    string m_Item_Priority, 
                    string m_Item_IsDel, 
                    string m_Item_Price, 
                    bool m_IsUpdCollInfo, 
                    bool m_IsUpdRecvInfo, 
                    bool m_IsHisLocationOrder, 
                    bool m_IsShowWindow, 
                    bool m_IsPromptErr) {
            object[] results = this.Invoke("LabCreate", new object[] {
                        m_UpdateType,
                        m_HospitalID,
                        m_LabNum,
                        m_HospNum,
                        m_PatientName,
                        m_Sex,
                        m_Birthdate,
                        m_Age,
                        m_Age_Month,
                        m_Age_Day,
                        m_HEALTH_NUM,
                        m_Blood_Group,
                        m_LocationID,
                        m_LocationName,
                        m_Room_Num,
                        m_Bed_Num,
                        m_Doc_NO_AD_ID,
                        m_Doc_NO_AD_Name,
                        m_Doc_NO_CP1_ID,
                        m_Doc_NO_CP1_Name,
                        m_Doc_NO_CP2_ID,
                        m_Doc_NO_CP2_Name,
                        m_Doc_NO_CP3_ID,
                        m_Doc_NO_CP3_Name,
                        m_Ord_ID,
                        m_CFH,
                        m_Organ_ID,
                        m_Organ_Name,
                        m_OrdTime,
                        m_OrdbY,
                        m_CollTime,
                        m_CollBy,
                        m_CollAt,
                        m_Privacy,
                        m_PatientType,
                        m_Spec_Intm,
                        m_Comments,
                        m_Item_Code,
                        m_Item_GroupCode,
                        m_Item_LabSource,
                        m_Item_Container,
                        m_Item_Priority,
                        m_Item_IsDel,
                        m_Item_Price,
                        m_IsUpdCollInfo,
                        m_IsUpdRecvInfo,
                        m_IsHisLocationOrder,
                        m_IsShowWindow,
                        m_IsPromptErr});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LabCreateAsync(
                    string m_UpdateType, 
                    string m_HospitalID, 
                    string m_LabNum, 
                    string m_HospNum, 
                    string m_PatientName, 
                    string m_Sex, 
                    string m_Birthdate, 
                    string m_Age, 
                    string m_Age_Month, 
                    string m_Age_Day, 
                    string m_HEALTH_NUM, 
                    string m_Blood_Group, 
                    string m_LocationID, 
                    string m_LocationName, 
                    string m_Room_Num, 
                    string m_Bed_Num, 
                    string m_Doc_NO_AD_ID, 
                    string m_Doc_NO_AD_Name, 
                    string m_Doc_NO_CP1_ID, 
                    string m_Doc_NO_CP1_Name, 
                    string m_Doc_NO_CP2_ID, 
                    string m_Doc_NO_CP2_Name, 
                    string m_Doc_NO_CP3_ID, 
                    string m_Doc_NO_CP3_Name, 
                    string m_Ord_ID, 
                    string m_CFH, 
                    string m_Organ_ID, 
                    string m_Organ_Name, 
                    System.DateTime m_OrdTime, 
                    string m_OrdbY, 
                    System.DateTime m_CollTime, 
                    string m_CollBy, 
                    string m_CollAt, 
                    bool m_Privacy, 
                    string m_PatientType, 
                    string m_Spec_Intm, 
                    string m_Comments, 
                    string m_Item_Code, 
                    string m_Item_GroupCode, 
                    string m_Item_LabSource, 
                    string m_Item_Container, 
                    string m_Item_Priority, 
                    string m_Item_IsDel, 
                    string m_Item_Price, 
                    bool m_IsUpdCollInfo, 
                    bool m_IsUpdRecvInfo, 
                    bool m_IsHisLocationOrder, 
                    bool m_IsShowWindow, 
                    bool m_IsPromptErr) {
            this.LabCreateAsync(m_UpdateType, m_HospitalID, m_LabNum, m_HospNum, m_PatientName, m_Sex, m_Birthdate, m_Age, m_Age_Month, m_Age_Day, m_HEALTH_NUM, m_Blood_Group, m_LocationID, m_LocationName, m_Room_Num, m_Bed_Num, m_Doc_NO_AD_ID, m_Doc_NO_AD_Name, m_Doc_NO_CP1_ID, m_Doc_NO_CP1_Name, m_Doc_NO_CP2_ID, m_Doc_NO_CP2_Name, m_Doc_NO_CP3_ID, m_Doc_NO_CP3_Name, m_Ord_ID, m_CFH, m_Organ_ID, m_Organ_Name, m_OrdTime, m_OrdbY, m_CollTime, m_CollBy, m_CollAt, m_Privacy, m_PatientType, m_Spec_Intm, m_Comments, m_Item_Code, m_Item_GroupCode, m_Item_LabSource, m_Item_Container, m_Item_Priority, m_Item_IsDel, m_Item_Price, m_IsUpdCollInfo, m_IsUpdRecvInfo, m_IsHisLocationOrder, m_IsShowWindow, m_IsPromptErr, null);
        }
        
        /// <remarks/>
        public void LabCreateAsync(
                    string m_UpdateType, 
                    string m_HospitalID, 
                    string m_LabNum, 
                    string m_HospNum, 
                    string m_PatientName, 
                    string m_Sex, 
                    string m_Birthdate, 
                    string m_Age, 
                    string m_Age_Month, 
                    string m_Age_Day, 
                    string m_HEALTH_NUM, 
                    string m_Blood_Group, 
                    string m_LocationID, 
                    string m_LocationName, 
                    string m_Room_Num, 
                    string m_Bed_Num, 
                    string m_Doc_NO_AD_ID, 
                    string m_Doc_NO_AD_Name, 
                    string m_Doc_NO_CP1_ID, 
                    string m_Doc_NO_CP1_Name, 
                    string m_Doc_NO_CP2_ID, 
                    string m_Doc_NO_CP2_Name, 
                    string m_Doc_NO_CP3_ID, 
                    string m_Doc_NO_CP3_Name, 
                    string m_Ord_ID, 
                    string m_CFH, 
                    string m_Organ_ID, 
                    string m_Organ_Name, 
                    System.DateTime m_OrdTime, 
                    string m_OrdbY, 
                    System.DateTime m_CollTime, 
                    string m_CollBy, 
                    string m_CollAt, 
                    bool m_Privacy, 
                    string m_PatientType, 
                    string m_Spec_Intm, 
                    string m_Comments, 
                    string m_Item_Code, 
                    string m_Item_GroupCode, 
                    string m_Item_LabSource, 
                    string m_Item_Container, 
                    string m_Item_Priority, 
                    string m_Item_IsDel, 
                    string m_Item_Price, 
                    bool m_IsUpdCollInfo, 
                    bool m_IsUpdRecvInfo, 
                    bool m_IsHisLocationOrder, 
                    bool m_IsShowWindow, 
                    bool m_IsPromptErr, 
                    object userState) {
            if ((this.LabCreateOperationCompleted == null)) {
                this.LabCreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLabCreateOperationCompleted);
            }
            this.InvokeAsync("LabCreate", new object[] {
                        m_UpdateType,
                        m_HospitalID,
                        m_LabNum,
                        m_HospNum,
                        m_PatientName,
                        m_Sex,
                        m_Birthdate,
                        m_Age,
                        m_Age_Month,
                        m_Age_Day,
                        m_HEALTH_NUM,
                        m_Blood_Group,
                        m_LocationID,
                        m_LocationName,
                        m_Room_Num,
                        m_Bed_Num,
                        m_Doc_NO_AD_ID,
                        m_Doc_NO_AD_Name,
                        m_Doc_NO_CP1_ID,
                        m_Doc_NO_CP1_Name,
                        m_Doc_NO_CP2_ID,
                        m_Doc_NO_CP2_Name,
                        m_Doc_NO_CP3_ID,
                        m_Doc_NO_CP3_Name,
                        m_Ord_ID,
                        m_CFH,
                        m_Organ_ID,
                        m_Organ_Name,
                        m_OrdTime,
                        m_OrdbY,
                        m_CollTime,
                        m_CollBy,
                        m_CollAt,
                        m_Privacy,
                        m_PatientType,
                        m_Spec_Intm,
                        m_Comments,
                        m_Item_Code,
                        m_Item_GroupCode,
                        m_Item_LabSource,
                        m_Item_Container,
                        m_Item_Priority,
                        m_Item_IsDel,
                        m_Item_Price,
                        m_IsUpdCollInfo,
                        m_IsUpdRecvInfo,
                        m_IsHisLocationOrder,
                        m_IsShowWindow,
                        m_IsPromptErr}, this.LabCreateOperationCompleted, userState);
        }
        
        private void OnLabCreateOperationCompleted(object arg) {
            if ((this.LabCreateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LabCreateCompleted(this, new LabCreateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertMedicalAdvices", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public LisBackMedicalAdviceInfo[] InsertMedicalAdvices(HisMedicalAdviceInfo[] hisMedicalAdvices) {
            object[] results = this.Invoke("InsertMedicalAdvices", new object[] {
                        hisMedicalAdvices});
            return ((LisBackMedicalAdviceInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void InsertMedicalAdvicesAsync(HisMedicalAdviceInfo[] hisMedicalAdvices) {
            this.InsertMedicalAdvicesAsync(hisMedicalAdvices, null);
        }
        
        /// <remarks/>
        public void InsertMedicalAdvicesAsync(HisMedicalAdviceInfo[] hisMedicalAdvices, object userState) {
            if ((this.InsertMedicalAdvicesOperationCompleted == null)) {
                this.InsertMedicalAdvicesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertMedicalAdvicesOperationCompleted);
            }
            this.InvokeAsync("InsertMedicalAdvices", new object[] {
                        hisMedicalAdvices}, this.InsertMedicalAdvicesOperationCompleted, userState);
        }
        
        private void OnInsertMedicalAdvicesOperationCompleted(object arg) {
            if ((this.InsertMedicalAdvicesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertMedicalAdvicesCompleted(this, new InsertMedicalAdvicesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetHospitals", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public HOSPITALinfo[] GetHospitals() {
            object[] results = this.Invoke("GetHospitals", new object[0]);
            return ((HOSPITALinfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetHospitalsAsync() {
            this.GetHospitalsAsync(null);
        }
        
        /// <remarks/>
        public void GetHospitalsAsync(object userState) {
            if ((this.GetHospitalsOperationCompleted == null)) {
                this.GetHospitalsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHospitalsOperationCompleted);
            }
            this.InvokeAsync("GetHospitals", new object[0], this.GetHospitalsOperationCompleted, userState);
        }
        
        private void OnGetHospitalsOperationCompleted(object arg) {
            if ((this.GetHospitalsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHospitalsCompleted(this, new GetHospitalsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSrcinfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SRCINFOinfo[] GetSrcinfo() {
            object[] results = this.Invoke("GetSrcinfo", new object[0]);
            return ((SRCINFOinfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSrcinfoAsync() {
            this.GetSrcinfoAsync(null);
        }
        
        /// <remarks/>
        public void GetSrcinfoAsync(object userState) {
            if ((this.GetSrcinfoOperationCompleted == null)) {
                this.GetSrcinfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSrcinfoOperationCompleted);
            }
            this.InvokeAsync("GetSrcinfo", new object[0], this.GetSrcinfoOperationCompleted, userState);
        }
        
        private void OnGetSrcinfoOperationCompleted(object arg) {
            if ((this.GetSrcinfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSrcinfoCompleted(this, new GetSrcinfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDepHeads", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DEPHEADinfo[] GetDepHeads() {
            object[] results = this.Invoke("GetDepHeads", new object[0]);
            return ((DEPHEADinfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDepHeadsAsync() {
            this.GetDepHeadsAsync(null);
        }
        
        /// <remarks/>
        public void GetDepHeadsAsync(object userState) {
            if ((this.GetDepHeadsOperationCompleted == null)) {
                this.GetDepHeadsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDepHeadsOperationCompleted);
            }
            this.InvokeAsync("GetDepHeads", new object[0], this.GetDepHeadsOperationCompleted, userState);
        }
        
        private void OnGetDepHeadsOperationCompleted(object arg) {
            if ((this.GetDepHeadsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDepHeadsCompleted(this, new GetDepHeadsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LAB_REFList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public LAB_REFinfo[] LAB_REFList() {
            object[] results = this.Invoke("LAB_REFList", new object[0]);
            return ((LAB_REFinfo[])(results[0]));
        }
        
        /// <remarks/>
        public void LAB_REFListAsync() {
            this.LAB_REFListAsync(null);
        }
        
        /// <remarks/>
        public void LAB_REFListAsync(object userState) {
            if ((this.LAB_REFListOperationCompleted == null)) {
                this.LAB_REFListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLAB_REFListOperationCompleted);
            }
            this.InvokeAsync("LAB_REFList", new object[0], this.LAB_REFListOperationCompleted, userState);
        }
        
        private void OnLAB_REFListOperationCompleted(object arg) {
            if ((this.LAB_REFListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LAB_REFListCompleted(this, new LAB_REFListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMachine", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MACHINEinfo[] GetMachine() {
            object[] results = this.Invoke("GetMachine", new object[0]);
            return ((MACHINEinfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMachineAsync() {
            this.GetMachineAsync(null);
        }
        
        /// <remarks/>
        public void GetMachineAsync(object userState) {
            if ((this.GetMachineOperationCompleted == null)) {
                this.GetMachineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMachineOperationCompleted);
            }
            this.InvokeAsync("GetMachine", new object[0], this.GetMachineOperationCompleted, userState);
        }
        
        private void OnGetMachineOperationCompleted(object arg) {
            if ((this.GetMachineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMachineCompleted(this, new GetMachineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLocation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetLocation() {
            object[] results = this.Invoke("GetLocation", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetLocationAsync() {
            this.GetLocationAsync(null);
        }
        
        /// <remarks/>
        public void GetLocationAsync(object userState) {
            if ((this.GetLocationOperationCompleted == null)) {
                this.GetLocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLocationOperationCompleted);
            }
            this.InvokeAsync("GetLocation", new object[0], this.GetLocationOperationCompleted, userState);
        }
        
        private void OnGetLocationOperationCompleted(object arg) {
            if ((this.GetLocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLocationCompleted(this, new GetLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetHealthCareUnit", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public HealthCareUnitInfo[] GetHealthCareUnit() {
            object[] results = this.Invoke("GetHealthCareUnit", new object[0]);
            return ((HealthCareUnitInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetHealthCareUnitAsync() {
            this.GetHealthCareUnitAsync(null);
        }
        
        /// <remarks/>
        public void GetHealthCareUnitAsync(object userState) {
            if ((this.GetHealthCareUnitOperationCompleted == null)) {
                this.GetHealthCareUnitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHealthCareUnitOperationCompleted);
            }
            this.InvokeAsync("GetHealthCareUnit", new object[0], this.GetHealthCareUnitOperationCompleted, userState);
        }
        
        private void OnGetHealthCareUnitOperationCompleted(object arg) {
            if ((this.GetHealthCareUnitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHealthCareUnitCompleted(this, new GetHealthCareUnitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Page_PaintResultS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Page_PaintResultS(
                    int Page, 
                    int PageSize, 
                    System.DateTime StartDate, 
                    System.DateTime EndDate, 
                    string HospitalID, 
                    string LabNum, 
                    string HosNo, 
                    string PaintName, 
                    string PaintType, 
                    string State, 
                    string DeptHead, 
                    string deptcode, 
                    string LabRef_ID, 
                    string mach_code, 
                    string Ord_By, 
                    string loc_code, 
                    string bed_num, 
                    string organ_ID, 
                    string code, 
                    bool flag) {
            object[] results = this.Invoke("Page_PaintResultS", new object[] {
                        Page,
                        PageSize,
                        StartDate,
                        EndDate,
                        HospitalID,
                        LabNum,
                        HosNo,
                        PaintName,
                        PaintType,
                        State,
                        DeptHead,
                        deptcode,
                        LabRef_ID,
                        mach_code,
                        Ord_By,
                        loc_code,
                        bed_num,
                        organ_ID,
                        code,
                        flag});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Page_PaintResultSAsync(
                    int Page, 
                    int PageSize, 
                    System.DateTime StartDate, 
                    System.DateTime EndDate, 
                    string HospitalID, 
                    string LabNum, 
                    string HosNo, 
                    string PaintName, 
                    string PaintType, 
                    string State, 
                    string DeptHead, 
                    string deptcode, 
                    string LabRef_ID, 
                    string mach_code, 
                    string Ord_By, 
                    string loc_code, 
                    string bed_num, 
                    string organ_ID, 
                    string code, 
                    bool flag) {
            this.Page_PaintResultSAsync(Page, PageSize, StartDate, EndDate, HospitalID, LabNum, HosNo, PaintName, PaintType, State, DeptHead, deptcode, LabRef_ID, mach_code, Ord_By, loc_code, bed_num, organ_ID, code, flag, null);
        }
        
        /// <remarks/>
        public void Page_PaintResultSAsync(
                    int Page, 
                    int PageSize, 
                    System.DateTime StartDate, 
                    System.DateTime EndDate, 
                    string HospitalID, 
                    string LabNum, 
                    string HosNo, 
                    string PaintName, 
                    string PaintType, 
                    string State, 
                    string DeptHead, 
                    string deptcode, 
                    string LabRef_ID, 
                    string mach_code, 
                    string Ord_By, 
                    string loc_code, 
                    string bed_num, 
                    string organ_ID, 
                    string code, 
                    bool flag, 
                    object userState) {
            if ((this.Page_PaintResultSOperationCompleted == null)) {
                this.Page_PaintResultSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPage_PaintResultSOperationCompleted);
            }
            this.InvokeAsync("Page_PaintResultS", new object[] {
                        Page,
                        PageSize,
                        StartDate,
                        EndDate,
                        HospitalID,
                        LabNum,
                        HosNo,
                        PaintName,
                        PaintType,
                        State,
                        DeptHead,
                        deptcode,
                        LabRef_ID,
                        mach_code,
                        Ord_By,
                        loc_code,
                        bed_num,
                        organ_ID,
                        code,
                        flag}, this.Page_PaintResultSOperationCompleted, userState);
        }
        
        private void OnPage_PaintResultSOperationCompleted(object arg) {
            if ((this.Page_PaintResultSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Page_PaintResultSCompleted(this, new Page_PaintResultSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Page_PaintResultS_1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Page_PaintResultS_1(
                    int Page, 
                    int PageSize, 
                    System.DateTime StartDate, 
                    System.DateTime EndDate, 
                    string HospitalID, 
                    string LabNum, 
                    string HosNo, 
                    string PaintName, 
                    string PaintType, 
                    string State, 
                    string DeptHead, 
                    string deptcode, 
                    string LabRef_ID, 
                    string mach_code, 
                    string Ord_By, 
                    string loc_code, 
                    string bed_num, 
                    string organ_ID, 
                    string code, 
                    bool flag, 
                    string loc_Name, 
                    string limitLocCode, 
                    string limitLocName, 
                    bool blnExtenOthLoc) {
            object[] results = this.Invoke("Page_PaintResultS_1", new object[] {
                        Page,
                        PageSize,
                        StartDate,
                        EndDate,
                        HospitalID,
                        LabNum,
                        HosNo,
                        PaintName,
                        PaintType,
                        State,
                        DeptHead,
                        deptcode,
                        LabRef_ID,
                        mach_code,
                        Ord_By,
                        loc_code,
                        bed_num,
                        organ_ID,
                        code,
                        flag,
                        loc_Name,
                        limitLocCode,
                        limitLocName,
                        blnExtenOthLoc});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Page_PaintResultS_1Async(
                    int Page, 
                    int PageSize, 
                    System.DateTime StartDate, 
                    System.DateTime EndDate, 
                    string HospitalID, 
                    string LabNum, 
                    string HosNo, 
                    string PaintName, 
                    string PaintType, 
                    string State, 
                    string DeptHead, 
                    string deptcode, 
                    string LabRef_ID, 
                    string mach_code, 
                    string Ord_By, 
                    string loc_code, 
                    string bed_num, 
                    string organ_ID, 
                    string code, 
                    bool flag, 
                    string loc_Name, 
                    string limitLocCode, 
                    string limitLocName, 
                    bool blnExtenOthLoc) {
            this.Page_PaintResultS_1Async(Page, PageSize, StartDate, EndDate, HospitalID, LabNum, HosNo, PaintName, PaintType, State, DeptHead, deptcode, LabRef_ID, mach_code, Ord_By, loc_code, bed_num, organ_ID, code, flag, loc_Name, limitLocCode, limitLocName, blnExtenOthLoc, null);
        }
        
        /// <remarks/>
        public void Page_PaintResultS_1Async(
                    int Page, 
                    int PageSize, 
                    System.DateTime StartDate, 
                    System.DateTime EndDate, 
                    string HospitalID, 
                    string LabNum, 
                    string HosNo, 
                    string PaintName, 
                    string PaintType, 
                    string State, 
                    string DeptHead, 
                    string deptcode, 
                    string LabRef_ID, 
                    string mach_code, 
                    string Ord_By, 
                    string loc_code, 
                    string bed_num, 
                    string organ_ID, 
                    string code, 
                    bool flag, 
                    string loc_Name, 
                    string limitLocCode, 
                    string limitLocName, 
                    bool blnExtenOthLoc, 
                    object userState) {
            if ((this.Page_PaintResultS_1OperationCompleted == null)) {
                this.Page_PaintResultS_1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnPage_PaintResultS_1OperationCompleted);
            }
            this.InvokeAsync("Page_PaintResultS_1", new object[] {
                        Page,
                        PageSize,
                        StartDate,
                        EndDate,
                        HospitalID,
                        LabNum,
                        HosNo,
                        PaintName,
                        PaintType,
                        State,
                        DeptHead,
                        deptcode,
                        LabRef_ID,
                        mach_code,
                        Ord_By,
                        loc_code,
                        bed_num,
                        organ_ID,
                        code,
                        flag,
                        loc_Name,
                        limitLocCode,
                        limitLocName,
                        blnExtenOthLoc}, this.Page_PaintResultS_1OperationCompleted, userState);
        }
        
        private void OnPage_PaintResultS_1OperationCompleted(object arg) {
            if ((this.Page_PaintResultS_1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Page_PaintResultS_1Completed(this, new Page_PaintResultS_1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/fastPaintResultS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet fastPaintResultS(int Page, int PageSize, string State, string LabNum, bool privacy) {
            object[] results = this.Invoke("fastPaintResultS", new object[] {
                        Page,
                        PageSize,
                        State,
                        LabNum,
                        privacy});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void fastPaintResultSAsync(int Page, int PageSize, string State, string LabNum, bool privacy) {
            this.fastPaintResultSAsync(Page, PageSize, State, LabNum, privacy, null);
        }
        
        /// <remarks/>
        public void fastPaintResultSAsync(int Page, int PageSize, string State, string LabNum, bool privacy, object userState) {
            if ((this.fastPaintResultSOperationCompleted == null)) {
                this.fastPaintResultSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfastPaintResultSOperationCompleted);
            }
            this.InvokeAsync("fastPaintResultS", new object[] {
                        Page,
                        PageSize,
                        State,
                        LabNum,
                        privacy}, this.fastPaintResultSOperationCompleted, userState);
        }
        
        private void OnfastPaintResultSOperationCompleted(object arg) {
            if ((this.fastPaintResultSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fastPaintResultSCompleted(this, new fastPaintResultSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/fastPaintResultS_1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet fastPaintResultS_1(int Page, int PageSize, string State, string LabNum, bool privacy, string limitLocCode, string limitLocName, bool blnExtenOthLoc) {
            object[] results = this.Invoke("fastPaintResultS_1", new object[] {
                        Page,
                        PageSize,
                        State,
                        LabNum,
                        privacy,
                        limitLocCode,
                        limitLocName,
                        blnExtenOthLoc});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void fastPaintResultS_1Async(int Page, int PageSize, string State, string LabNum, bool privacy, string limitLocCode, string limitLocName, bool blnExtenOthLoc) {
            this.fastPaintResultS_1Async(Page, PageSize, State, LabNum, privacy, limitLocCode, limitLocName, blnExtenOthLoc, null);
        }
        
        /// <remarks/>
        public void fastPaintResultS_1Async(int Page, int PageSize, string State, string LabNum, bool privacy, string limitLocCode, string limitLocName, bool blnExtenOthLoc, object userState) {
            if ((this.fastPaintResultS_1OperationCompleted == null)) {
                this.fastPaintResultS_1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnfastPaintResultS_1OperationCompleted);
            }
            this.InvokeAsync("fastPaintResultS_1", new object[] {
                        Page,
                        PageSize,
                        State,
                        LabNum,
                        privacy,
                        limitLocCode,
                        limitLocName,
                        blnExtenOthLoc}, this.fastPaintResultS_1OperationCompleted, userState);
        }
        
        private void OnfastPaintResultS_1OperationCompleted(object arg) {
            if ((this.fastPaintResultS_1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fastPaintResultS_1Completed(this, new fastPaintResultS_1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/fastPaintResultSByHospitalID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet fastPaintResultSByHospitalID(int Page, int PageSize, string State, string LabNum, bool privacy, string HospitalID) {
            object[] results = this.Invoke("fastPaintResultSByHospitalID", new object[] {
                        Page,
                        PageSize,
                        State,
                        LabNum,
                        privacy,
                        HospitalID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void fastPaintResultSByHospitalIDAsync(int Page, int PageSize, string State, string LabNum, bool privacy, string HospitalID) {
            this.fastPaintResultSByHospitalIDAsync(Page, PageSize, State, LabNum, privacy, HospitalID, null);
        }
        
        /// <remarks/>
        public void fastPaintResultSByHospitalIDAsync(int Page, int PageSize, string State, string LabNum, bool privacy, string HospitalID, object userState) {
            if ((this.fastPaintResultSByHospitalIDOperationCompleted == null)) {
                this.fastPaintResultSByHospitalIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfastPaintResultSByHospitalIDOperationCompleted);
            }
            this.InvokeAsync("fastPaintResultSByHospitalID", new object[] {
                        Page,
                        PageSize,
                        State,
                        LabNum,
                        privacy,
                        HospitalID}, this.fastPaintResultSByHospitalIDOperationCompleted, userState);
        }
        
        private void OnfastPaintResultSByHospitalIDOperationCompleted(object arg) {
            if ((this.fastPaintResultSByHospitalIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fastPaintResultSByHospitalIDCompleted(this, new fastPaintResultSByHospitalIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/fastPaintResultSByHospitalID_1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet fastPaintResultSByHospitalID_1(int Page, int PageSize, string State, string LabNum, bool privacy, string HospitalID, string limitLocCode, string limitLocName, bool blnExtenOthLoc) {
            object[] results = this.Invoke("fastPaintResultSByHospitalID_1", new object[] {
                        Page,
                        PageSize,
                        State,
                        LabNum,
                        privacy,
                        HospitalID,
                        limitLocCode,
                        limitLocName,
                        blnExtenOthLoc});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void fastPaintResultSByHospitalID_1Async(int Page, int PageSize, string State, string LabNum, bool privacy, string HospitalID, string limitLocCode, string limitLocName, bool blnExtenOthLoc) {
            this.fastPaintResultSByHospitalID_1Async(Page, PageSize, State, LabNum, privacy, HospitalID, limitLocCode, limitLocName, blnExtenOthLoc, null);
        }
        
        /// <remarks/>
        public void fastPaintResultSByHospitalID_1Async(int Page, int PageSize, string State, string LabNum, bool privacy, string HospitalID, string limitLocCode, string limitLocName, bool blnExtenOthLoc, object userState) {
            if ((this.fastPaintResultSByHospitalID_1OperationCompleted == null)) {
                this.fastPaintResultSByHospitalID_1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnfastPaintResultSByHospitalID_1OperationCompleted);
            }
            this.InvokeAsync("fastPaintResultSByHospitalID_1", new object[] {
                        Page,
                        PageSize,
                        State,
                        LabNum,
                        privacy,
                        HospitalID,
                        limitLocCode,
                        limitLocName,
                        blnExtenOthLoc}, this.fastPaintResultSByHospitalID_1OperationCompleted, userState);
        }
        
        private void OnfastPaintResultSByHospitalID_1OperationCompleted(object arg) {
            if ((this.fastPaintResultSByHospitalID_1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fastPaintResultSByHospitalID_1Completed(this, new fastPaintResultSByHospitalID_1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PagePaintResultS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PaintResult[] PagePaintResultS(
                    int Page, 
                    int PageSize, 
                    System.DateTime StartDate, 
                    System.DateTime EndDate, 
                    string HospitalID, 
                    string LabNum, 
                    string HosNo, 
                    string PaintName, 
                    string PaintType, 
                    string State, 
                    string DeptHead, 
                    string deptcode, 
                    string LabRef_ID, 
                    string mach_code, 
                    string Ord_By, 
                    string loc_code, 
                    string bed_num, 
                    string organ_ID, 
                    string code) {
            object[] results = this.Invoke("PagePaintResultS", new object[] {
                        Page,
                        PageSize,
                        StartDate,
                        EndDate,
                        HospitalID,
                        LabNum,
                        HosNo,
                        PaintName,
                        PaintType,
                        State,
                        DeptHead,
                        deptcode,
                        LabRef_ID,
                        mach_code,
                        Ord_By,
                        loc_code,
                        bed_num,
                        organ_ID,
                        code});
            return ((PaintResult[])(results[0]));
        }
        
        /// <remarks/>
        public void PagePaintResultSAsync(
                    int Page, 
                    int PageSize, 
                    System.DateTime StartDate, 
                    System.DateTime EndDate, 
                    string HospitalID, 
                    string LabNum, 
                    string HosNo, 
                    string PaintName, 
                    string PaintType, 
                    string State, 
                    string DeptHead, 
                    string deptcode, 
                    string LabRef_ID, 
                    string mach_code, 
                    string Ord_By, 
                    string loc_code, 
                    string bed_num, 
                    string organ_ID, 
                    string code) {
            this.PagePaintResultSAsync(Page, PageSize, StartDate, EndDate, HospitalID, LabNum, HosNo, PaintName, PaintType, State, DeptHead, deptcode, LabRef_ID, mach_code, Ord_By, loc_code, bed_num, organ_ID, code, null);
        }
        
        /// <remarks/>
        public void PagePaintResultSAsync(
                    int Page, 
                    int PageSize, 
                    System.DateTime StartDate, 
                    System.DateTime EndDate, 
                    string HospitalID, 
                    string LabNum, 
                    string HosNo, 
                    string PaintName, 
                    string PaintType, 
                    string State, 
                    string DeptHead, 
                    string deptcode, 
                    string LabRef_ID, 
                    string mach_code, 
                    string Ord_By, 
                    string loc_code, 
                    string bed_num, 
                    string organ_ID, 
                    string code, 
                    object userState) {
            if ((this.PagePaintResultSOperationCompleted == null)) {
                this.PagePaintResultSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPagePaintResultSOperationCompleted);
            }
            this.InvokeAsync("PagePaintResultS", new object[] {
                        Page,
                        PageSize,
                        StartDate,
                        EndDate,
                        HospitalID,
                        LabNum,
                        HosNo,
                        PaintName,
                        PaintType,
                        State,
                        DeptHead,
                        deptcode,
                        LabRef_ID,
                        mach_code,
                        Ord_By,
                        loc_code,
                        bed_num,
                        organ_ID,
                        code}, this.PagePaintResultSOperationCompleted, userState);
        }
        
        private void OnPagePaintResultSOperationCompleted(object arg) {
            if ((this.PagePaintResultSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PagePaintResultSCompleted(this, new PagePaintResultSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getgetMACHDESC", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getgetMACHDESC(string lab_num) {
            object[] results = this.Invoke("getgetMACHDESC", new object[] {
                        lab_num});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getgetMACHDESCAsync(string lab_num) {
            this.getgetMACHDESCAsync(lab_num, null);
        }
        
        /// <remarks/>
        public void getgetMACHDESCAsync(string lab_num, object userState) {
            if ((this.getgetMACHDESCOperationCompleted == null)) {
                this.getgetMACHDESCOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetgetMACHDESCOperationCompleted);
            }
            this.InvokeAsync("getgetMACHDESC", new object[] {
                        lab_num}, this.getgetMACHDESCOperationCompleted, userState);
        }
        
        private void OngetgetMACHDESCOperationCompleted(object arg) {
            if ((this.getgetMACHDESCCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getgetMACHDESCCompleted(this, new getgetMACHDESCCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/StateName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string StateName(string lab_num) {
            object[] results = this.Invoke("StateName", new object[] {
                        lab_num});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void StateNameAsync(string lab_num) {
            this.StateNameAsync(lab_num, null);
        }
        
        /// <remarks/>
        public void StateNameAsync(string lab_num, object userState) {
            if ((this.StateNameOperationCompleted == null)) {
                this.StateNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStateNameOperationCompleted);
            }
            this.InvokeAsync("StateName", new object[] {
                        lab_num}, this.StateNameOperationCompleted, userState);
        }
        
        private void OnStateNameOperationCompleted(object arg) {
            if ((this.StateNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StateNameCompleted(this, new StateNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTestRenark", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetTestRenark(string labnum, string testtype) {
            object[] results = this.Invoke("GetTestRenark", new object[] {
                        labnum,
                        testtype});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTestRenarkAsync(string labnum, string testtype) {
            this.GetTestRenarkAsync(labnum, testtype, null);
        }
        
        /// <remarks/>
        public void GetTestRenarkAsync(string labnum, string testtype, object userState) {
            if ((this.GetTestRenarkOperationCompleted == null)) {
                this.GetTestRenarkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTestRenarkOperationCompleted);
            }
            this.InvokeAsync("GetTestRenark", new object[] {
                        labnum,
                        testtype}, this.GetTestRenarkOperationCompleted, userState);
        }
        
        private void OnGetTestRenarkOperationCompleted(object arg) {
            if ((this.GetTestRenarkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTestRenarkCompleted(this, new GetTestRenarkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTestItemsDesc", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetTestItemsDesc(string lab_num) {
            object[] results = this.Invoke("GetTestItemsDesc", new object[] {
                        lab_num});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTestItemsDescAsync(string lab_num) {
            this.GetTestItemsDescAsync(lab_num, null);
        }
        
        /// <remarks/>
        public void GetTestItemsDescAsync(string lab_num, object userState) {
            if ((this.GetTestItemsDescOperationCompleted == null)) {
                this.GetTestItemsDescOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTestItemsDescOperationCompleted);
            }
            this.InvokeAsync("GetTestItemsDesc", new object[] {
                        lab_num}, this.GetTestItemsDescOperationCompleted, userState);
        }
        
        private void OnGetTestItemsDescOperationCompleted(object arg) {
            if ((this.GetTestItemsDescCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTestItemsDescCompleted(this, new GetTestItemsDescCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetIsRight", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetIsRight(string persion, string p_UserID) {
            object[] results = this.Invoke("GetIsRight", new object[] {
                        persion,
                        p_UserID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetIsRightAsync(string persion, string p_UserID) {
            this.GetIsRightAsync(persion, p_UserID, null);
        }
        
        /// <remarks/>
        public void GetIsRightAsync(string persion, string p_UserID, object userState) {
            if ((this.GetIsRightOperationCompleted == null)) {
                this.GetIsRightOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetIsRightOperationCompleted);
            }
            this.InvokeAsync("GetIsRight", new object[] {
                        persion,
                        p_UserID}, this.GetIsRightOperationCompleted, userState);
        }
        
        private void OnGetIsRightOperationCompleted(object arg) {
            if ((this.GetIsRightCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetIsRightCompleted(this, new GetIsRightCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/get_DataLoad_ItemsResult", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet get_DataLoad_ItemsResult(string labnum, string testtype, bool IsShow) {
            object[] results = this.Invoke("get_DataLoad_ItemsResult", new object[] {
                        labnum,
                        testtype,
                        IsShow});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void get_DataLoad_ItemsResultAsync(string labnum, string testtype, bool IsShow) {
            this.get_DataLoad_ItemsResultAsync(labnum, testtype, IsShow, null);
        }
        
        /// <remarks/>
        public void get_DataLoad_ItemsResultAsync(string labnum, string testtype, bool IsShow, object userState) {
            if ((this.get_DataLoad_ItemsResultOperationCompleted == null)) {
                this.get_DataLoad_ItemsResultOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_DataLoad_ItemsResultOperationCompleted);
            }
            this.InvokeAsync("get_DataLoad_ItemsResult", new object[] {
                        labnum,
                        testtype,
                        IsShow}, this.get_DataLoad_ItemsResultOperationCompleted, userState);
        }
        
        private void Onget_DataLoad_ItemsResultOperationCompleted(object arg) {
            if ((this.get_DataLoad_ItemsResultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.get_DataLoad_ItemsResultCompleted(this, new get_DataLoad_ItemsResultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/get_Load_ItemsInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet get_Load_ItemsInfo(string labnum) {
            object[] results = this.Invoke("get_Load_ItemsInfo", new object[] {
                        labnum});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void get_Load_ItemsInfoAsync(string labnum) {
            this.get_Load_ItemsInfoAsync(labnum, null);
        }
        
        /// <remarks/>
        public void get_Load_ItemsInfoAsync(string labnum, object userState) {
            if ((this.get_Load_ItemsInfoOperationCompleted == null)) {
                this.get_Load_ItemsInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_Load_ItemsInfoOperationCompleted);
            }
            this.InvokeAsync("get_Load_ItemsInfo", new object[] {
                        labnum}, this.get_Load_ItemsInfoOperationCompleted, userState);
        }
        
        private void Onget_Load_ItemsInfoOperationCompleted(object arg) {
            if ((this.get_Load_ItemsInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.get_Load_ItemsInfoCompleted(this, new get_Load_ItemsInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdatePrintBarCodeFlag", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdatePrintBarCodeFlag(string LabNum) {
            this.Invoke("UpdatePrintBarCodeFlag", new object[] {
                        LabNum});
        }
        
        /// <remarks/>
        public void UpdatePrintBarCodeFlagAsync(string LabNum) {
            this.UpdatePrintBarCodeFlagAsync(LabNum, null);
        }
        
        /// <remarks/>
        public void UpdatePrintBarCodeFlagAsync(string LabNum, object userState) {
            if ((this.UpdatePrintBarCodeFlagOperationCompleted == null)) {
                this.UpdatePrintBarCodeFlagOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePrintBarCodeFlagOperationCompleted);
            }
            this.InvokeAsync("UpdatePrintBarCodeFlag", new object[] {
                        LabNum}, this.UpdatePrintBarCodeFlagOperationCompleted, userState);
        }
        
        private void OnUpdatePrintBarCodeFlagOperationCompleted(object arg) {
            if ((this.UpdatePrintBarCodeFlagCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePrintBarCodeFlagCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ShowItemMean", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ShowItemMean(string code) {
            object[] results = this.Invoke("ShowItemMean", new object[] {
                        code});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ShowItemMeanAsync(string code) {
            this.ShowItemMeanAsync(code, null);
        }
        
        /// <remarks/>
        public void ShowItemMeanAsync(string code, object userState) {
            if ((this.ShowItemMeanOperationCompleted == null)) {
                this.ShowItemMeanOperationCompleted = new System.Threading.SendOrPostCallback(this.OnShowItemMeanOperationCompleted);
            }
            this.InvokeAsync("ShowItemMean", new object[] {
                        code}, this.ShowItemMeanOperationCompleted, userState);
        }
        
        private void OnShowItemMeanOperationCompleted(object arg) {
            if ((this.ShowItemMeanCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ShowItemMeanCompleted(this, new ShowItemMeanCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMachineByHospitalID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MACHINEinfo[] GetMachineByHospitalID(string HospitalID) {
            object[] results = this.Invoke("GetMachineByHospitalID", new object[] {
                        HospitalID});
            return ((MACHINEinfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMachineByHospitalIDAsync(string HospitalID) {
            this.GetMachineByHospitalIDAsync(HospitalID, null);
        }
        
        /// <remarks/>
        public void GetMachineByHospitalIDAsync(string HospitalID, object userState) {
            if ((this.GetMachineByHospitalIDOperationCompleted == null)) {
                this.GetMachineByHospitalIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMachineByHospitalIDOperationCompleted);
            }
            this.InvokeAsync("GetMachineByHospitalID", new object[] {
                        HospitalID}, this.GetMachineByHospitalIDOperationCompleted, userState);
        }
        
        private void OnGetMachineByHospitalIDOperationCompleted(object arg) {
            if ((this.GetMachineByHospitalIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMachineByHospitalIDCompleted(this, new GetMachineByHospitalIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getLabGroupLab", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getLabGroupLab(string InitCode) {
            object[] results = this.Invoke("getLabGroupLab", new object[] {
                        InitCode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getLabGroupLabAsync(string InitCode) {
            this.getLabGroupLabAsync(InitCode, null);
        }
        
        /// <remarks/>
        public void getLabGroupLabAsync(string InitCode, object userState) {
            if ((this.getLabGroupLabOperationCompleted == null)) {
                this.getLabGroupLabOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetLabGroupLabOperationCompleted);
            }
            this.InvokeAsync("getLabGroupLab", new object[] {
                        InitCode}, this.getLabGroupLabOperationCompleted, userState);
        }
        
        private void OngetLabGroupLabOperationCompleted(object arg) {
            if ((this.getLabGroupLabCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getLabGroupLabCompleted(this, new getLabGroupLabCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getLabPriceByCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getLabPriceByCode(string TestCode) {
            object[] results = this.Invoke("getLabPriceByCode", new object[] {
                        TestCode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getLabPriceByCodeAsync(string TestCode) {
            this.getLabPriceByCodeAsync(TestCode, null);
        }
        
        /// <remarks/>
        public void getLabPriceByCodeAsync(string TestCode, object userState) {
            if ((this.getLabPriceByCodeOperationCompleted == null)) {
                this.getLabPriceByCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetLabPriceByCodeOperationCompleted);
            }
            this.InvokeAsync("getLabPriceByCode", new object[] {
                        TestCode}, this.getLabPriceByCodeOperationCompleted, userState);
        }
        
        private void OngetLabPriceByCodeOperationCompleted(object arg) {
            if ((this.getLabPriceByCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getLabPriceByCodeCompleted(this, new getLabPriceByCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getTestTypeByInGroupInitCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getTestTypeByInGroupInitCode(string InitCode) {
            object[] results = this.Invoke("getTestTypeByInGroupInitCode", new object[] {
                        InitCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getTestTypeByInGroupInitCodeAsync(string InitCode) {
            this.getTestTypeByInGroupInitCodeAsync(InitCode, null);
        }
        
        /// <remarks/>
        public void getTestTypeByInGroupInitCodeAsync(string InitCode, object userState) {
            if ((this.getTestTypeByInGroupInitCodeOperationCompleted == null)) {
                this.getTestTypeByInGroupInitCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTestTypeByInGroupInitCodeOperationCompleted);
            }
            this.InvokeAsync("getTestTypeByInGroupInitCode", new object[] {
                        InitCode}, this.getTestTypeByInGroupInitCodeOperationCompleted, userState);
        }
        
        private void OngetTestTypeByInGroupInitCodeOperationCompleted(object arg) {
            if ((this.getTestTypeByInGroupInitCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTestTypeByInGroupInitCodeCompleted(this, new getTestTypeByInGroupInitCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetContainers", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CONTAINERinfo[] GetContainers() {
            object[] results = this.Invoke("GetContainers", new object[0]);
            return ((CONTAINERinfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetContainersAsync() {
            this.GetContainersAsync(null);
        }
        
        /// <remarks/>
        public void GetContainersAsync(object userState) {
            if ((this.GetContainersOperationCompleted == null)) {
                this.GetContainersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetContainersOperationCompleted);
            }
            this.InvokeAsync("GetContainers", new object[0], this.GetContainersOperationCompleted, userState);
        }
        
        private void OnGetContainersOperationCompleted(object arg) {
            if ((this.GetContainersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetContainersCompleted(this, new GetContainersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSources", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SourcesInfo[] GetSources(string InitCode) {
            object[] results = this.Invoke("GetSources", new object[] {
                        InitCode});
            return ((SourcesInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSourcesAsync(string InitCode) {
            this.GetSourcesAsync(InitCode, null);
        }
        
        /// <remarks/>
        public void GetSourcesAsync(string InitCode, object userState) {
            if ((this.GetSourcesOperationCompleted == null)) {
                this.GetSourcesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSourcesOperationCompleted);
            }
            this.InvokeAsync("GetSources", new object[] {
                        InitCode}, this.GetSourcesOperationCompleted, userState);
        }
        
        private void OnGetSourcesOperationCompleted(object arg) {
            if ((this.GetSourcesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSourcesCompleted(this, new GetSourcesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetExtmthds", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EXTMTHDinfo[] GetExtmthds(string InitCode) {
            object[] results = this.Invoke("GetExtmthds", new object[] {
                        InitCode});
            return ((EXTMTHDinfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetExtmthdsAsync(string InitCode) {
            this.GetExtmthdsAsync(InitCode, null);
        }
        
        /// <remarks/>
        public void GetExtmthdsAsync(string InitCode, object userState) {
            if ((this.GetExtmthdsOperationCompleted == null)) {
                this.GetExtmthdsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetExtmthdsOperationCompleted);
            }
            this.InvokeAsync("GetExtmthds", new object[] {
                        InitCode}, this.GetExtmthdsOperationCompleted, userState);
        }
        
        private void OnGetExtmthdsOperationCompleted(object arg) {
            if ((this.GetExtmthdsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetExtmthdsCompleted(this, new GetExtmthdsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getLabPriceSourse", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getLabPriceSourse(string InitCode, string testtype) {
            object[] results = this.Invoke("getLabPriceSourse", new object[] {
                        InitCode,
                        testtype});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getLabPriceSourseAsync(string InitCode, string testtype) {
            this.getLabPriceSourseAsync(InitCode, testtype, null);
        }
        
        /// <remarks/>
        public void getLabPriceSourseAsync(string InitCode, string testtype, object userState) {
            if ((this.getLabPriceSourseOperationCompleted == null)) {
                this.getLabPriceSourseOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetLabPriceSourseOperationCompleted);
            }
            this.InvokeAsync("getLabPriceSourse", new object[] {
                        InitCode,
                        testtype}, this.getLabPriceSourseOperationCompleted, userState);
        }
        
        private void OngetLabPriceSourseOperationCompleted(object arg) {
            if ((this.getLabPriceSourseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getLabPriceSourseCompleted(this, new getLabPriceSourseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getLabPriceSourseBySrcID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getLabPriceSourseBySrcID(string InitCode, string testtype, string strSourceID) {
            object[] results = this.Invoke("getLabPriceSourseBySrcID", new object[] {
                        InitCode,
                        testtype,
                        strSourceID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getLabPriceSourseBySrcIDAsync(string InitCode, string testtype, string strSourceID) {
            this.getLabPriceSourseBySrcIDAsync(InitCode, testtype, strSourceID, null);
        }
        
        /// <remarks/>
        public void getLabPriceSourseBySrcIDAsync(string InitCode, string testtype, string strSourceID, object userState) {
            if ((this.getLabPriceSourseBySrcIDOperationCompleted == null)) {
                this.getLabPriceSourseBySrcIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetLabPriceSourseBySrcIDOperationCompleted);
            }
            this.InvokeAsync("getLabPriceSourseBySrcID", new object[] {
                        InitCode,
                        testtype,
                        strSourceID}, this.getLabPriceSourseBySrcIDOperationCompleted, userState);
        }
        
        private void OngetLabPriceSourseBySrcIDOperationCompleted(object arg) {
            if ((this.getLabPriceSourseBySrcIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getLabPriceSourseBySrcIDCompleted(this, new getLabPriceSourseBySrcIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSourcesList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SourcesInfo[] GetSourcesList(string[] sourse) {
            object[] results = this.Invoke("GetSourcesList", new object[] {
                        sourse});
            return ((SourcesInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSourcesListAsync(string[] sourse) {
            this.GetSourcesListAsync(sourse, null);
        }
        
        /// <remarks/>
        public void GetSourcesListAsync(string[] sourse, object userState) {
            if ((this.GetSourcesListOperationCompleted == null)) {
                this.GetSourcesListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSourcesListOperationCompleted);
            }
            this.InvokeAsync("GetSourcesList", new object[] {
                        sourse}, this.GetSourcesListOperationCompleted, userState);
        }
        
        private void OnGetSourcesListOperationCompleted(object arg) {
            if ((this.GetSourcesListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSourcesListCompleted(this, new GetSourcesListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertHisMedicalAdvices", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public LisBackMedicalAdviceInfo[] InsertHisMedicalAdvices(HisMedicalAdviceInfo[] HisMedicalAdviceInfoS) {
            object[] results = this.Invoke("InsertHisMedicalAdvices", new object[] {
                        HisMedicalAdviceInfoS});
            return ((LisBackMedicalAdviceInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void InsertHisMedicalAdvicesAsync(HisMedicalAdviceInfo[] HisMedicalAdviceInfoS) {
            this.InsertHisMedicalAdvicesAsync(HisMedicalAdviceInfoS, null);
        }
        
        /// <remarks/>
        public void InsertHisMedicalAdvicesAsync(HisMedicalAdviceInfo[] HisMedicalAdviceInfoS, object userState) {
            if ((this.InsertHisMedicalAdvicesOperationCompleted == null)) {
                this.InsertHisMedicalAdvicesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertHisMedicalAdvicesOperationCompleted);
            }
            this.InvokeAsync("InsertHisMedicalAdvices", new object[] {
                        HisMedicalAdviceInfoS}, this.InsertHisMedicalAdvicesOperationCompleted, userState);
        }
        
        private void OnInsertHisMedicalAdvicesOperationCompleted(object arg) {
            if ((this.InsertHisMedicalAdvicesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertHisMedicalAdvicesCompleted(this, new InsertHisMedicalAdvicesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getHisMedicalAdviceHeadByID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getHisMedicalAdviceHeadByID(System.Guid id) {
            object[] results = this.Invoke("getHisMedicalAdviceHeadByID", new object[] {
                        id});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getHisMedicalAdviceHeadByIDAsync(System.Guid id) {
            this.getHisMedicalAdviceHeadByIDAsync(id, null);
        }
        
        /// <remarks/>
        public void getHisMedicalAdviceHeadByIDAsync(System.Guid id, object userState) {
            if ((this.getHisMedicalAdviceHeadByIDOperationCompleted == null)) {
                this.getHisMedicalAdviceHeadByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetHisMedicalAdviceHeadByIDOperationCompleted);
            }
            this.InvokeAsync("getHisMedicalAdviceHeadByID", new object[] {
                        id}, this.getHisMedicalAdviceHeadByIDOperationCompleted, userState);
        }
        
        private void OngetHisMedicalAdviceHeadByIDOperationCompleted(object arg) {
            if ((this.getHisMedicalAdviceHeadByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getHisMedicalAdviceHeadByIDCompleted(this, new getHisMedicalAdviceHeadByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPriceByCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public HisPricesInfo GetPriceByCode(string Code) {
            object[] results = this.Invoke("GetPriceByCode", new object[] {
                        Code});
            return ((HisPricesInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetPriceByCodeAsync(string Code) {
            this.GetPriceByCodeAsync(Code, null);
        }
        
        /// <remarks/>
        public void GetPriceByCodeAsync(string Code, object userState) {
            if ((this.GetPriceByCodeOperationCompleted == null)) {
                this.GetPriceByCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPriceByCodeOperationCompleted);
            }
            this.InvokeAsync("GetPriceByCode", new object[] {
                        Code}, this.GetPriceByCodeOperationCompleted, userState);
        }
        
        private void OnGetPriceByCodeOperationCompleted(object arg) {
            if ((this.GetPriceByCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPriceByCodeCompleted(this, new GetPriceByCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPricesByCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public HisPricesInfo GetPricesByCode(string Code) {
            object[] results = this.Invoke("GetPricesByCode", new object[] {
                        Code});
            return ((HisPricesInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetPricesByCodeAsync(string Code) {
            this.GetPricesByCodeAsync(Code, null);
        }
        
        /// <remarks/>
        public void GetPricesByCodeAsync(string Code, object userState) {
            if ((this.GetPricesByCodeOperationCompleted == null)) {
                this.GetPricesByCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPricesByCodeOperationCompleted);
            }
            this.InvokeAsync("GetPricesByCode", new object[] {
                        Code}, this.GetPricesByCodeOperationCompleted, userState);
        }
        
        private void OnGetPricesByCodeOperationCompleted(object arg) {
            if ((this.GetPricesByCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPricesByCodeCompleted(this, new GetPricesByCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getApprovalLog", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getApprovalLog(string LabNum) {
            object[] results = this.Invoke("getApprovalLog", new object[] {
                        LabNum});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getApprovalLogAsync(string LabNum) {
            this.getApprovalLogAsync(LabNum, null);
        }
        
        /// <remarks/>
        public void getApprovalLogAsync(string LabNum, object userState) {
            if ((this.getApprovalLogOperationCompleted == null)) {
                this.getApprovalLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetApprovalLogOperationCompleted);
            }
            this.InvokeAsync("getApprovalLog", new object[] {
                        LabNum}, this.getApprovalLogOperationCompleted, userState);
        }
        
        private void OngetApprovalLogOperationCompleted(object arg) {
            if ((this.getApprovalLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getApprovalLogCompleted(this, new getApprovalLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTestTypes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TestTypeInfo[] GetTestTypes() {
            object[] results = this.Invoke("GetTestTypes", new object[0]);
            return ((TestTypeInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTestTypesAsync() {
            this.GetTestTypesAsync(null);
        }
        
        /// <remarks/>
        public void GetTestTypesAsync(object userState) {
            if ((this.GetTestTypesOperationCompleted == null)) {
                this.GetTestTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTestTypesOperationCompleted);
            }
            this.InvokeAsync("GetTestTypes", new object[0], this.GetTestTypesOperationCompleted, userState);
        }
        
        private void OnGetTestTypesOperationCompleted(object arg) {
            if ((this.GetTestTypesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTestTypesCompleted(this, new GetTestTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/get_DataLoad_HistoryResult", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet get_DataLoad_HistoryResult(string HospNum, System.DateTime StartDate, System.DateTime EndDate, string int_tcode) {
            object[] results = this.Invoke("get_DataLoad_HistoryResult", new object[] {
                        HospNum,
                        StartDate,
                        EndDate,
                        int_tcode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void get_DataLoad_HistoryResultAsync(string HospNum, System.DateTime StartDate, System.DateTime EndDate, string int_tcode) {
            this.get_DataLoad_HistoryResultAsync(HospNum, StartDate, EndDate, int_tcode, null);
        }
        
        /// <remarks/>
        public void get_DataLoad_HistoryResultAsync(string HospNum, System.DateTime StartDate, System.DateTime EndDate, string int_tcode, object userState) {
            if ((this.get_DataLoad_HistoryResultOperationCompleted == null)) {
                this.get_DataLoad_HistoryResultOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_DataLoad_HistoryResultOperationCompleted);
            }
            this.InvokeAsync("get_DataLoad_HistoryResult", new object[] {
                        HospNum,
                        StartDate,
                        EndDate,
                        int_tcode}, this.get_DataLoad_HistoryResultOperationCompleted, userState);
        }
        
        private void Onget_DataLoad_HistoryResultOperationCompleted(object arg) {
            if ((this.get_DataLoad_HistoryResultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.get_DataLoad_HistoryResultCompleted(this, new get_DataLoad_HistoryResultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/get_DataLoad_Items", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet get_DataLoad_Items(string HospNum, System.DateTime StartDate, System.DateTime EndDate, string TestType) {
            object[] results = this.Invoke("get_DataLoad_Items", new object[] {
                        HospNum,
                        StartDate,
                        EndDate,
                        TestType});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void get_DataLoad_ItemsAsync(string HospNum, System.DateTime StartDate, System.DateTime EndDate, string TestType) {
            this.get_DataLoad_ItemsAsync(HospNum, StartDate, EndDate, TestType, null);
        }
        
        /// <remarks/>
        public void get_DataLoad_ItemsAsync(string HospNum, System.DateTime StartDate, System.DateTime EndDate, string TestType, object userState) {
            if ((this.get_DataLoad_ItemsOperationCompleted == null)) {
                this.get_DataLoad_ItemsOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_DataLoad_ItemsOperationCompleted);
            }
            this.InvokeAsync("get_DataLoad_Items", new object[] {
                        HospNum,
                        StartDate,
                        EndDate,
                        TestType}, this.get_DataLoad_ItemsOperationCompleted, userState);
        }
        
        private void Onget_DataLoad_ItemsOperationCompleted(object arg) {
            if ((this.get_DataLoad_ItemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.get_DataLoad_ItemsCompleted(this, new get_DataLoad_ItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getLoadPaintInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Painent getLoadPaintInfo(string LabNum) {
            object[] results = this.Invoke("getLoadPaintInfo", new object[] {
                        LabNum});
            return ((Painent)(results[0]));
        }
        
        /// <remarks/>
        public void getLoadPaintInfoAsync(string LabNum) {
            this.getLoadPaintInfoAsync(LabNum, null);
        }
        
        /// <remarks/>
        public void getLoadPaintInfoAsync(string LabNum, object userState) {
            if ((this.getLoadPaintInfoOperationCompleted == null)) {
                this.getLoadPaintInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetLoadPaintInfoOperationCompleted);
            }
            this.InvokeAsync("getLoadPaintInfo", new object[] {
                        LabNum}, this.getLoadPaintInfoOperationCompleted, userState);
        }
        
        private void OngetLoadPaintInfoOperationCompleted(object arg) {
            if ((this.getLoadPaintInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getLoadPaintInfoCompleted(this, new getLoadPaintInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetReferenceRangeAccess", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetReferenceRangeAccess(string TestIntTcode, string TestType, string Labnumber) {
            object[] results = this.Invoke("GetReferenceRangeAccess", new object[] {
                        TestIntTcode,
                        TestType,
                        Labnumber});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetReferenceRangeAccessAsync(string TestIntTcode, string TestType, string Labnumber) {
            this.GetReferenceRangeAccessAsync(TestIntTcode, TestType, Labnumber, null);
        }
        
        /// <remarks/>
        public void GetReferenceRangeAccessAsync(string TestIntTcode, string TestType, string Labnumber, object userState) {
            if ((this.GetReferenceRangeAccessOperationCompleted == null)) {
                this.GetReferenceRangeAccessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReferenceRangeAccessOperationCompleted);
            }
            this.InvokeAsync("GetReferenceRangeAccess", new object[] {
                        TestIntTcode,
                        TestType,
                        Labnumber}, this.GetReferenceRangeAccessOperationCompleted, userState);
        }
        
        private void OnGetReferenceRangeAccessOperationCompleted(object arg) {
            if ((this.GetReferenceRangeAccessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReferenceRangeAccessCompleted(this, new GetReferenceRangeAccessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetHostoryDataAccess", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetHostoryDataAccess(string IntCpI, string TestIntTcode, string TestType, string Labnumber, int lastResutlInNums) {
            object[] results = this.Invoke("GetHostoryDataAccess", new object[] {
                        IntCpI,
                        TestIntTcode,
                        TestType,
                        Labnumber,
                        lastResutlInNums});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetHostoryDataAccessAsync(string IntCpI, string TestIntTcode, string TestType, string Labnumber, int lastResutlInNums) {
            this.GetHostoryDataAccessAsync(IntCpI, TestIntTcode, TestType, Labnumber, lastResutlInNums, null);
        }
        
        /// <remarks/>
        public void GetHostoryDataAccessAsync(string IntCpI, string TestIntTcode, string TestType, string Labnumber, int lastResutlInNums, object userState) {
            if ((this.GetHostoryDataAccessOperationCompleted == null)) {
                this.GetHostoryDataAccessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHostoryDataAccessOperationCompleted);
            }
            this.InvokeAsync("GetHostoryDataAccess", new object[] {
                        IntCpI,
                        TestIntTcode,
                        TestType,
                        Labnumber,
                        lastResutlInNums}, this.GetHostoryDataAccessOperationCompleted, userState);
        }
        
        private void OnGetHostoryDataAccessOperationCompleted(object arg) {
            if ((this.GetHostoryDataAccessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHostoryDataAccessCompleted(this, new GetHostoryDataAccessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetReportPrintLogCount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetReportPrintLogCount(string LabNum, string TestType, string Bench) {
            object[] results = this.Invoke("GetReportPrintLogCount", new object[] {
                        LabNum,
                        TestType,
                        Bench});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetReportPrintLogCountAsync(string LabNum, string TestType, string Bench) {
            this.GetReportPrintLogCountAsync(LabNum, TestType, Bench, null);
        }
        
        /// <remarks/>
        public void GetReportPrintLogCountAsync(string LabNum, string TestType, string Bench, object userState) {
            if ((this.GetReportPrintLogCountOperationCompleted == null)) {
                this.GetReportPrintLogCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReportPrintLogCountOperationCompleted);
            }
            this.InvokeAsync("GetReportPrintLogCount", new object[] {
                        LabNum,
                        TestType,
                        Bench}, this.GetReportPrintLogCountOperationCompleted, userState);
        }
        
        private void OnGetReportPrintLogCountOperationCompleted(object arg) {
            if ((this.GetReportPrintLogCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReportPrintLogCountCompleted(this, new GetReportPrintLogCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTempleteID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetTempleteID(string labNum, string testType, bool isMerge) {
            object[] results = this.Invoke("GetTempleteID", new object[] {
                        labNum,
                        testType,
                        isMerge});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTempleteIDAsync(string labNum, string testType, bool isMerge) {
            this.GetTempleteIDAsync(labNum, testType, isMerge, null);
        }
        
        /// <remarks/>
        public void GetTempleteIDAsync(string labNum, string testType, bool isMerge, object userState) {
            if ((this.GetTempleteIDOperationCompleted == null)) {
                this.GetTempleteIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTempleteIDOperationCompleted);
            }
            this.InvokeAsync("GetTempleteID", new object[] {
                        labNum,
                        testType,
                        isMerge}, this.GetTempleteIDOperationCompleted, userState);
        }
        
        private void OnGetTempleteIDOperationCompleted(object arg) {
            if ((this.GetTempleteIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTempleteIDCompleted(this, new GetTempleteIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetReportTemp", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ReportTempInfo[] GetReportTemp(string templeteType) {
            object[] results = this.Invoke("GetReportTemp", new object[] {
                        templeteType});
            return ((ReportTempInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetReportTempAsync(string templeteType) {
            this.GetReportTempAsync(templeteType, null);
        }
        
        /// <remarks/>
        public void GetReportTempAsync(string templeteType, object userState) {
            if ((this.GetReportTempOperationCompleted == null)) {
                this.GetReportTempOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReportTempOperationCompleted);
            }
            this.InvokeAsync("GetReportTemp", new object[] {
                        templeteType}, this.GetReportTempOperationCompleted, userState);
        }
        
        private void OnGetReportTempOperationCompleted(object arg) {
            if ((this.GetReportTempCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReportTempCompleted(this, new GetReportTempCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetReportSource", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetReportSource(string templeteID) {
            object[] results = this.Invoke("GetReportSource", new object[] {
                        templeteID});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetReportSourceAsync(string templeteID) {
            this.GetReportSourceAsync(templeteID, null);
        }
        
        /// <remarks/>
        public void GetReportSourceAsync(string templeteID, object userState) {
            if ((this.GetReportSourceOperationCompleted == null)) {
                this.GetReportSourceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReportSourceOperationCompleted);
            }
            this.InvokeAsync("GetReportSource", new object[] {
                        templeteID}, this.GetReportSourceOperationCompleted, userState);
        }
        
        private void OnGetReportSourceOperationCompleted(object arg) {
            if ((this.GetReportSourceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReportSourceCompleted(this, new GetReportSourceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateReportTemp", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateReportTemp(string templeteID, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] reportSource) {
            this.Invoke("UpdateReportTemp", new object[] {
                        templeteID,
                        reportSource});
        }
        
        /// <remarks/>
        public void UpdateReportTempAsync(string templeteID, byte[] reportSource) {
            this.UpdateReportTempAsync(templeteID, reportSource, null);
        }
        
        /// <remarks/>
        public void UpdateReportTempAsync(string templeteID, byte[] reportSource, object userState) {
            if ((this.UpdateReportTempOperationCompleted == null)) {
                this.UpdateReportTempOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateReportTempOperationCompleted);
            }
            this.InvokeAsync("UpdateReportTemp", new object[] {
                        templeteID,
                        reportSource}, this.UpdateReportTempOperationCompleted, userState);
        }
        
        private void OnUpdateReportTempOperationCompleted(object arg) {
            if ((this.UpdateReportTempCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateReportTempCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetServerDateTime", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.DateTime GetServerDateTime() {
            object[] results = this.Invoke("GetServerDateTime", new object[0]);
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        public void GetServerDateTimeAsync() {
            this.GetServerDateTimeAsync(null);
        }
        
        /// <remarks/>
        public void GetServerDateTimeAsync(object userState) {
            if ((this.GetServerDateTimeOperationCompleted == null)) {
                this.GetServerDateTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetServerDateTimeOperationCompleted);
            }
            this.InvokeAsync("GetServerDateTime", new object[0], this.GetServerDateTimeOperationCompleted, userState);
        }
        
        private void OnGetServerDateTimeOperationCompleted(object arg) {
            if ((this.GetServerDateTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetServerDateTimeCompleted(this, new GetServerDateTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOperator", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetOperator(string operatorCode) {
            object[] results = this.Invoke("GetOperator", new object[] {
                        operatorCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetOperatorAsync(string operatorCode) {
            this.GetOperatorAsync(operatorCode, null);
        }
        
        /// <remarks/>
        public void GetOperatorAsync(string operatorCode, object userState) {
            if ((this.GetOperatorOperationCompleted == null)) {
                this.GetOperatorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOperatorOperationCompleted);
            }
            this.InvokeAsync("GetOperator", new object[] {
                        operatorCode}, this.GetOperatorOperationCompleted, userState);
        }
        
        private void OnGetOperatorOperationCompleted(object arg) {
            if ((this.GetOperatorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOperatorCompleted(this, new GetOperatorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserLocation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetUserLocation(string operatorCode) {
            object[] results = this.Invoke("GetUserLocation", new object[] {
                        operatorCode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserLocationAsync(string operatorCode) {
            this.GetUserLocationAsync(operatorCode, null);
        }
        
        /// <remarks/>
        public void GetUserLocationAsync(string operatorCode, object userState) {
            if ((this.GetUserLocationOperationCompleted == null)) {
                this.GetUserLocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserLocationOperationCompleted);
            }
            this.InvokeAsync("GetUserLocation", new object[] {
                        operatorCode}, this.GetUserLocationOperationCompleted, userState);
        }
        
        private void OnGetUserLocationOperationCompleted(object arg) {
            if ((this.GetUserLocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserLocationCompleted(this, new GetUserLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDepartment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDepartment(string testType) {
            object[] results = this.Invoke("GetDepartment", new object[] {
                        testType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDepartmentAsync(string testType) {
            this.GetDepartmentAsync(testType, null);
        }
        
        /// <remarks/>
        public void GetDepartmentAsync(string testType, object userState) {
            if ((this.GetDepartmentOperationCompleted == null)) {
                this.GetDepartmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDepartmentOperationCompleted);
            }
            this.InvokeAsync("GetDepartment", new object[] {
                        testType}, this.GetDepartmentOperationCompleted, userState);
        }
        
        private void OnGetDepartmentOperationCompleted(object arg) {
            if ((this.GetDepartmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDepartmentCompleted(this, new GetDepartmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCpi", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCpi(string labNum) {
            object[] results = this.Invoke("GetCpi", new object[] {
                        labNum});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCpiAsync(string labNum) {
            this.GetCpiAsync(labNum, null);
        }
        
        /// <remarks/>
        public void GetCpiAsync(string labNum, object userState) {
            if ((this.GetCpiOperationCompleted == null)) {
                this.GetCpiOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCpiOperationCompleted);
            }
            this.InvokeAsync("GetCpi", new object[] {
                        labNum}, this.GetCpiOperationCompleted, userState);
        }
        
        private void OnGetCpiOperationCompleted(object arg) {
            if ((this.GetCpiCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCpiCompleted(this, new GetCpiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAccumulate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ParmReportInfo[] GetAccumulate(string labNum, string bench, int count) {
            object[] results = this.Invoke("GetAccumulate", new object[] {
                        labNum,
                        bench,
                        count});
            return ((ParmReportInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAccumulateAsync(string labNum, string bench, int count) {
            this.GetAccumulateAsync(labNum, bench, count, null);
        }
        
        /// <remarks/>
        public void GetAccumulateAsync(string labNum, string bench, int count, object userState) {
            if ((this.GetAccumulateOperationCompleted == null)) {
                this.GetAccumulateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccumulateOperationCompleted);
            }
            this.InvokeAsync("GetAccumulate", new object[] {
                        labNum,
                        bench,
                        count}, this.GetAccumulateOperationCompleted, userState);
        }
        
        private void OnGetAccumulateOperationCompleted(object arg) {
            if ((this.GetAccumulateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccumulateCompleted(this, new GetAccumulateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SearchAccumulate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ParmReportInfo[] SearchAccumulate(string labNum, string bench, System.DateTime startDate, System.DateTime endDate) {
            object[] results = this.Invoke("SearchAccumulate", new object[] {
                        labNum,
                        bench,
                        startDate,
                        endDate});
            return ((ParmReportInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void SearchAccumulateAsync(string labNum, string bench, System.DateTime startDate, System.DateTime endDate) {
            this.SearchAccumulateAsync(labNum, bench, startDate, endDate, null);
        }
        
        /// <remarks/>
        public void SearchAccumulateAsync(string labNum, string bench, System.DateTime startDate, System.DateTime endDate, object userState) {
            if ((this.SearchAccumulateOperationCompleted == null)) {
                this.SearchAccumulateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchAccumulateOperationCompleted);
            }
            this.InvokeAsync("SearchAccumulate", new object[] {
                        labNum,
                        bench,
                        startDate,
                        endDate}, this.SearchAccumulateOperationCompleted, userState);
        }
        
        private void OnSearchAccumulateOperationCompleted(object arg) {
            if ((this.SearchAccumulateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchAccumulateCompleted(this, new SearchAccumulateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateAccumulate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateAccumulate(string newLabNum, string oldLabNum, string bench) {
            object[] results = this.Invoke("UpdateAccumulate", new object[] {
                        newLabNum,
                        oldLabNum,
                        bench});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateAccumulateAsync(string newLabNum, string oldLabNum, string bench) {
            this.UpdateAccumulateAsync(newLabNum, oldLabNum, bench, null);
        }
        
        /// <remarks/>
        public void UpdateAccumulateAsync(string newLabNum, string oldLabNum, string bench, object userState) {
            if ((this.UpdateAccumulateOperationCompleted == null)) {
                this.UpdateAccumulateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateAccumulateOperationCompleted);
            }
            this.InvokeAsync("UpdateAccumulate", new object[] {
                        newLabNum,
                        oldLabNum,
                        bench}, this.UpdateAccumulateOperationCompleted, userState);
        }
        
        private void OnUpdateAccumulateOperationCompleted(object arg) {
            if ((this.UpdateAccumulateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateAccumulateCompleted(this, new UpdateAccumulateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLisReportData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetLisReportData(string tableName, ParmCommonInfo ParmCommon, ParmReportInfo ParmReport) {
            object[] results = this.Invoke("GetLisReportData", new object[] {
                        tableName,
                        ParmCommon,
                        ParmReport});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetLisReportDataAsync(string tableName, ParmCommonInfo ParmCommon, ParmReportInfo ParmReport) {
            this.GetLisReportDataAsync(tableName, ParmCommon, ParmReport, null);
        }
        
        /// <remarks/>
        public void GetLisReportDataAsync(string tableName, ParmCommonInfo ParmCommon, ParmReportInfo ParmReport, object userState) {
            if ((this.GetLisReportDataOperationCompleted == null)) {
                this.GetLisReportDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLisReportDataOperationCompleted);
            }
            this.InvokeAsync("GetLisReportData", new object[] {
                        tableName,
                        ParmCommon,
                        ParmReport}, this.GetLisReportDataOperationCompleted, userState);
        }
        
        private void OnGetLisReportDataOperationCompleted(object arg) {
            if ((this.GetLisReportDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLisReportDataCompleted(this, new GetLisReportDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertPrintLog", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertPrintLog(string labNum, string testType, string ben, string OperatorCode) {
            this.Invoke("InsertPrintLog", new object[] {
                        labNum,
                        testType,
                        ben,
                        OperatorCode});
        }
        
        /// <remarks/>
        public void InsertPrintLogAsync(string labNum, string testType, string ben, string OperatorCode) {
            this.InsertPrintLogAsync(labNum, testType, ben, OperatorCode, null);
        }
        
        /// <remarks/>
        public void InsertPrintLogAsync(string labNum, string testType, string ben, string OperatorCode, object userState) {
            if ((this.InsertPrintLogOperationCompleted == null)) {
                this.InsertPrintLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertPrintLogOperationCompleted);
            }
            this.InvokeAsync("InsertPrintLog", new object[] {
                        labNum,
                        testType,
                        ben,
                        OperatorCode}, this.InsertPrintLogOperationCompleted, userState);
        }
        
        private void OnInsertPrintLogOperationCompleted(object arg) {
            if ((this.InsertPrintLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertPrintLogCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/OpenPrintLog", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet OpenPrintLog(string LabNum, string TestType) {
            object[] results = this.Invoke("OpenPrintLog", new object[] {
                        LabNum,
                        TestType});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void OpenPrintLogAsync(string LabNum, string TestType) {
            this.OpenPrintLogAsync(LabNum, TestType, null);
        }
        
        /// <remarks/>
        public void OpenPrintLogAsync(string LabNum, string TestType, object userState) {
            if ((this.OpenPrintLogOperationCompleted == null)) {
                this.OpenPrintLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOpenPrintLogOperationCompleted);
            }
            this.InvokeAsync("OpenPrintLog", new object[] {
                        LabNum,
                        TestType}, this.OpenPrintLogOperationCompleted, userState);
        }
        
        private void OnOpenPrintLogOperationCompleted(object arg) {
            if ((this.OpenPrintLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OpenPrintLogCompleted(this, new OpenPrintLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDeptCodes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DEPTCODEinfo[] GetDeptCodes() {
            object[] results = this.Invoke("GetDeptCodes", new object[0]);
            return ((DEPTCODEinfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDeptCodesAsync() {
            this.GetDeptCodesAsync(null);
        }
        
        /// <remarks/>
        public void GetDeptCodesAsync(object userState) {
            if ((this.GetDeptCodesOperationCompleted == null)) {
                this.GetDeptCodesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDeptCodesOperationCompleted);
            }
            this.InvokeAsync("GetDeptCodes", new object[0], this.GetDeptCodesOperationCompleted, userState);
        }
        
        private void OnGetDeptCodesOperationCompleted(object arg) {
            if ((this.GetDeptCodesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDeptCodesCompleted(this, new GetDeptCodesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InitCodeByTesttype", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InitCodeByTesttype(string LabNum) {
            object[] results = this.Invoke("InitCodeByTesttype", new object[] {
                        LabNum});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InitCodeByTesttypeAsync(string LabNum) {
            this.InitCodeByTesttypeAsync(LabNum, null);
        }
        
        /// <remarks/>
        public void InitCodeByTesttypeAsync(string LabNum, object userState) {
            if ((this.InitCodeByTesttypeOperationCompleted == null)) {
                this.InitCodeByTesttypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitCodeByTesttypeOperationCompleted);
            }
            this.InvokeAsync("InitCodeByTesttype", new object[] {
                        LabNum}, this.InitCodeByTesttypeOperationCompleted, userState);
        }
        
        private void OnInitCodeByTesttypeOperationCompleted(object arg) {
            if ((this.InitCodeByTesttypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitCodeByTesttypeCompleted(this, new InitCodeByTesttypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPrintCount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetPrintCount(string LabNum, string TestType, string Bench) {
            object[] results = this.Invoke("GetPrintCount", new object[] {
                        LabNum,
                        TestType,
                        Bench});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetPrintCountAsync(string LabNum, string TestType, string Bench) {
            this.GetPrintCountAsync(LabNum, TestType, Bench, null);
        }
        
        /// <remarks/>
        public void GetPrintCountAsync(string LabNum, string TestType, string Bench, object userState) {
            if ((this.GetPrintCountOperationCompleted == null)) {
                this.GetPrintCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPrintCountOperationCompleted);
            }
            this.InvokeAsync("GetPrintCount", new object[] {
                        LabNum,
                        TestType,
                        Bench}, this.GetPrintCountOperationCompleted, userState);
        }
        
        private void OnGetPrintCountOperationCompleted(object arg) {
            if ((this.GetPrintCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPrintCountCompleted(this, new GetPrintCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsNull", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsNull(string LabNum) {
            object[] results = this.Invoke("IsNull", new object[] {
                        LabNum});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsNullAsync(string LabNum) {
            this.IsNullAsync(LabNum, null);
        }
        
        /// <remarks/>
        public void IsNullAsync(string LabNum, object userState) {
            if ((this.IsNullOperationCompleted == null)) {
                this.IsNullOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsNullOperationCompleted);
            }
            this.InvokeAsync("IsNull", new object[] {
                        LabNum}, this.IsNullOperationCompleted, userState);
        }
        
        private void OnIsNullOperationCompleted(object arg) {
            if ((this.IsNullCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsNullCompleted(this, new IsNullCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ZiMianList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] ZiMianList() {
            object[] results = this.Invoke("ZiMianList", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void ZiMianListAsync() {
            this.ZiMianListAsync(null);
        }
        
        /// <remarks/>
        public void ZiMianListAsync(object userState) {
            if ((this.ZiMianListOperationCompleted == null)) {
                this.ZiMianListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnZiMianListOperationCompleted);
            }
            this.InvokeAsync("ZiMianList", new object[0], this.ZiMianListOperationCompleted, userState);
        }
        
        private void OnZiMianListOperationCompleted(object arg) {
            if ((this.ZiMianListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ZiMianListCompleted(this, new ZiMianListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getTestTypeByLabNum", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getTestTypeByLabNum(string labNumber) {
            object[] results = this.Invoke("getTestTypeByLabNum", new object[] {
                        labNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getTestTypeByLabNumAsync(string labNumber) {
            this.getTestTypeByLabNumAsync(labNumber, null);
        }
        
        /// <remarks/>
        public void getTestTypeByLabNumAsync(string labNumber, object userState) {
            if ((this.getTestTypeByLabNumOperationCompleted == null)) {
                this.getTestTypeByLabNumOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTestTypeByLabNumOperationCompleted);
            }
            this.InvokeAsync("getTestTypeByLabNum", new object[] {
                        labNumber}, this.getTestTypeByLabNumOperationCompleted, userState);
        }
        
        private void OngetTestTypeByLabNumOperationCompleted(object arg) {
            if ((this.getTestTypeByLabNumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTestTypeByLabNumCompleted(this, new getTestTypeByLabNumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getItemsByInitCodeList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getItemsByInitCodeList(string[] GroupList) {
            object[] results = this.Invoke("getItemsByInitCodeList", new object[] {
                        GroupList});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getItemsByInitCodeListAsync(string[] GroupList) {
            this.getItemsByInitCodeListAsync(GroupList, null);
        }
        
        /// <remarks/>
        public void getItemsByInitCodeListAsync(string[] GroupList, object userState) {
            if ((this.getItemsByInitCodeListOperationCompleted == null)) {
                this.getItemsByInitCodeListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetItemsByInitCodeListOperationCompleted);
            }
            this.InvokeAsync("getItemsByInitCodeList", new object[] {
                        GroupList}, this.getItemsByInitCodeListOperationCompleted, userState);
        }
        
        private void OngetItemsByInitCodeListOperationCompleted(object arg) {
            if ((this.getItemsByInitCodeListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getItemsByInitCodeListCompleted(this, new getItemsByInitCodeListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getItemsByInitCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getItemsByInitCode(string profile) {
            object[] results = this.Invoke("getItemsByInitCode", new object[] {
                        profile});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getItemsByInitCodeAsync(string profile) {
            this.getItemsByInitCodeAsync(profile, null);
        }
        
        /// <remarks/>
        public void getItemsByInitCodeAsync(string profile, object userState) {
            if ((this.getItemsByInitCodeOperationCompleted == null)) {
                this.getItemsByInitCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetItemsByInitCodeOperationCompleted);
            }
            this.InvokeAsync("getItemsByInitCode", new object[] {
                        profile}, this.getItemsByInitCodeOperationCompleted, userState);
        }
        
        private void OngetItemsByInitCodeOperationCompleted(object arg) {
            if ((this.getItemsByInitCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getItemsByInitCodeCompleted(this, new getItemsByInitCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getLabNumsByCFH_ordID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] getLabNumsByCFH_ordID(string HospNum, string PatientSeqNum, string MedicalAdviceId) {
            object[] results = this.Invoke("getLabNumsByCFH_ordID", new object[] {
                        HospNum,
                        PatientSeqNum,
                        MedicalAdviceId});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void getLabNumsByCFH_ordIDAsync(string HospNum, string PatientSeqNum, string MedicalAdviceId) {
            this.getLabNumsByCFH_ordIDAsync(HospNum, PatientSeqNum, MedicalAdviceId, null);
        }
        
        /// <remarks/>
        public void getLabNumsByCFH_ordIDAsync(string HospNum, string PatientSeqNum, string MedicalAdviceId, object userState) {
            if ((this.getLabNumsByCFH_ordIDOperationCompleted == null)) {
                this.getLabNumsByCFH_ordIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetLabNumsByCFH_ordIDOperationCompleted);
            }
            this.InvokeAsync("getLabNumsByCFH_ordID", new object[] {
                        HospNum,
                        PatientSeqNum,
                        MedicalAdviceId}, this.getLabNumsByCFH_ordIDOperationCompleted, userState);
        }
        
        private void OngetLabNumsByCFH_ordIDOperationCompleted(object arg) {
            if ((this.getLabNumsByCFH_ordIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getLabNumsByCFH_ordIDCompleted(this, new getLabNumsByCFH_ordIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectPaientByLabNumber", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SelectPaientByLabNumber(string LabNumber) {
            object[] results = this.Invoke("SelectPaientByLabNumber", new object[] {
                        LabNumber});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SelectPaientByLabNumberAsync(string LabNumber) {
            this.SelectPaientByLabNumberAsync(LabNumber, null);
        }
        
        /// <remarks/>
        public void SelectPaientByLabNumberAsync(string LabNumber, object userState) {
            if ((this.SelectPaientByLabNumberOperationCompleted == null)) {
                this.SelectPaientByLabNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectPaientByLabNumberOperationCompleted);
            }
            this.InvokeAsync("SelectPaientByLabNumber", new object[] {
                        LabNumber}, this.SelectPaientByLabNumberOperationCompleted, userState);
        }
        
        private void OnSelectPaientByLabNumberOperationCompleted(object arg) {
            if ((this.SelectPaientByLabNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectPaientByLabNumberCompleted(this, new SelectPaientByLabNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectMastestByLabNumber", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SelectMastestByLabNumber(string LabNumber) {
            object[] results = this.Invoke("SelectMastestByLabNumber", new object[] {
                        LabNumber});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SelectMastestByLabNumberAsync(string LabNumber) {
            this.SelectMastestByLabNumberAsync(LabNumber, null);
        }
        
        /// <remarks/>
        public void SelectMastestByLabNumberAsync(string LabNumber, object userState) {
            if ((this.SelectMastestByLabNumberOperationCompleted == null)) {
                this.SelectMastestByLabNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectMastestByLabNumberOperationCompleted);
            }
            this.InvokeAsync("SelectMastestByLabNumber", new object[] {
                        LabNumber}, this.SelectMastestByLabNumberOperationCompleted, userState);
        }
        
        private void OnSelectMastestByLabNumberOperationCompleted(object arg) {
            if ((this.SelectMastestByLabNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectMastestByLabNumberCompleted(this, new SelectMastestByLabNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectMicrodatByLabNumber", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SelectMicrodatByLabNumber(string LabNumber) {
            object[] results = this.Invoke("SelectMicrodatByLabNumber", new object[] {
                        LabNumber});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SelectMicrodatByLabNumberAsync(string LabNumber) {
            this.SelectMicrodatByLabNumberAsync(LabNumber, null);
        }
        
        /// <remarks/>
        public void SelectMicrodatByLabNumberAsync(string LabNumber, object userState) {
            if ((this.SelectMicrodatByLabNumberOperationCompleted == null)) {
                this.SelectMicrodatByLabNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectMicrodatByLabNumberOperationCompleted);
            }
            this.InvokeAsync("SelectMicrodatByLabNumber", new object[] {
                        LabNumber}, this.SelectMicrodatByLabNumberOperationCompleted, userState);
        }
        
        private void OnSelectMicrodatByLabNumberOperationCompleted(object arg) {
            if ((this.SelectMicrodatByLabNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectMicrodatByLabNumberCompleted(this, new SelectMicrodatByLabNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectODTitle", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SelectODTitle(string CODE) {
            object[] results = this.Invoke("SelectODTitle", new object[] {
                        CODE});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SelectODTitleAsync(string CODE) {
            this.SelectODTitleAsync(CODE, null);
        }
        
        /// <remarks/>
        public void SelectODTitleAsync(string CODE, object userState) {
            if ((this.SelectODTitleOperationCompleted == null)) {
                this.SelectODTitleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectODTitleOperationCompleted);
            }
            this.InvokeAsync("SelectODTitle", new object[] {
                        CODE}, this.SelectODTitleOperationCompleted, userState);
        }
        
        private void OnSelectODTitleOperationCompleted(object arg) {
            if ((this.SelectODTitleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectODTitleCompleted(this, new SelectODTitleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectSResult", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SelectSResult(string CODE, string INT_TCODE) {
            object[] results = this.Invoke("SelectSResult", new object[] {
                        CODE,
                        INT_TCODE});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SelectSResultAsync(string CODE, string INT_TCODE) {
            this.SelectSResultAsync(CODE, INT_TCODE, null);
        }
        
        /// <remarks/>
        public void SelectSResultAsync(string CODE, string INT_TCODE, object userState) {
            if ((this.SelectSResultOperationCompleted == null)) {
                this.SelectSResultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectSResultOperationCompleted);
            }
            this.InvokeAsync("SelectSResult", new object[] {
                        CODE,
                        INT_TCODE}, this.SelectSResultOperationCompleted, userState);
        }
        
        private void OnSelectSResultOperationCompleted(object arg) {
            if ((this.SelectSResultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectSResultCompleted(this, new SelectSResultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectODResult", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SelectODResult(string CODE, string INT_TCODE) {
            object[] results = this.Invoke("SelectODResult", new object[] {
                        CODE,
                        INT_TCODE});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SelectODResultAsync(string CODE, string INT_TCODE) {
            this.SelectODResultAsync(CODE, INT_TCODE, null);
        }
        
        /// <remarks/>
        public void SelectODResultAsync(string CODE, string INT_TCODE, object userState) {
            if ((this.SelectODResultOperationCompleted == null)) {
                this.SelectODResultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectODResultOperationCompleted);
            }
            this.InvokeAsync("SelectODResult", new object[] {
                        CODE,
                        INT_TCODE}, this.SelectODResultOperationCompleted, userState);
        }
        
        private void OnSelectODResultOperationCompleted(object arg) {
            if ((this.SelectODResultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectODResultCompleted(this, new SelectODResultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getServiceDateTime", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.DateTime getServiceDateTime() {
            object[] results = this.Invoke("getServiceDateTime", new object[0]);
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        public void getServiceDateTimeAsync() {
            this.getServiceDateTimeAsync(null);
        }
        
        /// <remarks/>
        public void getServiceDateTimeAsync(object userState) {
            if ((this.getServiceDateTimeOperationCompleted == null)) {
                this.getServiceDateTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetServiceDateTimeOperationCompleted);
            }
            this.InvokeAsync("getServiceDateTime", new object[0], this.getServiceDateTimeOperationCompleted, userState);
        }
        
        private void OngetServiceDateTimeOperationCompleted(object arg) {
            if ((this.getServiceDateTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getServiceDateTimeCompleted(this, new getServiceDateTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSysParameterValue", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSysParameterValue(string strParaID, string strDefaultVal) {
            object[] results = this.Invoke("GetSysParameterValue", new object[] {
                        strParaID,
                        strDefaultVal});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSysParameterValueAsync(string strParaID, string strDefaultVal) {
            this.GetSysParameterValueAsync(strParaID, strDefaultVal, null);
        }
        
        /// <remarks/>
        public void GetSysParameterValueAsync(string strParaID, string strDefaultVal, object userState) {
            if ((this.GetSysParameterValueOperationCompleted == null)) {
                this.GetSysParameterValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSysParameterValueOperationCompleted);
            }
            this.InvokeAsync("GetSysParameterValue", new object[] {
                        strParaID,
                        strDefaultVal}, this.GetSysParameterValueOperationCompleted, userState);
        }
        
        private void OnGetSysParameterValueOperationCompleted(object arg) {
            if ((this.GetSysParameterValueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSysParameterValueCompleted(this, new GetSysParameterValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetSysParameterValue", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SetSysParameterValue(string strParaID, string strParaDesc, string strParaValue) {
            object[] results = this.Invoke("SetSysParameterValue", new object[] {
                        strParaID,
                        strParaDesc,
                        strParaValue});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SetSysParameterValueAsync(string strParaID, string strParaDesc, string strParaValue) {
            this.SetSysParameterValueAsync(strParaID, strParaDesc, strParaValue, null);
        }
        
        /// <remarks/>
        public void SetSysParameterValueAsync(string strParaID, string strParaDesc, string strParaValue, object userState) {
            if ((this.SetSysParameterValueOperationCompleted == null)) {
                this.SetSysParameterValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetSysParameterValueOperationCompleted);
            }
            this.InvokeAsync("SetSysParameterValue", new object[] {
                        strParaID,
                        strParaDesc,
                        strParaValue}, this.SetSysParameterValueOperationCompleted, userState);
        }
        
        private void OnSetSysParameterValueOperationCompleted(object arg) {
            if ((this.SetSysParameterValueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetSysParameterValueCompleted(this, new SetSysParameterValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetHospIDByLabNum", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetHospIDByLabNum(string strLabNum) {
            object[] results = this.Invoke("GetHospIDByLabNum", new object[] {
                        strLabNum});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetHospIDByLabNumAsync(string strLabNum) {
            this.GetHospIDByLabNumAsync(strLabNum, null);
        }
        
        /// <remarks/>
        public void GetHospIDByLabNumAsync(string strLabNum, object userState) {
            if ((this.GetHospIDByLabNumOperationCompleted == null)) {
                this.GetHospIDByLabNumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHospIDByLabNumOperationCompleted);
            }
            this.InvokeAsync("GetHospIDByLabNum", new object[] {
                        strLabNum}, this.GetHospIDByLabNumOperationCompleted, userState);
        }
        
        private void OnGetHospIDByLabNumOperationCompleted(object arg) {
            if ((this.GetHospIDByLabNumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHospIDByLabNumCompleted(this, new GetHospIDByLabNumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class BarCodeInfo {
        
        private string hospNumField;
        
        private string organNameField;
        
        private string patientNameField;
        
        private string priorityDescField;
        
        private string sexDescField;
        
        private string ageDescField;
        
        private string otherHospNameField;
        
        private string locationNameField;
        
        private string locationToNameField;
        
        private string orderDateaField;
        
        private string bedNumField;
        
        private string patientTypeField;
        
        private bool isRePrintField;
        
        private string rePrintDescField;
        
        private string testsDescField;
        
        private string labSourceField;
        
        private string deptDescField;
        
        private byte[] barCodeImageField;
        
        private System.DateTime recvdateField;
        
        private string recvbyField;
        
        /// <remarks/>
        public string HospNum {
            get {
                return this.hospNumField;
            }
            set {
                this.hospNumField = value;
            }
        }
        
        /// <remarks/>
        public string OrganName {
            get {
                return this.organNameField;
            }
            set {
                this.organNameField = value;
            }
        }
        
        /// <remarks/>
        public string PatientName {
            get {
                return this.patientNameField;
            }
            set {
                this.patientNameField = value;
            }
        }
        
        /// <remarks/>
        public string PriorityDesc {
            get {
                return this.priorityDescField;
            }
            set {
                this.priorityDescField = value;
            }
        }
        
        /// <remarks/>
        public string SexDesc {
            get {
                return this.sexDescField;
            }
            set {
                this.sexDescField = value;
            }
        }
        
        /// <remarks/>
        public string AgeDesc {
            get {
                return this.ageDescField;
            }
            set {
                this.ageDescField = value;
            }
        }
        
        /// <remarks/>
        public string OtherHospName {
            get {
                return this.otherHospNameField;
            }
            set {
                this.otherHospNameField = value;
            }
        }
        
        /// <remarks/>
        public string LocationName {
            get {
                return this.locationNameField;
            }
            set {
                this.locationNameField = value;
            }
        }
        
        /// <remarks/>
        public string LocationToName {
            get {
                return this.locationToNameField;
            }
            set {
                this.locationToNameField = value;
            }
        }
        
        /// <remarks/>
        public string OrderDatea {
            get {
                return this.orderDateaField;
            }
            set {
                this.orderDateaField = value;
            }
        }
        
        /// <remarks/>
        public string BedNum {
            get {
                return this.bedNumField;
            }
            set {
                this.bedNumField = value;
            }
        }
        
        /// <remarks/>
        public string PatientType {
            get {
                return this.patientTypeField;
            }
            set {
                this.patientTypeField = value;
            }
        }
        
        /// <remarks/>
        public bool IsRePrint {
            get {
                return this.isRePrintField;
            }
            set {
                this.isRePrintField = value;
            }
        }
        
        /// <remarks/>
        public string RePrintDesc {
            get {
                return this.rePrintDescField;
            }
            set {
                this.rePrintDescField = value;
            }
        }
        
        /// <remarks/>
        public string TestsDesc {
            get {
                return this.testsDescField;
            }
            set {
                this.testsDescField = value;
            }
        }
        
        /// <remarks/>
        public string LabSource {
            get {
                return this.labSourceField;
            }
            set {
                this.labSourceField = value;
            }
        }
        
        /// <remarks/>
        public string DeptDesc {
            get {
                return this.deptDescField;
            }
            set {
                this.deptDescField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] BarCodeImage {
            get {
                return this.barCodeImageField;
            }
            set {
                this.barCodeImageField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Recvdate {
            get {
                return this.recvdateField;
            }
            set {
                this.recvdateField = value;
            }
        }
        
        /// <remarks/>
        public string Recvby {
            get {
                return this.recvbyField;
            }
            set {
                this.recvbyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ParmCommonInfo {
        
        private string operatorCodeField;
        
        private string moduleIDField;
        
        private bool isTryField;
        
        private bool mergeReportField;
        
        private string printNameField;
        
        /// <remarks/>
        public string OperatorCode {
            get {
                return this.operatorCodeField;
            }
            set {
                this.operatorCodeField = value;
            }
        }
        
        /// <remarks/>
        public string ModuleID {
            get {
                return this.moduleIDField;
            }
            set {
                this.moduleIDField = value;
            }
        }
        
        /// <remarks/>
        public bool IsTry {
            get {
                return this.isTryField;
            }
            set {
                this.isTryField = value;
            }
        }
        
        /// <remarks/>
        public bool MergeReport {
            get {
                return this.mergeReportField;
            }
            set {
                this.mergeReportField = value;
            }
        }
        
        /// <remarks/>
        public string PrintName {
            get {
                return this.printNameField;
            }
            set {
                this.printNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ParmReportInfo {
        
        private System.DateTime authdateField;
        
        private string cFHField;
        
        private string hOSPNUMField;
        
        private string labNumField;
        
        private string labNumTextField;
        
        private string testTypeField;
        
        private string benchField;
        
        private bool mergeField;
        
        /// <remarks/>
        public System.DateTime Authdate {
            get {
                return this.authdateField;
            }
            set {
                this.authdateField = value;
            }
        }
        
        /// <remarks/>
        public string CFH {
            get {
                return this.cFHField;
            }
            set {
                this.cFHField = value;
            }
        }
        
        /// <remarks/>
        public string HOSPNUM {
            get {
                return this.hOSPNUMField;
            }
            set {
                this.hOSPNUMField = value;
            }
        }
        
        /// <remarks/>
        public string LabNum {
            get {
                return this.labNumField;
            }
            set {
                this.labNumField = value;
            }
        }
        
        /// <remarks/>
        public string LabNumText {
            get {
                return this.labNumTextField;
            }
            set {
                this.labNumTextField = value;
            }
        }
        
        /// <remarks/>
        public string TestType {
            get {
                return this.testTypeField;
            }
            set {
                this.testTypeField = value;
            }
        }
        
        /// <remarks/>
        public string Bench {
            get {
                return this.benchField;
            }
            set {
                this.benchField = value;
            }
        }
        
        /// <remarks/>
        public bool Merge {
            get {
                return this.mergeField;
            }
            set {
                this.mergeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ReportTempInfo {
        
        private string templeteIDField;
        
        private string parentIDField;
        
        private string parentNameField;
        
        private string testTypeField;
        
        private string templeteNameField;
        
        private byte[] reportSourceField;
        
        /// <remarks/>
        public string TempleteID {
            get {
                return this.templeteIDField;
            }
            set {
                this.templeteIDField = value;
            }
        }
        
        /// <remarks/>
        public string ParentID {
            get {
                return this.parentIDField;
            }
            set {
                this.parentIDField = value;
            }
        }
        
        /// <remarks/>
        public string ParentName {
            get {
                return this.parentNameField;
            }
            set {
                this.parentNameField = value;
            }
        }
        
        /// <remarks/>
        public string TestType {
            get {
                return this.testTypeField;
            }
            set {
                this.testTypeField = value;
            }
        }
        
        /// <remarks/>
        public string TempleteName {
            get {
                return this.templeteNameField;
            }
            set {
                this.templeteNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] ReportSource {
            get {
                return this.reportSourceField;
            }
            set {
                this.reportSourceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Painent {
        
        private string sexField;
        
        private string hospnumField;
        
        private string ch_nameField;
        
        private string birth_dateField;
        
        private string ageField;
        
        private string age_monthField;
        
        private string age_dayField;
        
        private string bLOOD_GROUPField;
        
        private string dOC_NameOField;
        
        private string dOC_NAMEC1Field;
        
        private string dOC_NAMEC2Field;
        
        private string dOC_NAMEC3Field;
        
        private string lOCATIONField;
        
        private string rOOM_NUMField;
        
        private string bED_NUMField;
        
        private string organ_NameField;
        
        private string spec_intmField;
        
        private string hEALTH_NUMField;
        
        private string provinceField;
        
        private string cityField;
        
        private string phone_1Field;
        
        private string phone_2Field;
        
        private string address_1Field;
        
        private string post_codeField;
        
        private string heightField;
        
        private string weightField;
        
        private string priorityField;
        
        private string ord_dateField;
        
        private string ord_ByField;
        
        private string date_ColField;
        
        private string col_ByField;
        
        private string recv_DateField;
        
        private string recv_ByField;
        
        private string date_EditField;
        
        private string edit_ByField;
        
        private string les_DateField;
        
        private string les_ByField;
        
        private string rPT_DateField;
        
        private string truereport_byField;
        
        private string commentsField;
        
        private string typeField;
        
        /// <remarks/>
        public string sex {
            get {
                return this.sexField;
            }
            set {
                this.sexField = value;
            }
        }
        
        /// <remarks/>
        public string hospnum {
            get {
                return this.hospnumField;
            }
            set {
                this.hospnumField = value;
            }
        }
        
        /// <remarks/>
        public string ch_name {
            get {
                return this.ch_nameField;
            }
            set {
                this.ch_nameField = value;
            }
        }
        
        /// <remarks/>
        public string birth_date {
            get {
                return this.birth_dateField;
            }
            set {
                this.birth_dateField = value;
            }
        }
        
        /// <remarks/>
        public string age {
            get {
                return this.ageField;
            }
            set {
                this.ageField = value;
            }
        }
        
        /// <remarks/>
        public string age_month {
            get {
                return this.age_monthField;
            }
            set {
                this.age_monthField = value;
            }
        }
        
        /// <remarks/>
        public string age_day {
            get {
                return this.age_dayField;
            }
            set {
                this.age_dayField = value;
            }
        }
        
        /// <remarks/>
        public string BLOOD_GROUP {
            get {
                return this.bLOOD_GROUPField;
            }
            set {
                this.bLOOD_GROUPField = value;
            }
        }
        
        /// <remarks/>
        public string DOC_NameO {
            get {
                return this.dOC_NameOField;
            }
            set {
                this.dOC_NameOField = value;
            }
        }
        
        /// <remarks/>
        public string DOC_NAMEC1 {
            get {
                return this.dOC_NAMEC1Field;
            }
            set {
                this.dOC_NAMEC1Field = value;
            }
        }
        
        /// <remarks/>
        public string DOC_NAMEC2 {
            get {
                return this.dOC_NAMEC2Field;
            }
            set {
                this.dOC_NAMEC2Field = value;
            }
        }
        
        /// <remarks/>
        public string DOC_NAMEC3 {
            get {
                return this.dOC_NAMEC3Field;
            }
            set {
                this.dOC_NAMEC3Field = value;
            }
        }
        
        /// <remarks/>
        public string LOCATION {
            get {
                return this.lOCATIONField;
            }
            set {
                this.lOCATIONField = value;
            }
        }
        
        /// <remarks/>
        public string ROOM_NUM {
            get {
                return this.rOOM_NUMField;
            }
            set {
                this.rOOM_NUMField = value;
            }
        }
        
        /// <remarks/>
        public string BED_NUM {
            get {
                return this.bED_NUMField;
            }
            set {
                this.bED_NUMField = value;
            }
        }
        
        /// <remarks/>
        public string organ_Name {
            get {
                return this.organ_NameField;
            }
            set {
                this.organ_NameField = value;
            }
        }
        
        /// <remarks/>
        public string spec_intm {
            get {
                return this.spec_intmField;
            }
            set {
                this.spec_intmField = value;
            }
        }
        
        /// <remarks/>
        public string HEALTH_NUM {
            get {
                return this.hEALTH_NUMField;
            }
            set {
                this.hEALTH_NUMField = value;
            }
        }
        
        /// <remarks/>
        public string Province {
            get {
                return this.provinceField;
            }
            set {
                this.provinceField = value;
            }
        }
        
        /// <remarks/>
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string Phone_1 {
            get {
                return this.phone_1Field;
            }
            set {
                this.phone_1Field = value;
            }
        }
        
        /// <remarks/>
        public string Phone_2 {
            get {
                return this.phone_2Field;
            }
            set {
                this.phone_2Field = value;
            }
        }
        
        /// <remarks/>
        public string Address_1 {
            get {
                return this.address_1Field;
            }
            set {
                this.address_1Field = value;
            }
        }
        
        /// <remarks/>
        public string post_code {
            get {
                return this.post_codeField;
            }
            set {
                this.post_codeField = value;
            }
        }
        
        /// <remarks/>
        public string Height {
            get {
                return this.heightField;
            }
            set {
                this.heightField = value;
            }
        }
        
        /// <remarks/>
        public string Weight {
            get {
                return this.weightField;
            }
            set {
                this.weightField = value;
            }
        }
        
        /// <remarks/>
        public string Priority {
            get {
                return this.priorityField;
            }
            set {
                this.priorityField = value;
            }
        }
        
        /// <remarks/>
        public string Ord_date {
            get {
                return this.ord_dateField;
            }
            set {
                this.ord_dateField = value;
            }
        }
        
        /// <remarks/>
        public string Ord_By {
            get {
                return this.ord_ByField;
            }
            set {
                this.ord_ByField = value;
            }
        }
        
        /// <remarks/>
        public string Date_Col {
            get {
                return this.date_ColField;
            }
            set {
                this.date_ColField = value;
            }
        }
        
        /// <remarks/>
        public string Col_By {
            get {
                return this.col_ByField;
            }
            set {
                this.col_ByField = value;
            }
        }
        
        /// <remarks/>
        public string Recv_Date {
            get {
                return this.recv_DateField;
            }
            set {
                this.recv_DateField = value;
            }
        }
        
        /// <remarks/>
        public string Recv_By {
            get {
                return this.recv_ByField;
            }
            set {
                this.recv_ByField = value;
            }
        }
        
        /// <remarks/>
        public string Date_Edit {
            get {
                return this.date_EditField;
            }
            set {
                this.date_EditField = value;
            }
        }
        
        /// <remarks/>
        public string Edit_By {
            get {
                return this.edit_ByField;
            }
            set {
                this.edit_ByField = value;
            }
        }
        
        /// <remarks/>
        public string Les_Date {
            get {
                return this.les_DateField;
            }
            set {
                this.les_DateField = value;
            }
        }
        
        /// <remarks/>
        public string Les_By {
            get {
                return this.les_ByField;
            }
            set {
                this.les_ByField = value;
            }
        }
        
        /// <remarks/>
        public string RPT_Date {
            get {
                return this.rPT_DateField;
            }
            set {
                this.rPT_DateField = value;
            }
        }
        
        /// <remarks/>
        public string truereport_by {
            get {
                return this.truereport_byField;
            }
            set {
                this.truereport_byField = value;
            }
        }
        
        /// <remarks/>
        public string comments {
            get {
                return this.commentsField;
            }
            set {
                this.commentsField = value;
            }
        }
        
        /// <remarks/>
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class TestTypeInfo {
        
        private string deptCodeField;
        
        private string testTypeCodeField;
        
        private string testTypeDescField;
        
        /// <remarks/>
        public string DeptCode {
            get {
                return this.deptCodeField;
            }
            set {
                this.deptCodeField = value;
            }
        }
        
        /// <remarks/>
        public string TestTypeCode {
            get {
                return this.testTypeCodeField;
            }
            set {
                this.testTypeCodeField = value;
            }
        }
        
        /// <remarks/>
        public string TestTypeDesc {
            get {
                return this.testTypeDescField;
            }
            set {
                this.testTypeDescField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class HisPricesInfo {
        
        private System.Nullable<int> dEC2Field;
        
        private System.Nullable<int> lMS_UNITSField;
        
        private System.Nullable<double> pRICEField;
        
        private System.Nullable<int> rEF_OUTField;
        
        private System.Nullable<int> bILLField;
        
        private System.Nullable<float> fACTORField;
        
        private System.Nullable<float> wRK_VALField;
        
        private System.Nullable<System.DateTime> dATE_STARTField;
        
        private System.Nullable<System.DateTime> dATE_TERMField;
        
        private System.Nullable<int> sPEC_INSTField;
        
        private System.Nullable<int> dEL_TESTField;
        
        private System.Nullable<int> aCTIV_TESTField;
        
        private System.Nullable<int> sUP_ZEROField;
        
        private System.Nullable<int> sTAT_TESTField;
        
        private System.Nullable<int> cUM_REPORTField;
        
        private System.Nullable<float> pRICE2Field;
        
        private System.Nullable<float> cOST_STDField;
        
        private System.Nullable<float> cOST_ACTField;
        
        private System.Nullable<float> cONTRACT_PField;
        
        private System.Nullable<int> hGHT_WGHTField;
        
        private System.Nullable<int> tITREField;
        
        private System.Nullable<float> wRK_VAL2Field;
        
        private System.Nullable<int> tOT_VOLField;
        
        private System.Nullable<int> cALC_TESTField;
        
        private System.Nullable<int> rEPORTField;
        
        private System.Nullable<int> rSLT_ENTRYField;
        
        private System.Nullable<int> nO_SERVICEField;
        
        private System.Nullable<int> dISP_TESTField;
        
        private System.Nullable<int> sPEC_RANGField;
        
        private System.Nullable<float> lIMIT_HIField;
        
        private System.Nullable<float> lIMIT_LOField;
        
        private System.Nullable<int> fREQUENTField;
        
        private System.Nullable<int> tABLE_Field;
        
        private System.Nullable<int> eNTRY_LOCKField;
        
        private System.Nullable<int> nUM_LABELSField;
        
        private System.Nullable<int> sP_PFORMATField;
        
        private System.Nullable<int> pRIVACYField;
        
        private System.Nullable<int> lABEL_DNLDField;
        
        private System.Nullable<int> lABELField;
        
        private System.Nullable<int> iS_REFField;
        
        private System.Nullable<int> iS_URIField;
        
        private System.Nullable<float> cOSTField;
        
        private System.Nullable<int> lAB_SPECField;
        
        private System.Nullable<int> tUBE_GROUPField;
        
        private System.Nullable<int> iS_BLANKField;
        
        private System.Nullable<int> iS_ALONEField;
        
        private System.Nullable<float> cVIField;
        
        private System.Nullable<int> cOLLANDRECV_INTERVALTIMEField;
        
        private System.Nullable<int> collectTimeField;
        
        private string aMOUNTField;
        
        private string aREA_CODEField;
        
        private string bENCHField;
        
        private string cHINESEField;
        
        private string cODEField;
        
        private string cODE_K700Field;
        
        private string cOLLECTIONField;
        
        private object cOLLREMARKField;
        
        private decimal colRecv_IntervalField;
        
        private decimal dECIMALSField;
        
        private string dEF_SENSIGROUPField;
        
        private string dEFAULTEXTMTHDField;
        
        private string dELIVERYField;
        
        private string dEPT_CODEField;
        
        private string dEPT_GRUPField;
        
        private string dISCIPLINEField;
        
        private string fASTCODEField;
        
        private string fED_CODEField;
        
        private string fLUID_TYPEField;
        
        private string fORM_Field;
        
        private string gETRPTTIMEREMARKField;
        
        private string gROUP_Field;
        
        private string gROUP_TYPEField;
        
        private string hANDITEMSTYPEIDField;
        
        private string iNST_TYPEField;
        
        private string iNT_TCODEField;
        
        private string iTEM_CNTField;
        
        private string lOC_CODEField;
        
        private string lONG_DESCField;
        
        private string mACHINEField;
        
        private string mIC_BENCHField;
        
        private string mICROTYPEField;
        
        private string nORM_TROUNField;
        
        private string oHIP_CODEField;
        
        private string oRDER_Field;
        
        private string pAN_SPECField;
        
        private string pATIENT_STField;
        
        private string pRINT_HIField;
        
        private string pRINT_LOField;
        
        private string pROV_CODEField;
        
        private string qUANTITYField;
        
        private string rEAGENT_1Field;
        
        private string rEAGENT_2Field;
        
        private string rEAGENT_3Field;
        
        private string rEAGENT_4Field;
        
        private string rEAGENT_5Field;
        
        private string rEF_ACCNTField;
        
        private string sEC_CODEField;
        
        private string sHORT_DESCField;
        
        private string sPEC_MFBField;
        
        private object sPECINSTField;
        
        private object sPECRANGField;
        
        private string sPECRANGFField;
        
        private string sPECRANGMField;
        
        private string sPINField;
        
        private string sTANDARDCODEField;
        
        private string sTAT_TROUNField;
        
        private string sTORAGEField;
        
        private string tEST_GROUPField;
        
        private string tEST_MODEField;
        
        private string tEST_TYPEField;
        
        private string tUBE_TYPEField;
        
        private string uNITSField;
        
        private string uNITS2Field;
        
        private string uOMField;
        
        private string uRI_BENCHField;
        
        private string wRK_CODEField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> DEC2 {
            get {
                return this.dEC2Field;
            }
            set {
                this.dEC2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> LMS_UNITS {
            get {
                return this.lMS_UNITSField;
            }
            set {
                this.lMS_UNITSField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> PRICE {
            get {
                return this.pRICEField;
            }
            set {
                this.pRICEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> REF_OUT {
            get {
                return this.rEF_OUTField;
            }
            set {
                this.rEF_OUTField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> BILL {
            get {
                return this.bILLField;
            }
            set {
                this.bILLField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<float> FACTOR {
            get {
                return this.fACTORField;
            }
            set {
                this.fACTORField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<float> WRK_VAL {
            get {
                return this.wRK_VALField;
            }
            set {
                this.wRK_VALField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> DATE_START {
            get {
                return this.dATE_STARTField;
            }
            set {
                this.dATE_STARTField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> DATE_TERM {
            get {
                return this.dATE_TERMField;
            }
            set {
                this.dATE_TERMField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> SPEC_INST {
            get {
                return this.sPEC_INSTField;
            }
            set {
                this.sPEC_INSTField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> DEL_TEST {
            get {
                return this.dEL_TESTField;
            }
            set {
                this.dEL_TESTField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ACTIV_TEST {
            get {
                return this.aCTIV_TESTField;
            }
            set {
                this.aCTIV_TESTField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> SUP_ZERO {
            get {
                return this.sUP_ZEROField;
            }
            set {
                this.sUP_ZEROField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> STAT_TEST {
            get {
                return this.sTAT_TESTField;
            }
            set {
                this.sTAT_TESTField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> CUM_REPORT {
            get {
                return this.cUM_REPORTField;
            }
            set {
                this.cUM_REPORTField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<float> PRICE2 {
            get {
                return this.pRICE2Field;
            }
            set {
                this.pRICE2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<float> COST_STD {
            get {
                return this.cOST_STDField;
            }
            set {
                this.cOST_STDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<float> COST_ACT {
            get {
                return this.cOST_ACTField;
            }
            set {
                this.cOST_ACTField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<float> CONTRACT_P {
            get {
                return this.cONTRACT_PField;
            }
            set {
                this.cONTRACT_PField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> HGHT_WGHT {
            get {
                return this.hGHT_WGHTField;
            }
            set {
                this.hGHT_WGHTField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> TITRE {
            get {
                return this.tITREField;
            }
            set {
                this.tITREField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<float> WRK_VAL2 {
            get {
                return this.wRK_VAL2Field;
            }
            set {
                this.wRK_VAL2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> TOT_VOL {
            get {
                return this.tOT_VOLField;
            }
            set {
                this.tOT_VOLField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> CALC_TEST {
            get {
                return this.cALC_TESTField;
            }
            set {
                this.cALC_TESTField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> REPORT {
            get {
                return this.rEPORTField;
            }
            set {
                this.rEPORTField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> RSLT_ENTRY {
            get {
                return this.rSLT_ENTRYField;
            }
            set {
                this.rSLT_ENTRYField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> NO_SERVICE {
            get {
                return this.nO_SERVICEField;
            }
            set {
                this.nO_SERVICEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> DISP_TEST {
            get {
                return this.dISP_TESTField;
            }
            set {
                this.dISP_TESTField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> SPEC_RANG {
            get {
                return this.sPEC_RANGField;
            }
            set {
                this.sPEC_RANGField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<float> LIMIT_HI {
            get {
                return this.lIMIT_HIField;
            }
            set {
                this.lIMIT_HIField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<float> LIMIT_LO {
            get {
                return this.lIMIT_LOField;
            }
            set {
                this.lIMIT_LOField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> FREQUENT {
            get {
                return this.fREQUENTField;
            }
            set {
                this.fREQUENTField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> TABLE_ {
            get {
                return this.tABLE_Field;
            }
            set {
                this.tABLE_Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ENTRY_LOCK {
            get {
                return this.eNTRY_LOCKField;
            }
            set {
                this.eNTRY_LOCKField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> NUM_LABELS {
            get {
                return this.nUM_LABELSField;
            }
            set {
                this.nUM_LABELSField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> SP_PFORMAT {
            get {
                return this.sP_PFORMATField;
            }
            set {
                this.sP_PFORMATField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> PRIVACY {
            get {
                return this.pRIVACYField;
            }
            set {
                this.pRIVACYField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> LABEL_DNLD {
            get {
                return this.lABEL_DNLDField;
            }
            set {
                this.lABEL_DNLDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> LABEL {
            get {
                return this.lABELField;
            }
            set {
                this.lABELField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> IS_REF {
            get {
                return this.iS_REFField;
            }
            set {
                this.iS_REFField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> IS_URI {
            get {
                return this.iS_URIField;
            }
            set {
                this.iS_URIField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<float> COST {
            get {
                return this.cOSTField;
            }
            set {
                this.cOSTField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> LAB_SPEC {
            get {
                return this.lAB_SPECField;
            }
            set {
                this.lAB_SPECField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> TUBE_GROUP {
            get {
                return this.tUBE_GROUPField;
            }
            set {
                this.tUBE_GROUPField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> IS_BLANK {
            get {
                return this.iS_BLANKField;
            }
            set {
                this.iS_BLANKField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> IS_ALONE {
            get {
                return this.iS_ALONEField;
            }
            set {
                this.iS_ALONEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<float> CVI {
            get {
                return this.cVIField;
            }
            set {
                this.cVIField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> COLLANDRECV_INTERVALTIME {
            get {
                return this.cOLLANDRECV_INTERVALTIMEField;
            }
            set {
                this.cOLLANDRECV_INTERVALTIMEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> CollectTime {
            get {
                return this.collectTimeField;
            }
            set {
                this.collectTimeField = value;
            }
        }
        
        /// <remarks/>
        public string AMOUNT {
            get {
                return this.aMOUNTField;
            }
            set {
                this.aMOUNTField = value;
            }
        }
        
        /// <remarks/>
        public string AREA_CODE {
            get {
                return this.aREA_CODEField;
            }
            set {
                this.aREA_CODEField = value;
            }
        }
        
        /// <remarks/>
        public string BENCH {
            get {
                return this.bENCHField;
            }
            set {
                this.bENCHField = value;
            }
        }
        
        /// <remarks/>
        public string CHINESE {
            get {
                return this.cHINESEField;
            }
            set {
                this.cHINESEField = value;
            }
        }
        
        /// <remarks/>
        public string CODE {
            get {
                return this.cODEField;
            }
            set {
                this.cODEField = value;
            }
        }
        
        /// <remarks/>
        public string CODE_K700 {
            get {
                return this.cODE_K700Field;
            }
            set {
                this.cODE_K700Field = value;
            }
        }
        
        /// <remarks/>
        public string COLLECTION {
            get {
                return this.cOLLECTIONField;
            }
            set {
                this.cOLLECTIONField = value;
            }
        }
        
        /// <remarks/>
        public object COLLREMARK {
            get {
                return this.cOLLREMARKField;
            }
            set {
                this.cOLLREMARKField = value;
            }
        }
        
        /// <remarks/>
        public decimal ColRecv_Interval {
            get {
                return this.colRecv_IntervalField;
            }
            set {
                this.colRecv_IntervalField = value;
            }
        }
        
        /// <remarks/>
        public decimal DECIMALS {
            get {
                return this.dECIMALSField;
            }
            set {
                this.dECIMALSField = value;
            }
        }
        
        /// <remarks/>
        public string DEF_SENSIGROUP {
            get {
                return this.dEF_SENSIGROUPField;
            }
            set {
                this.dEF_SENSIGROUPField = value;
            }
        }
        
        /// <remarks/>
        public string DEFAULTEXTMTHD {
            get {
                return this.dEFAULTEXTMTHDField;
            }
            set {
                this.dEFAULTEXTMTHDField = value;
            }
        }
        
        /// <remarks/>
        public string DELIVERY {
            get {
                return this.dELIVERYField;
            }
            set {
                this.dELIVERYField = value;
            }
        }
        
        /// <remarks/>
        public string DEPT_CODE {
            get {
                return this.dEPT_CODEField;
            }
            set {
                this.dEPT_CODEField = value;
            }
        }
        
        /// <remarks/>
        public string DEPT_GRUP {
            get {
                return this.dEPT_GRUPField;
            }
            set {
                this.dEPT_GRUPField = value;
            }
        }
        
        /// <remarks/>
        public string DISCIPLINE {
            get {
                return this.dISCIPLINEField;
            }
            set {
                this.dISCIPLINEField = value;
            }
        }
        
        /// <remarks/>
        public string FASTCODE {
            get {
                return this.fASTCODEField;
            }
            set {
                this.fASTCODEField = value;
            }
        }
        
        /// <remarks/>
        public string FED_CODE {
            get {
                return this.fED_CODEField;
            }
            set {
                this.fED_CODEField = value;
            }
        }
        
        /// <remarks/>
        public string FLUID_TYPE {
            get {
                return this.fLUID_TYPEField;
            }
            set {
                this.fLUID_TYPEField = value;
            }
        }
        
        /// <remarks/>
        public string FORM_ {
            get {
                return this.fORM_Field;
            }
            set {
                this.fORM_Field = value;
            }
        }
        
        /// <remarks/>
        public string GETRPTTIMEREMARK {
            get {
                return this.gETRPTTIMEREMARKField;
            }
            set {
                this.gETRPTTIMEREMARKField = value;
            }
        }
        
        /// <remarks/>
        public string GROUP_ {
            get {
                return this.gROUP_Field;
            }
            set {
                this.gROUP_Field = value;
            }
        }
        
        /// <remarks/>
        public string GROUP_TYPE {
            get {
                return this.gROUP_TYPEField;
            }
            set {
                this.gROUP_TYPEField = value;
            }
        }
        
        /// <remarks/>
        public string HANDITEMSTYPEID {
            get {
                return this.hANDITEMSTYPEIDField;
            }
            set {
                this.hANDITEMSTYPEIDField = value;
            }
        }
        
        /// <remarks/>
        public string INST_TYPE {
            get {
                return this.iNST_TYPEField;
            }
            set {
                this.iNST_TYPEField = value;
            }
        }
        
        /// <remarks/>
        public string INT_TCODE {
            get {
                return this.iNT_TCODEField;
            }
            set {
                this.iNT_TCODEField = value;
            }
        }
        
        /// <remarks/>
        public string ITEM_CNT {
            get {
                return this.iTEM_CNTField;
            }
            set {
                this.iTEM_CNTField = value;
            }
        }
        
        /// <remarks/>
        public string LOC_CODE {
            get {
                return this.lOC_CODEField;
            }
            set {
                this.lOC_CODEField = value;
            }
        }
        
        /// <remarks/>
        public string LONG_DESC {
            get {
                return this.lONG_DESCField;
            }
            set {
                this.lONG_DESCField = value;
            }
        }
        
        /// <remarks/>
        public string MACHINE {
            get {
                return this.mACHINEField;
            }
            set {
                this.mACHINEField = value;
            }
        }
        
        /// <remarks/>
        public string MIC_BENCH {
            get {
                return this.mIC_BENCHField;
            }
            set {
                this.mIC_BENCHField = value;
            }
        }
        
        /// <remarks/>
        public string MICROTYPE {
            get {
                return this.mICROTYPEField;
            }
            set {
                this.mICROTYPEField = value;
            }
        }
        
        /// <remarks/>
        public string NORM_TROUN {
            get {
                return this.nORM_TROUNField;
            }
            set {
                this.nORM_TROUNField = value;
            }
        }
        
        /// <remarks/>
        public string OHIP_CODE {
            get {
                return this.oHIP_CODEField;
            }
            set {
                this.oHIP_CODEField = value;
            }
        }
        
        /// <remarks/>
        public string ORDER_ {
            get {
                return this.oRDER_Field;
            }
            set {
                this.oRDER_Field = value;
            }
        }
        
        /// <remarks/>
        public string PAN_SPEC {
            get {
                return this.pAN_SPECField;
            }
            set {
                this.pAN_SPECField = value;
            }
        }
        
        /// <remarks/>
        public string PATIENT_ST {
            get {
                return this.pATIENT_STField;
            }
            set {
                this.pATIENT_STField = value;
            }
        }
        
        /// <remarks/>
        public string PRINT_HI {
            get {
                return this.pRINT_HIField;
            }
            set {
                this.pRINT_HIField = value;
            }
        }
        
        /// <remarks/>
        public string PRINT_LO {
            get {
                return this.pRINT_LOField;
            }
            set {
                this.pRINT_LOField = value;
            }
        }
        
        /// <remarks/>
        public string PROV_CODE {
            get {
                return this.pROV_CODEField;
            }
            set {
                this.pROV_CODEField = value;
            }
        }
        
        /// <remarks/>
        public string QUANTITY {
            get {
                return this.qUANTITYField;
            }
            set {
                this.qUANTITYField = value;
            }
        }
        
        /// <remarks/>
        public string REAGENT_1 {
            get {
                return this.rEAGENT_1Field;
            }
            set {
                this.rEAGENT_1Field = value;
            }
        }
        
        /// <remarks/>
        public string REAGENT_2 {
            get {
                return this.rEAGENT_2Field;
            }
            set {
                this.rEAGENT_2Field = value;
            }
        }
        
        /// <remarks/>
        public string REAGENT_3 {
            get {
                return this.rEAGENT_3Field;
            }
            set {
                this.rEAGENT_3Field = value;
            }
        }
        
        /// <remarks/>
        public string REAGENT_4 {
            get {
                return this.rEAGENT_4Field;
            }
            set {
                this.rEAGENT_4Field = value;
            }
        }
        
        /// <remarks/>
        public string REAGENT_5 {
            get {
                return this.rEAGENT_5Field;
            }
            set {
                this.rEAGENT_5Field = value;
            }
        }
        
        /// <remarks/>
        public string REF_ACCNT {
            get {
                return this.rEF_ACCNTField;
            }
            set {
                this.rEF_ACCNTField = value;
            }
        }
        
        /// <remarks/>
        public string SEC_CODE {
            get {
                return this.sEC_CODEField;
            }
            set {
                this.sEC_CODEField = value;
            }
        }
        
        /// <remarks/>
        public string SHORT_DESC {
            get {
                return this.sHORT_DESCField;
            }
            set {
                this.sHORT_DESCField = value;
            }
        }
        
        /// <remarks/>
        public string SPEC_MFB {
            get {
                return this.sPEC_MFBField;
            }
            set {
                this.sPEC_MFBField = value;
            }
        }
        
        /// <remarks/>
        public object SPECINST {
            get {
                return this.sPECINSTField;
            }
            set {
                this.sPECINSTField = value;
            }
        }
        
        /// <remarks/>
        public object SPECRANG {
            get {
                return this.sPECRANGField;
            }
            set {
                this.sPECRANGField = value;
            }
        }
        
        /// <remarks/>
        public string SPECRANGF {
            get {
                return this.sPECRANGFField;
            }
            set {
                this.sPECRANGFField = value;
            }
        }
        
        /// <remarks/>
        public string SPECRANGM {
            get {
                return this.sPECRANGMField;
            }
            set {
                this.sPECRANGMField = value;
            }
        }
        
        /// <remarks/>
        public string SPIN {
            get {
                return this.sPINField;
            }
            set {
                this.sPINField = value;
            }
        }
        
        /// <remarks/>
        public string STANDARDCODE {
            get {
                return this.sTANDARDCODEField;
            }
            set {
                this.sTANDARDCODEField = value;
            }
        }
        
        /// <remarks/>
        public string STAT_TROUN {
            get {
                return this.sTAT_TROUNField;
            }
            set {
                this.sTAT_TROUNField = value;
            }
        }
        
        /// <remarks/>
        public string STORAGE {
            get {
                return this.sTORAGEField;
            }
            set {
                this.sTORAGEField = value;
            }
        }
        
        /// <remarks/>
        public string TEST_GROUP {
            get {
                return this.tEST_GROUPField;
            }
            set {
                this.tEST_GROUPField = value;
            }
        }
        
        /// <remarks/>
        public string TEST_MODE {
            get {
                return this.tEST_MODEField;
            }
            set {
                this.tEST_MODEField = value;
            }
        }
        
        /// <remarks/>
        public string TEST_TYPE {
            get {
                return this.tEST_TYPEField;
            }
            set {
                this.tEST_TYPEField = value;
            }
        }
        
        /// <remarks/>
        public string TUBE_TYPE {
            get {
                return this.tUBE_TYPEField;
            }
            set {
                this.tUBE_TYPEField = value;
            }
        }
        
        /// <remarks/>
        public string UNITS {
            get {
                return this.uNITSField;
            }
            set {
                this.uNITSField = value;
            }
        }
        
        /// <remarks/>
        public string UNITS2 {
            get {
                return this.uNITS2Field;
            }
            set {
                this.uNITS2Field = value;
            }
        }
        
        /// <remarks/>
        public string UOM {
            get {
                return this.uOMField;
            }
            set {
                this.uOMField = value;
            }
        }
        
        /// <remarks/>
        public string URI_BENCH {
            get {
                return this.uRI_BENCHField;
            }
            set {
                this.uRI_BENCHField = value;
            }
        }
        
        /// <remarks/>
        public string WRK_CODE {
            get {
                return this.wRK_CODEField;
            }
            set {
                this.wRK_CODEField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PaintResult {
        
        private string lab_numField;
        
        private string chkField;
        
        private string hospnumField;
        
        private string ch_nameField;
        
        private string sexField;
        
        private string ageField;
        
        private string age_monthField;
        
        private string age_dayField;
        
        private string priorityField;
        
        private string priorityDescField;
        
        private string ext_mthdField;
        
        private string labref_nameField;
        
        private string mach_descField;
        
        private string sampleField;
        
        private string ord_dateField;
        
        private string ord_byField;
        
        private string date_colField;
        
        private string col_byField;
        
        private string recv_dateField;
        
        private string recv_byField;
        
        private string bed_numField;
        
        private string locationField;
        
        private string ishislocationorderField;
        
        private string batchNumField;
        
        private string organ_nameField;
        
        private string les_dateField;
        
        private string type_testField;
        
        private string iNT_CPIField;
        
        private string projectNameField;
        
        private string hosprecvdateField;
        
        private string hosprecvbyField;
        
        /// <remarks/>
        public string lab_num {
            get {
                return this.lab_numField;
            }
            set {
                this.lab_numField = value;
            }
        }
        
        /// <remarks/>
        public string chk {
            get {
                return this.chkField;
            }
            set {
                this.chkField = value;
            }
        }
        
        /// <remarks/>
        public string hospnum {
            get {
                return this.hospnumField;
            }
            set {
                this.hospnumField = value;
            }
        }
        
        /// <remarks/>
        public string ch_name {
            get {
                return this.ch_nameField;
            }
            set {
                this.ch_nameField = value;
            }
        }
        
        /// <remarks/>
        public string sex {
            get {
                return this.sexField;
            }
            set {
                this.sexField = value;
            }
        }
        
        /// <remarks/>
        public string age {
            get {
                return this.ageField;
            }
            set {
                this.ageField = value;
            }
        }
        
        /// <remarks/>
        public string age_month {
            get {
                return this.age_monthField;
            }
            set {
                this.age_monthField = value;
            }
        }
        
        /// <remarks/>
        public string age_day {
            get {
                return this.age_dayField;
            }
            set {
                this.age_dayField = value;
            }
        }
        
        /// <remarks/>
        public string priority {
            get {
                return this.priorityField;
            }
            set {
                this.priorityField = value;
            }
        }
        
        /// <remarks/>
        public string PriorityDesc {
            get {
                return this.priorityDescField;
            }
            set {
                this.priorityDescField = value;
            }
        }
        
        /// <remarks/>
        public string ext_mthd {
            get {
                return this.ext_mthdField;
            }
            set {
                this.ext_mthdField = value;
            }
        }
        
        /// <remarks/>
        public string labref_name {
            get {
                return this.labref_nameField;
            }
            set {
                this.labref_nameField = value;
            }
        }
        
        /// <remarks/>
        public string mach_desc {
            get {
                return this.mach_descField;
            }
            set {
                this.mach_descField = value;
            }
        }
        
        /// <remarks/>
        public string sample {
            get {
                return this.sampleField;
            }
            set {
                this.sampleField = value;
            }
        }
        
        /// <remarks/>
        public string ord_date {
            get {
                return this.ord_dateField;
            }
            set {
                this.ord_dateField = value;
            }
        }
        
        /// <remarks/>
        public string ord_by {
            get {
                return this.ord_byField;
            }
            set {
                this.ord_byField = value;
            }
        }
        
        /// <remarks/>
        public string date_col {
            get {
                return this.date_colField;
            }
            set {
                this.date_colField = value;
            }
        }
        
        /// <remarks/>
        public string col_by {
            get {
                return this.col_byField;
            }
            set {
                this.col_byField = value;
            }
        }
        
        /// <remarks/>
        public string recv_date {
            get {
                return this.recv_dateField;
            }
            set {
                this.recv_dateField = value;
            }
        }
        
        /// <remarks/>
        public string recv_by {
            get {
                return this.recv_byField;
            }
            set {
                this.recv_byField = value;
            }
        }
        
        /// <remarks/>
        public string bed_num {
            get {
                return this.bed_numField;
            }
            set {
                this.bed_numField = value;
            }
        }
        
        /// <remarks/>
        public string location {
            get {
                return this.locationField;
            }
            set {
                this.locationField = value;
            }
        }
        
        /// <remarks/>
        public string ishislocationorder {
            get {
                return this.ishislocationorderField;
            }
            set {
                this.ishislocationorderField = value;
            }
        }
        
        /// <remarks/>
        public string BatchNum {
            get {
                return this.batchNumField;
            }
            set {
                this.batchNumField = value;
            }
        }
        
        /// <remarks/>
        public string organ_name {
            get {
                return this.organ_nameField;
            }
            set {
                this.organ_nameField = value;
            }
        }
        
        /// <remarks/>
        public string les_date {
            get {
                return this.les_dateField;
            }
            set {
                this.les_dateField = value;
            }
        }
        
        /// <remarks/>
        public string type_test {
            get {
                return this.type_testField;
            }
            set {
                this.type_testField = value;
            }
        }
        
        /// <remarks/>
        public string INT_CPI {
            get {
                return this.iNT_CPIField;
            }
            set {
                this.iNT_CPIField = value;
            }
        }
        
        /// <remarks/>
        public string ProjectName {
            get {
                return this.projectNameField;
            }
            set {
                this.projectNameField = value;
            }
        }
        
        /// <remarks/>
        public string hosprecvdate {
            get {
                return this.hosprecvdateField;
            }
            set {
                this.hosprecvdateField = value;
            }
        }
        
        /// <remarks/>
        public string hosprecvby {
            get {
                return this.hosprecvbyField;
            }
            set {
                this.hosprecvbyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DEPTCODEinfo))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EXTMTHDinfo))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SOURCESinfo))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SourcesInfo))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CONTAINERinfo))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(HEALTHCAREUNITinfo))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(HealthCareUnitInfo))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MACHINEinfo))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(LAB_REFinfo))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DEPHEADinfo))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SRCINFOinfo))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(HOSPITALinfo))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public abstract partial class absModel {
        
        private int sortOrderField;
        
        private System.Guid idField;
        
        /// <remarks/>
        public int SortOrder {
            get {
                return this.sortOrderField;
            }
            set {
                this.sortOrderField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class DEPTCODEinfo : absModel {
        
        private string dEPT_CODEField;
        
        private string dEPT_DESCPField;
        
        private string oRDER_BYField;
        
        /// <remarks/>
        public string DEPT_CODE {
            get {
                return this.dEPT_CODEField;
            }
            set {
                this.dEPT_CODEField = value;
            }
        }
        
        /// <remarks/>
        public string DEPT_DESCP {
            get {
                return this.dEPT_DESCPField;
            }
            set {
                this.dEPT_DESCPField = value;
            }
        }
        
        /// <remarks/>
        public string ORDER_BY {
            get {
                return this.oRDER_BYField;
            }
            set {
                this.oRDER_BYField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class EXTMTHDinfo : absModel {
        
        private string bLOOD_SRCField;
        
        private string eXT_MTHDField;
        
        private string dISP_ORDField;
        
        private decimal aCTIVEField;
        
        private string iNT_ECODEField;
        
        private string e_DESPField;
        
        private string sOURCENUMField;
        
        private string iNPUTCODEField;
        
        /// <remarks/>
        public string BLOOD_SRC {
            get {
                return this.bLOOD_SRCField;
            }
            set {
                this.bLOOD_SRCField = value;
            }
        }
        
        /// <remarks/>
        public string EXT_MTHD {
            get {
                return this.eXT_MTHDField;
            }
            set {
                this.eXT_MTHDField = value;
            }
        }
        
        /// <remarks/>
        public string DISP_ORD {
            get {
                return this.dISP_ORDField;
            }
            set {
                this.dISP_ORDField = value;
            }
        }
        
        /// <remarks/>
        public decimal ACTIVE {
            get {
                return this.aCTIVEField;
            }
            set {
                this.aCTIVEField = value;
            }
        }
        
        /// <remarks/>
        public string INT_ECODE {
            get {
                return this.iNT_ECODEField;
            }
            set {
                this.iNT_ECODEField = value;
            }
        }
        
        /// <remarks/>
        public string E_DESP {
            get {
                return this.e_DESPField;
            }
            set {
                this.e_DESPField = value;
            }
        }
        
        /// <remarks/>
        public string SOURCENUM {
            get {
                return this.sOURCENUMField;
            }
            set {
                this.sOURCENUMField = value;
            }
        }
        
        /// <remarks/>
        public string INPUTCODE {
            get {
                return this.iNPUTCODEField;
            }
            set {
                this.iNPUTCODEField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SourcesInfo))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class SOURCESinfo : absModel {
        
        private string oHIP_CODEField;
        
        private string sOURCEField;
        
        private string bENCHField;
        
        private string bENCH_NAMEField;
        
        private string pLATE_SETField;
        
        private string sOURCE_NUMField;
        
        private string sORT_ORDERField;
        
        private string vITEK_CODEField;
        
        /// <remarks/>
        public string OHIP_CODE {
            get {
                return this.oHIP_CODEField;
            }
            set {
                this.oHIP_CODEField = value;
            }
        }
        
        /// <remarks/>
        public string SOURCE {
            get {
                return this.sOURCEField;
            }
            set {
                this.sOURCEField = value;
            }
        }
        
        /// <remarks/>
        public string BENCH {
            get {
                return this.bENCHField;
            }
            set {
                this.bENCHField = value;
            }
        }
        
        /// <remarks/>
        public string BENCH_NAME {
            get {
                return this.bENCH_NAMEField;
            }
            set {
                this.bENCH_NAMEField = value;
            }
        }
        
        /// <remarks/>
        public string PLATE_SET {
            get {
                return this.pLATE_SETField;
            }
            set {
                this.pLATE_SETField = value;
            }
        }
        
        /// <remarks/>
        public string SOURCE_NUM {
            get {
                return this.sOURCE_NUMField;
            }
            set {
                this.sOURCE_NUMField = value;
            }
        }
        
        /// <remarks/>
        public string SORT_ORDER {
            get {
                return this.sORT_ORDERField;
            }
            set {
                this.sORT_ORDERField = value;
            }
        }
        
        /// <remarks/>
        public string VITEK_CODE {
            get {
                return this.vITEK_CODEField;
            }
            set {
                this.vITEK_CODEField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class SourcesInfo : SOURCESinfo {
        
        private string nEED_COL_PLACEField;
        
        /// <remarks/>
        public string NEED_COL_PLACE {
            get {
                return this.nEED_COL_PLACEField;
            }
            set {
                this.nEED_COL_PLACEField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class CONTAINERinfo : absModel {
        
        private string cNTNIDField;
        
        private string cONTAINERField;
        
        /// <remarks/>
        public string CNTNID {
            get {
                return this.cNTNIDField;
            }
            set {
                this.cNTNIDField = value;
            }
        }
        
        /// <remarks/>
        public string CONTAINER {
            get {
                return this.cONTAINERField;
            }
            set {
                this.cONTAINERField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(HealthCareUnitInfo))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class HEALTHCAREUNITinfo : absModel {
        
        private string oRGAN_IDField;
        
        private string oRGAN_NAMEField;
        
        /// <remarks/>
        public string ORGAN_ID {
            get {
                return this.oRGAN_IDField;
            }
            set {
                this.oRGAN_IDField = value;
            }
        }
        
        /// <remarks/>
        public string ORGAN_NAME {
            get {
                return this.oRGAN_NAMEField;
            }
            set {
                this.oRGAN_NAMEField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class HealthCareUnitInfo : HEALTHCAREUNITinfo {
        
        private string fastCodeField;
        
        /// <remarks/>
        public string FastCode {
            get {
                return this.fastCodeField;
            }
            set {
                this.fastCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class MACHINEinfo : absModel {
        
        private string mACH_TYPEField;
        
        private string tYPE_DESCField;
        
        private string mACH_NOField;
        
        private string mACH_CODEField;
        
        private string mACH_DESCField;
        
        private string uNIT_COUNTField;
        
        private string cOUNT_DESCField;
        
        private decimal uNITField;
        
        private decimal aNALYTEField;
        
        private string iNST_TYPEField;
        
        private decimal qcField;
        
        private string bIDIRECTONALField;
        
        private string aCTIVEField;
        
        /// <remarks/>
        public string MACH_TYPE {
            get {
                return this.mACH_TYPEField;
            }
            set {
                this.mACH_TYPEField = value;
            }
        }
        
        /// <remarks/>
        public string TYPE_DESC {
            get {
                return this.tYPE_DESCField;
            }
            set {
                this.tYPE_DESCField = value;
            }
        }
        
        /// <remarks/>
        public string MACH_NO {
            get {
                return this.mACH_NOField;
            }
            set {
                this.mACH_NOField = value;
            }
        }
        
        /// <remarks/>
        public string MACH_CODE {
            get {
                return this.mACH_CODEField;
            }
            set {
                this.mACH_CODEField = value;
            }
        }
        
        /// <remarks/>
        public string MACH_DESC {
            get {
                return this.mACH_DESCField;
            }
            set {
                this.mACH_DESCField = value;
            }
        }
        
        /// <remarks/>
        public string UNIT_COUNT {
            get {
                return this.uNIT_COUNTField;
            }
            set {
                this.uNIT_COUNTField = value;
            }
        }
        
        /// <remarks/>
        public string COUNT_DESC {
            get {
                return this.cOUNT_DESCField;
            }
            set {
                this.cOUNT_DESCField = value;
            }
        }
        
        /// <remarks/>
        public decimal UNIT {
            get {
                return this.uNITField;
            }
            set {
                this.uNITField = value;
            }
        }
        
        /// <remarks/>
        public decimal ANALYTE {
            get {
                return this.aNALYTEField;
            }
            set {
                this.aNALYTEField = value;
            }
        }
        
        /// <remarks/>
        public string INST_TYPE {
            get {
                return this.iNST_TYPEField;
            }
            set {
                this.iNST_TYPEField = value;
            }
        }
        
        /// <remarks/>
        public decimal QC {
            get {
                return this.qcField;
            }
            set {
                this.qcField = value;
            }
        }
        
        /// <remarks/>
        public string BIDIRECTONAL {
            get {
                return this.bIDIRECTONALField;
            }
            set {
                this.bIDIRECTONALField = value;
            }
        }
        
        /// <remarks/>
        public string ACTIVE {
            get {
                return this.aCTIVEField;
            }
            set {
                this.aCTIVEField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class LAB_REFinfo : absModel {
        
        private string aCCOUNTField;
        
        private string lABField;
        
        private string pHONEField;
        
        private string pHONE2Field;
        
        private string aREA_CODEField;
        
        private string fAXField;
        
        private string aDDRESS1Field;
        
        private string aDDRESS2Field;
        
        private string aDDRESS3Field;
        
        private string cITYField;
        
        private string pOSTALField;
        
        private string oUR_ACCNOField;
        
        private string pROVINCEField;
        
        private string eMAILField;
        
        /// <remarks/>
        public string ACCOUNT {
            get {
                return this.aCCOUNTField;
            }
            set {
                this.aCCOUNTField = value;
            }
        }
        
        /// <remarks/>
        public string LAB {
            get {
                return this.lABField;
            }
            set {
                this.lABField = value;
            }
        }
        
        /// <remarks/>
        public string PHONE {
            get {
                return this.pHONEField;
            }
            set {
                this.pHONEField = value;
            }
        }
        
        /// <remarks/>
        public string PHONE2 {
            get {
                return this.pHONE2Field;
            }
            set {
                this.pHONE2Field = value;
            }
        }
        
        /// <remarks/>
        public string AREA_CODE {
            get {
                return this.aREA_CODEField;
            }
            set {
                this.aREA_CODEField = value;
            }
        }
        
        /// <remarks/>
        public string FAX {
            get {
                return this.fAXField;
            }
            set {
                this.fAXField = value;
            }
        }
        
        /// <remarks/>
        public string ADDRESS1 {
            get {
                return this.aDDRESS1Field;
            }
            set {
                this.aDDRESS1Field = value;
            }
        }
        
        /// <remarks/>
        public string ADDRESS2 {
            get {
                return this.aDDRESS2Field;
            }
            set {
                this.aDDRESS2Field = value;
            }
        }
        
        /// <remarks/>
        public string ADDRESS3 {
            get {
                return this.aDDRESS3Field;
            }
            set {
                this.aDDRESS3Field = value;
            }
        }
        
        /// <remarks/>
        public string CITY {
            get {
                return this.cITYField;
            }
            set {
                this.cITYField = value;
            }
        }
        
        /// <remarks/>
        public string POSTAL {
            get {
                return this.pOSTALField;
            }
            set {
                this.pOSTALField = value;
            }
        }
        
        /// <remarks/>
        public string OUR_ACCNO {
            get {
                return this.oUR_ACCNOField;
            }
            set {
                this.oUR_ACCNOField = value;
            }
        }
        
        /// <remarks/>
        public string PROVINCE {
            get {
                return this.pROVINCEField;
            }
            set {
                this.pROVINCEField = value;
            }
        }
        
        /// <remarks/>
        public string EMAIL {
            get {
                return this.eMAILField;
            }
            set {
                this.eMAILField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class DEPHEADinfo : absModel {
        
        private string dESC_Field;
        
        private string iNT_DCODEField;
        
        private string dEPT_GRUPField;
        
        private string dEPT_CODEField;
        
        private string oRDER_BYField;
        
        /// <remarks/>
        public string DESC_ {
            get {
                return this.dESC_Field;
            }
            set {
                this.dESC_Field = value;
            }
        }
        
        /// <remarks/>
        public string INT_DCODE {
            get {
                return this.iNT_DCODEField;
            }
            set {
                this.iNT_DCODEField = value;
            }
        }
        
        /// <remarks/>
        public string DEPT_GRUP {
            get {
                return this.dEPT_GRUPField;
            }
            set {
                this.dEPT_GRUPField = value;
            }
        }
        
        /// <remarks/>
        public string DEPT_CODE {
            get {
                return this.dEPT_CODEField;
            }
            set {
                this.dEPT_CODEField = value;
            }
        }
        
        /// <remarks/>
        public string ORDER_BY {
            get {
                return this.oRDER_BYField;
            }
            set {
                this.oRDER_BYField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class SRCINFOinfo : absModel {
        
        private string sRC_TYPEField;
        
        private string sRC_CODEField;
        
        private string sRC_DESCField;
        
        private decimal aCTIVEField;
        
        private string dISP_ORDField;
        
        private decimal nONPAT_STAField;
        
        private decimal rEFERREDINField;
        
        private decimal bILLABLEField;
        
        private decimal rMTE_SELField;
        
        /// <remarks/>
        public string SRC_TYPE {
            get {
                return this.sRC_TYPEField;
            }
            set {
                this.sRC_TYPEField = value;
            }
        }
        
        /// <remarks/>
        public string SRC_CODE {
            get {
                return this.sRC_CODEField;
            }
            set {
                this.sRC_CODEField = value;
            }
        }
        
        /// <remarks/>
        public string SRC_DESC {
            get {
                return this.sRC_DESCField;
            }
            set {
                this.sRC_DESCField = value;
            }
        }
        
        /// <remarks/>
        public decimal ACTIVE {
            get {
                return this.aCTIVEField;
            }
            set {
                this.aCTIVEField = value;
            }
        }
        
        /// <remarks/>
        public string DISP_ORD {
            get {
                return this.dISP_ORDField;
            }
            set {
                this.dISP_ORDField = value;
            }
        }
        
        /// <remarks/>
        public decimal NONPAT_STA {
            get {
                return this.nONPAT_STAField;
            }
            set {
                this.nONPAT_STAField = value;
            }
        }
        
        /// <remarks/>
        public decimal REFERREDIN {
            get {
                return this.rEFERREDINField;
            }
            set {
                this.rEFERREDINField = value;
            }
        }
        
        /// <remarks/>
        public decimal BILLABLE {
            get {
                return this.bILLABLEField;
            }
            set {
                this.bILLABLEField = value;
            }
        }
        
        /// <remarks/>
        public decimal RMTE_SEL {
            get {
                return this.rMTE_SELField;
            }
            set {
                this.rMTE_SELField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class HOSPITALinfo : absModel {
        
        private string hospidField;
        
        private string hospnameField;
        
        private string fastcodeField;
        
        private string isactiveField;
        
        private string remarkField;
        
        private string hospitalNameField;
        
        private string hospitalEnNameField;
        
        private string hospitalAddressField;
        
        private string hospitalPostCodeField;
        
        private string hospitalTelField;
        
        private string companyENField;
        
        private string companyCNField;
        
        /// <remarks/>
        public string Hospid {
            get {
                return this.hospidField;
            }
            set {
                this.hospidField = value;
            }
        }
        
        /// <remarks/>
        public string Hospname {
            get {
                return this.hospnameField;
            }
            set {
                this.hospnameField = value;
            }
        }
        
        /// <remarks/>
        public string Fastcode {
            get {
                return this.fastcodeField;
            }
            set {
                this.fastcodeField = value;
            }
        }
        
        /// <remarks/>
        public string Isactive {
            get {
                return this.isactiveField;
            }
            set {
                this.isactiveField = value;
            }
        }
        
        /// <remarks/>
        public string Remark {
            get {
                return this.remarkField;
            }
            set {
                this.remarkField = value;
            }
        }
        
        /// <remarks/>
        public string HospitalName {
            get {
                return this.hospitalNameField;
            }
            set {
                this.hospitalNameField = value;
            }
        }
        
        /// <remarks/>
        public string HospitalEnName {
            get {
                return this.hospitalEnNameField;
            }
            set {
                this.hospitalEnNameField = value;
            }
        }
        
        /// <remarks/>
        public string HospitalAddress {
            get {
                return this.hospitalAddressField;
            }
            set {
                this.hospitalAddressField = value;
            }
        }
        
        /// <remarks/>
        public string HospitalPostCode {
            get {
                return this.hospitalPostCodeField;
            }
            set {
                this.hospitalPostCodeField = value;
            }
        }
        
        /// <remarks/>
        public string HospitalTel {
            get {
                return this.hospitalTelField;
            }
            set {
                this.hospitalTelField = value;
            }
        }
        
        /// <remarks/>
        public string CompanyEN {
            get {
                return this.companyENField;
            }
            set {
                this.companyENField = value;
            }
        }
        
        /// <remarks/>
        public string CompanyCN {
            get {
                return this.companyCNField;
            }
            set {
                this.companyCNField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class LisBackLabNumTestInfo {
        
        private System.Guid idField;
        
        private System.Guid lisBackLabNumHeadIdField;
        
        private string medicalAdviceSeqNumField;
        
        private string testIdField;
        
        private string testCodeField;
        
        /// <remarks/>
        public System.Guid Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid LisBackLabNumHeadId {
            get {
                return this.lisBackLabNumHeadIdField;
            }
            set {
                this.lisBackLabNumHeadIdField = value;
            }
        }
        
        /// <remarks/>
        public string MedicalAdviceSeqNum {
            get {
                return this.medicalAdviceSeqNumField;
            }
            set {
                this.medicalAdviceSeqNumField = value;
            }
        }
        
        /// <remarks/>
        public string TestId {
            get {
                return this.testIdField;
            }
            set {
                this.testIdField = value;
            }
        }
        
        /// <remarks/>
        public string TestCode {
            get {
                return this.testCodeField;
            }
            set {
                this.testCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class LisBackLabNumHeadInfo {
        
        private System.Guid idField;
        
        private System.Guid hisMedicalAdviceHeadIdField;
        
        private string labNumField;
        
        private string containerField;
        
        private string specimenTypeField;
        
        /// <remarks/>
        public System.Guid Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid HisMedicalAdviceHeadId {
            get {
                return this.hisMedicalAdviceHeadIdField;
            }
            set {
                this.hisMedicalAdviceHeadIdField = value;
            }
        }
        
        /// <remarks/>
        public string LabNum {
            get {
                return this.labNumField;
            }
            set {
                this.labNumField = value;
            }
        }
        
        /// <remarks/>
        public string Container {
            get {
                return this.containerField;
            }
            set {
                this.containerField = value;
            }
        }
        
        /// <remarks/>
        public string SpecimenType {
            get {
                return this.specimenTypeField;
            }
            set {
                this.specimenTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class LisBackLabNumInfo {
        
        private LisBackLabNumHeadInfo lisBackLabNumHeadField;
        
        private LisBackLabNumTestInfo[] lisBackLabNumTestsField;
        
        /// <remarks/>
        public LisBackLabNumHeadInfo LisBackLabNumHead {
            get {
                return this.lisBackLabNumHeadField;
            }
            set {
                this.lisBackLabNumHeadField = value;
            }
        }
        
        /// <remarks/>
        public LisBackLabNumTestInfo[] LisBackLabNumTests {
            get {
                return this.lisBackLabNumTestsField;
            }
            set {
                this.lisBackLabNumTestsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class LisBackMedicalAdviceInfo {
        
        private HisMedicalAdviceHeadInfo hisMedicalAdviceHeadField;
        
        private LisBackLabNumInfo[] lisBackLabNumField;
        
        /// <remarks/>
        public HisMedicalAdviceHeadInfo HisMedicalAdviceHead {
            get {
                return this.hisMedicalAdviceHeadField;
            }
            set {
                this.hisMedicalAdviceHeadField = value;
            }
        }
        
        /// <remarks/>
        public LisBackLabNumInfo[] LisBackLabNum {
            get {
                return this.lisBackLabNumField;
            }
            set {
                this.lisBackLabNumField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class HisMedicalAdviceHeadInfo : BaseSpecimenHeadInfo {
        
        private System.Guid idField;
        
        private System.Guid hisIdField;
        
        private string medicalAdviceCodeField;
        
        private string operateTypeField;
        
        private string orderTypeField;
        
        private string patientSeqNumField;
        
        private System.DateTime insertDateField;
        
        private string statusField;
        
        private string backInformationField;
        
        private bool hISHasReadedField;
        
        private System.Nullable<System.DateTime> hISReadDateField;
        
        private string systemSourceField;
        
        /// <remarks/>
        public System.Guid Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid HisId {
            get {
                return this.hisIdField;
            }
            set {
                this.hisIdField = value;
            }
        }
        
        /// <remarks/>
        public string MedicalAdviceCode {
            get {
                return this.medicalAdviceCodeField;
            }
            set {
                this.medicalAdviceCodeField = value;
            }
        }
        
        /// <remarks/>
        public string OperateType {
            get {
                return this.operateTypeField;
            }
            set {
                this.operateTypeField = value;
            }
        }
        
        /// <remarks/>
        public string OrderType {
            get {
                return this.orderTypeField;
            }
            set {
                this.orderTypeField = value;
            }
        }
        
        /// <remarks/>
        public string PatientSeqNum {
            get {
                return this.patientSeqNumField;
            }
            set {
                this.patientSeqNumField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime InsertDate {
            get {
                return this.insertDateField;
            }
            set {
                this.insertDateField = value;
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string BackInformation {
            get {
                return this.backInformationField;
            }
            set {
                this.backInformationField = value;
            }
        }
        
        /// <remarks/>
        public bool HISHasReaded {
            get {
                return this.hISHasReadedField;
            }
            set {
                this.hISHasReadedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> HISReadDate {
            get {
                return this.hISReadDateField;
            }
            set {
                this.hISReadDateField = value;
            }
        }
        
        /// <remarks/>
        public string SystemSource {
            get {
                return this.systemSourceField;
            }
            set {
                this.systemSourceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(HisMedicalAdviceHeadInfo))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public abstract partial class BaseSpecimenHeadInfo {
        
        private string hospitalIdField;
        
        private string hospitalNameField;
        
        private string hospNumField;
        
        private string patientNameField;
        
        private string sexIdField;
        
        private System.Nullable<System.DateTime> birthdayDateField;
        
        private System.Nullable<int> ageYearsField;
        
        private System.Nullable<int> ageMonthsField;
        
        private System.Nullable<int> ageDaysField;
        
        private string bloodGroupIdField;
        
        private string bloodGroupDescField;
        
        private string doctorIdField;
        
        private string doctorNameField;
        
        private string deputyDoctorId1Field;
        
        private string deputyDoctorName1Field;
        
        private string deputyDoctorId2Field;
        
        private string deputyDoctorName2Field;
        
        private string locationIdField;
        
        private string locationNameField;
        
        private string roomNumField;
        
        private string bedNumField;
        
        private string organIdField;
        
        private string organNameField;
        
        private string summaryField;
        
        private string patientTypeIdField;
        
        private bool privacyField;
        
        private System.DateTime enterDateTimeField;
        
        private string enterByIdField;
        
        private System.DateTime orderDateTimeField;
        
        private string orderByIdField;
        
        private System.Nullable<System.DateTime> collectDateTimeField;
        
        private string collectByIdField;
        
        private string collectAddressIdField;
        
        private string clinicalDiagnosticsField;
        
        private string medicalAdviceIdField;
        
        private string labNumField;
        
        private string m_UpdateTypeField;
        
        private string m_Ord_IDField;
        
        /// <remarks/>
        public string HospitalId {
            get {
                return this.hospitalIdField;
            }
            set {
                this.hospitalIdField = value;
            }
        }
        
        /// <remarks/>
        public string HospitalName {
            get {
                return this.hospitalNameField;
            }
            set {
                this.hospitalNameField = value;
            }
        }
        
        /// <remarks/>
        public string HospNum {
            get {
                return this.hospNumField;
            }
            set {
                this.hospNumField = value;
            }
        }
        
        /// <remarks/>
        public string PatientName {
            get {
                return this.patientNameField;
            }
            set {
                this.patientNameField = value;
            }
        }
        
        /// <remarks/>
        public string SexId {
            get {
                return this.sexIdField;
            }
            set {
                this.sexIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> BirthdayDate {
            get {
                return this.birthdayDateField;
            }
            set {
                this.birthdayDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> AgeYears {
            get {
                return this.ageYearsField;
            }
            set {
                this.ageYearsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> AgeMonths {
            get {
                return this.ageMonthsField;
            }
            set {
                this.ageMonthsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> AgeDays {
            get {
                return this.ageDaysField;
            }
            set {
                this.ageDaysField = value;
            }
        }
        
        /// <remarks/>
        public string BloodGroupId {
            get {
                return this.bloodGroupIdField;
            }
            set {
                this.bloodGroupIdField = value;
            }
        }
        
        /// <remarks/>
        public string BloodGroupDesc {
            get {
                return this.bloodGroupDescField;
            }
            set {
                this.bloodGroupDescField = value;
            }
        }
        
        /// <remarks/>
        public string DoctorId {
            get {
                return this.doctorIdField;
            }
            set {
                this.doctorIdField = value;
            }
        }
        
        /// <remarks/>
        public string DoctorName {
            get {
                return this.doctorNameField;
            }
            set {
                this.doctorNameField = value;
            }
        }
        
        /// <remarks/>
        public string DeputyDoctorId1 {
            get {
                return this.deputyDoctorId1Field;
            }
            set {
                this.deputyDoctorId1Field = value;
            }
        }
        
        /// <remarks/>
        public string DeputyDoctorName1 {
            get {
                return this.deputyDoctorName1Field;
            }
            set {
                this.deputyDoctorName1Field = value;
            }
        }
        
        /// <remarks/>
        public string DeputyDoctorId2 {
            get {
                return this.deputyDoctorId2Field;
            }
            set {
                this.deputyDoctorId2Field = value;
            }
        }
        
        /// <remarks/>
        public string DeputyDoctorName2 {
            get {
                return this.deputyDoctorName2Field;
            }
            set {
                this.deputyDoctorName2Field = value;
            }
        }
        
        /// <remarks/>
        public string LocationId {
            get {
                return this.locationIdField;
            }
            set {
                this.locationIdField = value;
            }
        }
        
        /// <remarks/>
        public string LocationName {
            get {
                return this.locationNameField;
            }
            set {
                this.locationNameField = value;
            }
        }
        
        /// <remarks/>
        public string RoomNum {
            get {
                return this.roomNumField;
            }
            set {
                this.roomNumField = value;
            }
        }
        
        /// <remarks/>
        public string BedNum {
            get {
                return this.bedNumField;
            }
            set {
                this.bedNumField = value;
            }
        }
        
        /// <remarks/>
        public string OrganId {
            get {
                return this.organIdField;
            }
            set {
                this.organIdField = value;
            }
        }
        
        /// <remarks/>
        public string OrganName {
            get {
                return this.organNameField;
            }
            set {
                this.organNameField = value;
            }
        }
        
        /// <remarks/>
        public string Summary {
            get {
                return this.summaryField;
            }
            set {
                this.summaryField = value;
            }
        }
        
        /// <remarks/>
        public string PatientTypeId {
            get {
                return this.patientTypeIdField;
            }
            set {
                this.patientTypeIdField = value;
            }
        }
        
        /// <remarks/>
        public bool Privacy {
            get {
                return this.privacyField;
            }
            set {
                this.privacyField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime EnterDateTime {
            get {
                return this.enterDateTimeField;
            }
            set {
                this.enterDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public string EnterById {
            get {
                return this.enterByIdField;
            }
            set {
                this.enterByIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime OrderDateTime {
            get {
                return this.orderDateTimeField;
            }
            set {
                this.orderDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public string OrderById {
            get {
                return this.orderByIdField;
            }
            set {
                this.orderByIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> CollectDateTime {
            get {
                return this.collectDateTimeField;
            }
            set {
                this.collectDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public string CollectById {
            get {
                return this.collectByIdField;
            }
            set {
                this.collectByIdField = value;
            }
        }
        
        /// <remarks/>
        public string CollectAddressId {
            get {
                return this.collectAddressIdField;
            }
            set {
                this.collectAddressIdField = value;
            }
        }
        
        /// <remarks/>
        public string ClinicalDiagnostics {
            get {
                return this.clinicalDiagnosticsField;
            }
            set {
                this.clinicalDiagnosticsField = value;
            }
        }
        
        /// <remarks/>
        public string MedicalAdviceId {
            get {
                return this.medicalAdviceIdField;
            }
            set {
                this.medicalAdviceIdField = value;
            }
        }
        
        /// <remarks/>
        public string LabNum {
            get {
                return this.labNumField;
            }
            set {
                this.labNumField = value;
            }
        }
        
        /// <remarks/>
        public string m_UpdateType {
            get {
                return this.m_UpdateTypeField;
            }
            set {
                this.m_UpdateTypeField = value;
            }
        }
        
        /// <remarks/>
        public string m_Ord_ID {
            get {
                return this.m_Ord_IDField;
            }
            set {
                this.m_Ord_IDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(BaseSpecimenTestInfo))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(HisMedicalAdviceTestInfo))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class TestInfo {
        
        private string testIdField;
        
        private string testDescField;
        
        /// <remarks/>
        public string TestId {
            get {
                return this.testIdField;
            }
            set {
                this.testIdField = value;
            }
        }
        
        /// <remarks/>
        public string TestDesc {
            get {
                return this.testDescField;
            }
            set {
                this.testDescField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(HisMedicalAdviceTestInfo))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public abstract partial class BaseSpecimenTestInfo : TestInfo {
        
        private System.Guid idField;
        
        private string testCodeField;
        
        private string specimenTypeIdField;
        
        private string containerIdField;
        
        private string priorityIdField;
        
        private double priceField;
        
        private string collectPositionField;
        
        private string groupNoField;
        
        private string shortPriceNameField;
        
        private string testCodeIndexField;
        
        private string testTypeField;
        
        private string test_UpdateTypeField;
        
        /// <remarks/>
        public System.Guid Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string TestCode {
            get {
                return this.testCodeField;
            }
            set {
                this.testCodeField = value;
            }
        }
        
        /// <remarks/>
        public string SpecimenTypeId {
            get {
                return this.specimenTypeIdField;
            }
            set {
                this.specimenTypeIdField = value;
            }
        }
        
        /// <remarks/>
        public string ContainerId {
            get {
                return this.containerIdField;
            }
            set {
                this.containerIdField = value;
            }
        }
        
        /// <remarks/>
        public string PriorityId {
            get {
                return this.priorityIdField;
            }
            set {
                this.priorityIdField = value;
            }
        }
        
        /// <remarks/>
        public double Price {
            get {
                return this.priceField;
            }
            set {
                this.priceField = value;
            }
        }
        
        /// <remarks/>
        public string CollectPosition {
            get {
                return this.collectPositionField;
            }
            set {
                this.collectPositionField = value;
            }
        }
        
        /// <remarks/>
        public string GroupNo {
            get {
                return this.groupNoField;
            }
            set {
                this.groupNoField = value;
            }
        }
        
        /// <remarks/>
        public string ShortPriceName {
            get {
                return this.shortPriceNameField;
            }
            set {
                this.shortPriceNameField = value;
            }
        }
        
        /// <remarks/>
        public string TestCodeIndex {
            get {
                return this.testCodeIndexField;
            }
            set {
                this.testCodeIndexField = value;
            }
        }
        
        /// <remarks/>
        public string TestType {
            get {
                return this.testTypeField;
            }
            set {
                this.testTypeField = value;
            }
        }
        
        /// <remarks/>
        public string Test_UpdateType {
            get {
                return this.test_UpdateTypeField;
            }
            set {
                this.test_UpdateTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class HisMedicalAdviceTestInfo : BaseSpecimenTestInfo {
        
        private System.Guid hisMedicalAdviceHeadIdField;
        
        private string medicalAdviceSeqNumField;
        
        /// <remarks/>
        public System.Guid HisMedicalAdviceHeadId {
            get {
                return this.hisMedicalAdviceHeadIdField;
            }
            set {
                this.hisMedicalAdviceHeadIdField = value;
            }
        }
        
        /// <remarks/>
        public string MedicalAdviceSeqNum {
            get {
                return this.medicalAdviceSeqNumField;
            }
            set {
                this.medicalAdviceSeqNumField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class HisMedicalAdviceInfo {
        
        private HisMedicalAdviceHeadInfo hisMedicalAdviceHeadField;
        
        private HisMedicalAdviceTestInfo[] hisMedicalAdviceTestsField;
        
        /// <remarks/>
        public HisMedicalAdviceHeadInfo HisMedicalAdviceHead {
            get {
                return this.hisMedicalAdviceHeadField;
            }
            set {
                this.hisMedicalAdviceHeadField = value;
            }
        }
        
        /// <remarks/>
        public HisMedicalAdviceTestInfo[] HisMedicalAdviceTests {
            get {
                return this.hisMedicalAdviceTestsField;
            }
            set {
                this.hisMedicalAdviceTestsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetPrintBarcodeCountCompletedEventHandler(object sender, GetPrintBarcodeCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPrintBarcodeCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPrintBarcodeCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CancelLabForCFHCompletedEventHandler(object sender, CancelLabForCFHCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelLabForCFHCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelLabForCFHCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CancelLabNumCompletedEventHandler(object sender, CancelLabNumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelLabNumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelLabNumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetBarCodeDataCompletedEventHandler(object sender, GetBarCodeDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBarCodeDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBarCodeDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BarCodeInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BarCodeInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void LabCreateCompletedEventHandler(object sender, LabCreateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LabCreateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LabCreateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void InsertMedicalAdvicesCompletedEventHandler(object sender, InsertMedicalAdvicesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertMedicalAdvicesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertMedicalAdvicesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public LisBackMedicalAdviceInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LisBackMedicalAdviceInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetHospitalsCompletedEventHandler(object sender, GetHospitalsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHospitalsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHospitalsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public HOSPITALinfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((HOSPITALinfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetSrcinfoCompletedEventHandler(object sender, GetSrcinfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSrcinfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSrcinfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SRCINFOinfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SRCINFOinfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDepHeadsCompletedEventHandler(object sender, GetDepHeadsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDepHeadsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDepHeadsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DEPHEADinfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DEPHEADinfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void LAB_REFListCompletedEventHandler(object sender, LAB_REFListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LAB_REFListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LAB_REFListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public LAB_REFinfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LAB_REFinfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetMachineCompletedEventHandler(object sender, GetMachineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMachineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMachineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MACHINEinfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MACHINEinfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetLocationCompletedEventHandler(object sender, GetLocationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetHealthCareUnitCompletedEventHandler(object sender, GetHealthCareUnitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHealthCareUnitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHealthCareUnitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public HealthCareUnitInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((HealthCareUnitInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Page_PaintResultSCompletedEventHandler(object sender, Page_PaintResultSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Page_PaintResultSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Page_PaintResultSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Page_PaintResultS_1CompletedEventHandler(object sender, Page_PaintResultS_1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Page_PaintResultS_1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Page_PaintResultS_1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void fastPaintResultSCompletedEventHandler(object sender, fastPaintResultSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fastPaintResultSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fastPaintResultSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void fastPaintResultS_1CompletedEventHandler(object sender, fastPaintResultS_1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fastPaintResultS_1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fastPaintResultS_1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void fastPaintResultSByHospitalIDCompletedEventHandler(object sender, fastPaintResultSByHospitalIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fastPaintResultSByHospitalIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fastPaintResultSByHospitalIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void fastPaintResultSByHospitalID_1CompletedEventHandler(object sender, fastPaintResultSByHospitalID_1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fastPaintResultSByHospitalID_1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fastPaintResultSByHospitalID_1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void PagePaintResultSCompletedEventHandler(object sender, PagePaintResultSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PagePaintResultSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PagePaintResultSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PaintResult[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PaintResult[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getgetMACHDESCCompletedEventHandler(object sender, getgetMACHDESCCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getgetMACHDESCCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getgetMACHDESCCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void StateNameCompletedEventHandler(object sender, StateNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StateNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StateNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetTestRenarkCompletedEventHandler(object sender, GetTestRenarkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTestRenarkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTestRenarkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetTestItemsDescCompletedEventHandler(object sender, GetTestItemsDescCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTestItemsDescCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTestItemsDescCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetIsRightCompletedEventHandler(object sender, GetIsRightCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetIsRightCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetIsRightCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void get_DataLoad_ItemsResultCompletedEventHandler(object sender, get_DataLoad_ItemsResultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class get_DataLoad_ItemsResultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal get_DataLoad_ItemsResultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void get_Load_ItemsInfoCompletedEventHandler(object sender, get_Load_ItemsInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class get_Load_ItemsInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal get_Load_ItemsInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdatePrintBarCodeFlagCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ShowItemMeanCompletedEventHandler(object sender, ShowItemMeanCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ShowItemMeanCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ShowItemMeanCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetMachineByHospitalIDCompletedEventHandler(object sender, GetMachineByHospitalIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMachineByHospitalIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMachineByHospitalIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MACHINEinfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MACHINEinfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getLabGroupLabCompletedEventHandler(object sender, getLabGroupLabCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getLabGroupLabCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getLabGroupLabCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getLabPriceByCodeCompletedEventHandler(object sender, getLabPriceByCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getLabPriceByCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getLabPriceByCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getTestTypeByInGroupInitCodeCompletedEventHandler(object sender, getTestTypeByInGroupInitCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTestTypeByInGroupInitCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTestTypeByInGroupInitCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetContainersCompletedEventHandler(object sender, GetContainersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetContainersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetContainersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CONTAINERinfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CONTAINERinfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetSourcesCompletedEventHandler(object sender, GetSourcesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSourcesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSourcesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SourcesInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SourcesInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetExtmthdsCompletedEventHandler(object sender, GetExtmthdsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetExtmthdsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetExtmthdsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EXTMTHDinfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EXTMTHDinfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getLabPriceSourseCompletedEventHandler(object sender, getLabPriceSourseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getLabPriceSourseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getLabPriceSourseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getLabPriceSourseBySrcIDCompletedEventHandler(object sender, getLabPriceSourseBySrcIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getLabPriceSourseBySrcIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getLabPriceSourseBySrcIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetSourcesListCompletedEventHandler(object sender, GetSourcesListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSourcesListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSourcesListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SourcesInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SourcesInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void InsertHisMedicalAdvicesCompletedEventHandler(object sender, InsertHisMedicalAdvicesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertHisMedicalAdvicesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertHisMedicalAdvicesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public LisBackMedicalAdviceInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LisBackMedicalAdviceInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getHisMedicalAdviceHeadByIDCompletedEventHandler(object sender, getHisMedicalAdviceHeadByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getHisMedicalAdviceHeadByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getHisMedicalAdviceHeadByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetPriceByCodeCompletedEventHandler(object sender, GetPriceByCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPriceByCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPriceByCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public HisPricesInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((HisPricesInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetPricesByCodeCompletedEventHandler(object sender, GetPricesByCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPricesByCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPricesByCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public HisPricesInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((HisPricesInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getApprovalLogCompletedEventHandler(object sender, getApprovalLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getApprovalLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getApprovalLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetTestTypesCompletedEventHandler(object sender, GetTestTypesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTestTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTestTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TestTypeInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TestTypeInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void get_DataLoad_HistoryResultCompletedEventHandler(object sender, get_DataLoad_HistoryResultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class get_DataLoad_HistoryResultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal get_DataLoad_HistoryResultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void get_DataLoad_ItemsCompletedEventHandler(object sender, get_DataLoad_ItemsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class get_DataLoad_ItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal get_DataLoad_ItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getLoadPaintInfoCompletedEventHandler(object sender, getLoadPaintInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getLoadPaintInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getLoadPaintInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Painent Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Painent)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetReferenceRangeAccessCompletedEventHandler(object sender, GetReferenceRangeAccessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReferenceRangeAccessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReferenceRangeAccessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetHostoryDataAccessCompletedEventHandler(object sender, GetHostoryDataAccessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHostoryDataAccessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHostoryDataAccessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetReportPrintLogCountCompletedEventHandler(object sender, GetReportPrintLogCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReportPrintLogCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReportPrintLogCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetTempleteIDCompletedEventHandler(object sender, GetTempleteIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTempleteIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTempleteIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetReportTempCompletedEventHandler(object sender, GetReportTempCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReportTempCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReportTempCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ReportTempInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReportTempInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetReportSourceCompletedEventHandler(object sender, GetReportSourceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReportSourceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReportSourceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateReportTempCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetServerDateTimeCompletedEventHandler(object sender, GetServerDateTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetServerDateTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetServerDateTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.DateTime Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetOperatorCompletedEventHandler(object sender, GetOperatorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOperatorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOperatorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetUserLocationCompletedEventHandler(object sender, GetUserLocationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserLocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserLocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDepartmentCompletedEventHandler(object sender, GetDepartmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDepartmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDepartmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetCpiCompletedEventHandler(object sender, GetCpiCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCpiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCpiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAccumulateCompletedEventHandler(object sender, GetAccumulateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccumulateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccumulateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ParmReportInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ParmReportInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SearchAccumulateCompletedEventHandler(object sender, SearchAccumulateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchAccumulateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchAccumulateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ParmReportInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ParmReportInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateAccumulateCompletedEventHandler(object sender, UpdateAccumulateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateAccumulateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateAccumulateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetLisReportDataCompletedEventHandler(object sender, GetLisReportDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLisReportDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLisReportDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void InsertPrintLogCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void OpenPrintLogCompletedEventHandler(object sender, OpenPrintLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OpenPrintLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OpenPrintLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDeptCodesCompletedEventHandler(object sender, GetDeptCodesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDeptCodesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDeptCodesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DEPTCODEinfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DEPTCODEinfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void InitCodeByTesttypeCompletedEventHandler(object sender, InitCodeByTesttypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitCodeByTesttypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitCodeByTesttypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetPrintCountCompletedEventHandler(object sender, GetPrintCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPrintCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPrintCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void IsNullCompletedEventHandler(object sender, IsNullCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsNullCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsNullCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ZiMianListCompletedEventHandler(object sender, ZiMianListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ZiMianListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ZiMianListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getTestTypeByLabNumCompletedEventHandler(object sender, getTestTypeByLabNumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTestTypeByLabNumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTestTypeByLabNumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getItemsByInitCodeListCompletedEventHandler(object sender, getItemsByInitCodeListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getItemsByInitCodeListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getItemsByInitCodeListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getItemsByInitCodeCompletedEventHandler(object sender, getItemsByInitCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getItemsByInitCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getItemsByInitCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getLabNumsByCFH_ordIDCompletedEventHandler(object sender, getLabNumsByCFH_ordIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getLabNumsByCFH_ordIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getLabNumsByCFH_ordIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SelectPaientByLabNumberCompletedEventHandler(object sender, SelectPaientByLabNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectPaientByLabNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectPaientByLabNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SelectMastestByLabNumberCompletedEventHandler(object sender, SelectMastestByLabNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectMastestByLabNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectMastestByLabNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SelectMicrodatByLabNumberCompletedEventHandler(object sender, SelectMicrodatByLabNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectMicrodatByLabNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectMicrodatByLabNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SelectODTitleCompletedEventHandler(object sender, SelectODTitleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectODTitleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectODTitleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SelectSResultCompletedEventHandler(object sender, SelectSResultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectSResultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectSResultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SelectODResultCompletedEventHandler(object sender, SelectODResultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectODResultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectODResultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getServiceDateTimeCompletedEventHandler(object sender, getServiceDateTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getServiceDateTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getServiceDateTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.DateTime Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetSysParameterValueCompletedEventHandler(object sender, GetSysParameterValueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSysParameterValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSysParameterValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SetSysParameterValueCompletedEventHandler(object sender, SetSysParameterValueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetSysParameterValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetSysParameterValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetHospIDByLabNumCompletedEventHandler(object sender, GetHospIDByLabNumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHospIDByLabNumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHospIDByLabNumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591