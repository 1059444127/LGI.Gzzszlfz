//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.1
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.1 版自动生成。
// 
#pragma warning disable 1591

namespace LGHISJKZGQ.shsjdqzyyyweb2 {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    // CODEGEN: 未处理命名空间“http://www.w3.org/2006/05/addressing/wsdl”中的可选 WSDL 扩展元素“UsingAddressing”。
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="FGPublicServiceSoap11Binding", Namespace="http://tempuri.org/")]
    public partial class FGPublicService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetOperationRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDictionaryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPathologyReportOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public FGPublicService() {
            this.Url = "http://192.168.1.158:1401/services/FGPublicService.FGPublicServiceHttpSoap11Endpo" +
                "int";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetOperationRecordCompletedEventHandler GetOperationRecordCompleted;
        
        /// <remarks/>
        public event GetPatientInfoCompletedEventHandler GetPatientInfoCompleted;
        
        /// <remarks/>
        public event GetDictionaryCompletedEventHandler GetDictionaryCompleted;
        
        /// <remarks/>
        public event GetPathologyReportCompletedEventHandler GetPathologyReportCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:GetOperationRecord", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("payload")]
        public string GetOperationRecord(string GOR) {
            object[] results = this.Invoke("GetOperationRecord", new object[] {
                        GOR});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetOperationRecordAsync(string GOR) {
            this.GetOperationRecordAsync(GOR, null);
        }
        
        /// <remarks/>
        public void GetOperationRecordAsync(string GOR, object userState) {
            if ((this.GetOperationRecordOperationCompleted == null)) {
                this.GetOperationRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOperationRecordOperationCompleted);
            }
            this.InvokeAsync("GetOperationRecord", new object[] {
                        GOR}, this.GetOperationRecordOperationCompleted, userState);
        }
        
        private void OnGetOperationRecordOperationCompleted(object arg) {
            if ((this.GetOperationRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOperationRecordCompleted(this, new GetOperationRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:GetPatientInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("payload")]
        public string GetPatientInfo(string GPI) {
            object[] results = this.Invoke("GetPatientInfo", new object[] {
                        GPI});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientInfoAsync(string GPI) {
            this.GetPatientInfoAsync(GPI, null);
        }
        
        /// <remarks/>
        public void GetPatientInfoAsync(string GPI, object userState) {
            if ((this.GetPatientInfoOperationCompleted == null)) {
                this.GetPatientInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientInfoOperationCompleted);
            }
            this.InvokeAsync("GetPatientInfo", new object[] {
                        GPI}, this.GetPatientInfoOperationCompleted, userState);
        }
        
        private void OnGetPatientInfoOperationCompleted(object arg) {
            if ((this.GetPatientInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientInfoCompleted(this, new GetPatientInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:GetDictionary", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("payload")]
        public string GetDictionary(string GPI) {
            object[] results = this.Invoke("GetDictionary", new object[] {
                        GPI});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDictionaryAsync(string GPI) {
            this.GetDictionaryAsync(GPI, null);
        }
        
        /// <remarks/>
        public void GetDictionaryAsync(string GPI, object userState) {
            if ((this.GetDictionaryOperationCompleted == null)) {
                this.GetDictionaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDictionaryOperationCompleted);
            }
            this.InvokeAsync("GetDictionary", new object[] {
                        GPI}, this.GetDictionaryOperationCompleted, userState);
        }
        
        private void OnGetDictionaryOperationCompleted(object arg) {
            if ((this.GetDictionaryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDictionaryCompleted(this, new GetDictionaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:GetPathologyReport", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("payload")]
        public string GetPathologyReport(string GPR) {
            object[] results = this.Invoke("GetPathologyReport", new object[] {
                        GPR});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPathologyReportAsync(string GPR) {
            this.GetPathologyReportAsync(GPR, null);
        }
        
        /// <remarks/>
        public void GetPathologyReportAsync(string GPR, object userState) {
            if ((this.GetPathologyReportOperationCompleted == null)) {
                this.GetPathologyReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPathologyReportOperationCompleted);
            }
            this.InvokeAsync("GetPathologyReport", new object[] {
                        GPR}, this.GetPathologyReportOperationCompleted, userState);
        }
        
        private void OnGetPathologyReportOperationCompleted(object arg) {
            if ((this.GetPathologyReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPathologyReportCompleted(this, new GetPathologyReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetOperationRecordCompletedEventHandler(object sender, GetOperationRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOperationRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOperationRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetPatientInfoCompletedEventHandler(object sender, GetPatientInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDictionaryCompletedEventHandler(object sender, GetDictionaryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDictionaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDictionaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetPathologyReportCompletedEventHandler(object sender, GetPathologyReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPathologyReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPathologyReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591