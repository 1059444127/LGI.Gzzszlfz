//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.1
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.1 版自动生成。
// 
#pragma warning disable 1591

namespace LGHISJKZGQ.ZSZLWeb {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ServiceSoap", Namespace="http://HIS.org/")]
    public partial class Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback HellorWorldOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitConnOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllPatientNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllPatientNoByPatientNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetConfirmInfoOfXCGByICCardNOOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetConfirmInfoOfXCGByCardNOOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetConfirmInfoOfXDTByCardNOOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetConfirmInfoOfXDTByICCardNOOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientInfoByCardorIcCardOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientBaseInfoByCardorIcCardOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUndrugInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDrugInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetYBYPMLByPactCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientNoByCardNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOperationInfoByDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryAllRegisterInfoBySeedateOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryInhosInfoByICCardOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryInhosDrugFeeInfoByCardNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryInhosUnDrugFeeInfoByCardNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryOutPatientFeeDetailByICCardOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryRegInfoByICCardOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryChkInfoByICCardOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryRegInfobyDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryBySeedateOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryDoctBySeedateOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateAutregdeOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryRegLevOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryPatientInfobyCardNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveAutoPatientOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientInfoByIccardOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientInfoBycardNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback UserLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback DecryptOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertCasPhotoCardNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCasPhotoCardNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateLastPhotoOutDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryCardNoBySecondCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryDiagnoseByInpatientNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryPhotoCardNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMZPatientInfoForGYSOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetZYPatientInfoForGYSOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDeptInfoForGYSOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNurseInfoForGYSOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOPSInfoForGYSOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientInfoByInpatientNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveLISFSRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientWithNewOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCancelSchemaOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHYXTerminalOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service() {
            this.Url = global::LGHISJKZGQ.Properties.Settings.Default.PATHGETHISZGQ_ZSZLWeb_Service;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event HellorWorldCompletedEventHandler HellorWorldCompleted;
        
        /// <remarks/>
        public event InitConnCompletedEventHandler InitConnCompleted;
        
        /// <remarks/>
        public event GetAllPatientNoCompletedEventHandler GetAllPatientNoCompleted;
        
        /// <remarks/>
        public event GetAllPatientNoByPatientNoCompletedEventHandler GetAllPatientNoByPatientNoCompleted;
        
        /// <remarks/>
        public event GetConfirmInfoOfXCGByICCardNOCompletedEventHandler GetConfirmInfoOfXCGByICCardNOCompleted;
        
        /// <remarks/>
        public event GetConfirmInfoOfXCGByCardNOCompletedEventHandler GetConfirmInfoOfXCGByCardNOCompleted;
        
        /// <remarks/>
        public event GetConfirmInfoOfXDTByCardNOCompletedEventHandler GetConfirmInfoOfXDTByCardNOCompleted;
        
        /// <remarks/>
        public event GetConfirmInfoOfXDTByICCardNOCompletedEventHandler GetConfirmInfoOfXDTByICCardNOCompleted;
        
        /// <remarks/>
        public event GetPatientInfoByCardorIcCardCompletedEventHandler GetPatientInfoByCardorIcCardCompleted;
        
        /// <remarks/>
        public event GetPatientBaseInfoByCardorIcCardCompletedEventHandler GetPatientBaseInfoByCardorIcCardCompleted;
        
        /// <remarks/>
        public event TestCompletedEventHandler TestCompleted;
        
        /// <remarks/>
        public event GetUndrugInfoCompletedEventHandler GetUndrugInfoCompleted;
        
        /// <remarks/>
        public event GetDrugInfoCompletedEventHandler GetDrugInfoCompleted;
        
        /// <remarks/>
        public event GetYBYPMLByPactCodeCompletedEventHandler GetYBYPMLByPactCodeCompleted;
        
        /// <remarks/>
        public event GetPatientNoByCardNoCompletedEventHandler GetPatientNoByCardNoCompleted;
        
        /// <remarks/>
        public event GetOperationInfoByDateCompletedEventHandler GetOperationInfoByDateCompleted;
        
        /// <remarks/>
        public event QueryAllRegisterInfoBySeedateCompletedEventHandler QueryAllRegisterInfoBySeedateCompleted;
        
        /// <remarks/>
        public event QueryInhosInfoByICCardCompletedEventHandler QueryInhosInfoByICCardCompleted;
        
        /// <remarks/>
        public event QueryInhosDrugFeeInfoByCardNoCompletedEventHandler QueryInhosDrugFeeInfoByCardNoCompleted;
        
        /// <remarks/>
        public event QueryInhosUnDrugFeeInfoByCardNoCompletedEventHandler QueryInhosUnDrugFeeInfoByCardNoCompleted;
        
        /// <remarks/>
        public event QueryOutPatientFeeDetailByICCardCompletedEventHandler QueryOutPatientFeeDetailByICCardCompleted;
        
        /// <remarks/>
        public event QueryRegInfoByICCardCompletedEventHandler QueryRegInfoByICCardCompleted;
        
        /// <remarks/>
        public event QueryChkInfoByICCardCompletedEventHandler QueryChkInfoByICCardCompleted;
        
        /// <remarks/>
        public event QueryRegInfobyDateCompletedEventHandler QueryRegInfobyDateCompleted;
        
        /// <remarks/>
        public event QueryBySeedateCompletedEventHandler QueryBySeedateCompleted;
        
        /// <remarks/>
        public event QueryDoctBySeedateCompletedEventHandler QueryDoctBySeedateCompleted;
        
        /// <remarks/>
        public event UpdateAutregdeCompletedEventHandler UpdateAutregdeCompleted;
        
        /// <remarks/>
        public event QueryRegLevCompletedEventHandler QueryRegLevCompleted;
        
        /// <remarks/>
        public event QueryPatientInfobyCardNoCompletedEventHandler QueryPatientInfobyCardNoCompleted;
        
        /// <remarks/>
        public event SaveAutoPatientCompletedEventHandler SaveAutoPatientCompleted;
        
        /// <remarks/>
        public event GetPatientInfoByIccardCompletedEventHandler GetPatientInfoByIccardCompleted;
        
        /// <remarks/>
        public event GetPatientInfoBycardNoCompletedEventHandler GetPatientInfoBycardNoCompleted;
        
        /// <remarks/>
        public event UserLoginCompletedEventHandler UserLoginCompleted;
        
        /// <remarks/>
        public event DecryptCompletedEventHandler DecryptCompleted;
        
        /// <remarks/>
        public event InsertCasPhotoCardNoCompletedEventHandler InsertCasPhotoCardNoCompleted;
        
        /// <remarks/>
        public event UpdateCasPhotoCardNoCompletedEventHandler UpdateCasPhotoCardNoCompleted;
        
        /// <remarks/>
        public event UpdateLastPhotoOutDateCompletedEventHandler UpdateLastPhotoOutDateCompleted;
        
        /// <remarks/>
        public event QueryCardNoBySecondCodeCompletedEventHandler QueryCardNoBySecondCodeCompleted;
        
        /// <remarks/>
        public event QueryDiagnoseByInpatientNoCompletedEventHandler QueryDiagnoseByInpatientNoCompleted;
        
        /// <remarks/>
        public event QueryPhotoCardNoCompletedEventHandler QueryPhotoCardNoCompleted;
        
        /// <remarks/>
        public event GetMZPatientInfoForGYSCompletedEventHandler GetMZPatientInfoForGYSCompleted;
        
        /// <remarks/>
        public event GetZYPatientInfoForGYSCompletedEventHandler GetZYPatientInfoForGYSCompleted;
        
        /// <remarks/>
        public event GetDeptInfoForGYSCompletedEventHandler GetDeptInfoForGYSCompleted;
        
        /// <remarks/>
        public event GetNurseInfoForGYSCompletedEventHandler GetNurseInfoForGYSCompleted;
        
        /// <remarks/>
        public event GetOPSInfoForGYSCompletedEventHandler GetOPSInfoForGYSCompleted;
        
        /// <remarks/>
        public event GetPatientInfoByInpatientNoCompletedEventHandler GetPatientInfoByInpatientNoCompleted;
        
        /// <remarks/>
        public event SaveLISFSRecordCompletedEventHandler SaveLISFSRecordCompleted;
        
        /// <remarks/>
        public event GetPatientWithNewOrderCompletedEventHandler GetPatientWithNewOrderCompleted;
        
        /// <remarks/>
        public event GetCancelSchemaCompletedEventHandler GetCancelSchemaCompleted;
        
        /// <remarks/>
        public event GetHYXTerminalCompletedEventHandler GetHYXTerminalCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HIS.org/HellorWorld", RequestNamespace="http://HIS.org/", ResponseNamespace="http://HIS.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HellorWorld(string cardno) {
            object[] results = this.Invoke("HellorWorld", new object[] {
                        cardno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HellorWorldAsync(string cardno) {
            this.HellorWorldAsync(cardno, null);
        }
        
        /// <remarks/>
        public void HellorWorldAsync(string cardno, object userState) {
            if ((this.HellorWorldOperationCompleted == null)) {
                this.HellorWorldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHellorWorldOperationCompleted);
            }
            this.InvokeAsync("HellorWorld", new object[] {
                        cardno}, this.HellorWorldOperationCompleted, userState);
        }
        
        private void OnHellorWorldOperationCompleted(object arg) {
            if ((this.HellorWorldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HellorWorldCompleted(this, new HellorWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HIS.org/InitConn", RequestNamespace="http://HIS.org/", ResponseNamespace="http://HIS.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int InitConn() {
            object[] results = this.Invoke("InitConn", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InitConnAsync() {
            this.InitConnAsync(null);
        }
        
        /// <remarks/>
        public void InitConnAsync(object userState) {
            if ((this.InitConnOperationCompleted == null)) {
                this.InitConnOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitConnOperationCompleted);
            }
            this.InvokeAsync("InitConn", new object[0], this.InitConnOperationCompleted, userState);
        }
        
        private void OnInitConnOperationCompleted(object arg) {
            if ((this.InitConnCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitConnCompleted(this, new InitConnCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HIS.org/GetAllPatientNo", RequestNamespace="http://HIS.org/", ResponseNamespace="http://HIS.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetAllPatientNo(ref System.Data.DataSet ds, string card_no) {
            object[] results = this.Invoke("GetAllPatientNo", new object[] {
                        ds,
                        card_no});
            ds = ((System.Data.DataSet)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllPatientNoAsync(System.Data.DataSet ds, string card_no) {
            this.GetAllPatientNoAsync(ds, card_no, null);
        }
        
        /// <remarks/>
        public void GetAllPatientNoAsync(System.Data.DataSet ds, string card_no, object userState) {
            if ((this.GetAllPatientNoOperationCompleted == null)) {
                this.GetAllPatientNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllPatientNoOperationCompleted);
            }
            this.InvokeAsync("GetAllPatientNo", new object[] {
                        ds,
                        card_no}, this.GetAllPatientNoOperationCompleted, userState);
        }
        
        private void OnGetAllPatientNoOperationCompleted(object arg) {
            if ((this.GetAllPatientNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllPatientNoCompleted(this, new GetAllPatientNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HIS.org/GetAllPatientNoByPatientNo", RequestNamespace="http://HIS.org/", ResponseNamespace="http://HIS.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAllPatientNoByPatientNo(string card_no) {
            object[] results = this.Invoke("GetAllPatientNoByPatientNo", new object[] {
                        card_no});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllPatientNoByPatientNoAsync(string card_no) {
            this.GetAllPatientNoByPatientNoAsync(card_no, null);
        }
        
        /// <remarks/>
        public void GetAllPatientNoByPatientNoAsync(string card_no, object userState) {
            if ((this.GetAllPatientNoByPatientNoOperationCompleted == null)) {
                this.GetAllPatientNoByPatientNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllPatientNoByPatientNoOperationCompleted);
            }
            this.InvokeAsync("GetAllPatientNoByPatientNo", new object[] {
                        card_no}, this.GetAllPatientNoByPatientNoOperationCompleted, userState);
        }
        
        private void OnGetAllPatientNoByPatientNoOperationCompleted(object arg) {
            if ((this.GetAllPatientNoByPatientNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllPatientNoByPatientNoCompleted(this, new GetAllPatientNoByPatientNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HIS.org/GetConfirmInfoOfXCGByICCardNO", RequestNamespace="http://HIS.org/", ResponseNamespace="http://HIS.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetConfirmInfoOfXCGByICCardNO(string IC_Cardno) {
            object[] results = this.Invoke("GetConfirmInfoOfXCGByICCardNO", new object[] {
                        IC_Cardno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetConfirmInfoOfXCGByICCardNOAsync(string IC_Cardno) {
            this.GetConfirmInfoOfXCGByICCardNOAsync(IC_Cardno, null);
        }
        
        /// <remarks/>
        public void GetConfirmInfoOfXCGByICCardNOAsync(string IC_Cardno, object userState) {
            if ((this.GetConfirmInfoOfXCGByICCardNOOperationCompleted == null)) {
                this.GetConfirmInfoOfXCGByICCardNOOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetConfirmInfoOfXCGByICCardNOOperationCompleted);
            }
            this.InvokeAsync("GetConfirmInfoOfXCGByICCardNO", new object[] {
                        IC_Cardno}, this.GetConfirmInfoOfXCGByICCardNOOperationCompleted, userState);
        }
        
        private void OnGetConfirmInfoOfXCGByICCardNOOperationCompleted(object arg) {
            if ((this.GetConfirmInfoOfXCGByICCardNOCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetConfirmInfoOfXCGByICCardNOCompleted(this, new GetConfirmInfoOfXCGByICCardNOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HIS.org/GetConfirmInfoOfXCGByCardNO", RequestNamespace="http://HIS.org/", ResponseNamespace="http://HIS.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetConfirmInfoOfXCGByCardNO(string Cardno) {
            object[] results = this.Invoke("GetConfirmInfoOfXCGByCardNO", new object[] {
                        Cardno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetConfirmInfoOfXCGByCardNOAsync(string Cardno) {
            this.GetConfirmInfoOfXCGByCardNOAsync(Cardno, null);
        }
        
        /// <remarks/>
        public void GetConfirmInfoOfXCGByCardNOAsync(string Cardno, object userState) {
            if ((this.GetConfirmInfoOfXCGByCardNOOperationCompleted == null)) {
                this.GetConfirmInfoOfXCGByCardNOOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetConfirmInfoOfXCGByCardNOOperationCompleted);
            }
            this.InvokeAsync("GetConfirmInfoOfXCGByCardNO", new object[] {
                        Cardno}, this.GetConfirmInfoOfXCGByCardNOOperationCompleted, userState);
        }
        
        private void OnGetConfirmInfoOfXCGByCardNOOperationCompleted(object arg) {
            if ((this.GetConfirmInfoOfXCGByCardNOCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetConfirmInfoOfXCGByCardNOCompleted(this, new GetConfirmInfoOfXCGByCardNOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HIS.org/GetConfirmInfoOfXDTByCardNO", RequestNamespace="http://HIS.org/", ResponseNamespace="http://HIS.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetConfirmInfoOfXDTByCardNO(string Cardno) {
            object[] results = this.Invoke("GetConfirmInfoOfXDTByCardNO", new object[] {
                        Cardno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetConfirmInfoOfXDTByCardNOAsync(string Cardno) {
            this.GetConfirmInfoOfXDTByCardNOAsync(Cardno, null);
        }
        
        /// <remarks/>
        public void GetConfirmInfoOfXDTByCardNOAsync(string Cardno, object userState) {
            if ((this.GetConfirmInfoOfXDTByCardNOOperationCompleted == null)) {
                this.GetConfirmInfoOfXDTByCardNOOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetConfirmInfoOfXDTByCardNOOperationCompleted);
            }
            this.InvokeAsync("GetConfirmInfoOfXDTByCardNO", new object[] {
                        Cardno}, this.GetConfirmInfoOfXDTByCardNOOperationCompleted, userState);
        }
        
        private void OnGetConfirmInfoOfXDTByCardNOOperationCompleted(object arg) {
            if ((this.GetConfirmInfoOfXDTByCardNOCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetConfirmInfoOfXDTByCardNOCompleted(this, new GetConfirmInfoOfXDTByCardNOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HIS.org/GetConfirmInfoOfXDTByICCardNO", RequestNamespace="http://HIS.org/", ResponseNamespace="http://HIS.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetConfirmInfoOfXDTByICCardNO(string IC_Cardno) {
            object[] results = this.Invoke("GetConfirmInfoOfXDTByICCardNO", new object[] {
                        IC_Cardno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetConfirmInfoOfXDTByICCardNOAsync(string IC_Cardno) {
            this.GetConfirmInfoOfXDTByICCardNOAsync(IC_Cardno, null);
        }
        
        /// <remarks/>
        public void GetConfirmInfoOfXDTByICCardNOAsync(string IC_Cardno, object userState) {
            if ((this.GetConfirmInfoOfXDTByICCardNOOperationCompleted == null)) {
                this.GetConfirmInfoOfXDTByICCardNOOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetConfirmInfoOfXDTByICCardNOOperationCompleted);
            }
            this.InvokeAsync("GetConfirmInfoOfXDTByICCardNO", new object[] {
                        IC_Cardno}, this.GetConfirmInfoOfXDTByICCardNOOperationCompleted, userState);
        }
        
        private void OnGetConfirmInfoOfXDTByICCardNOOperationCompleted(object arg) {
            if ((this.GetConfirmInfoOfXDTByICCardNOCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetConfirmInfoOfXDTByICCardNOCompleted(this, new GetConfirmInfoOfXDTByICCardNOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HIS.org/GetPatientInfoByCardorIcCard", RequestNamespace="http://HIS.org/", ResponseNamespace="http://HIS.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPatientInfoByCardorIcCard(string strXml) {
            object[] results = this.Invoke("GetPatientInfoByCardorIcCard", new object[] {
                        strXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientInfoByCardorIcCardAsync(string strXml) {
            this.GetPatientInfoByCardorIcCardAsync(strXml, null);
        }
        
        /// <remarks/>
        public void GetPatientInfoByCardorIcCardAsync(string strXml, object userState) {
            if ((this.GetPatientInfoByCardorIcCardOperationCompleted == null)) {
                this.GetPatientInfoByCardorIcCardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientInfoByCardorIcCardOperationCompleted);
            }
            this.InvokeAsync("GetPatientInfoByCardorIcCard", new object[] {
                        strXml}, this.GetPatientInfoByCardorIcCardOperationCompleted, userState);
        }
        
        private void OnGetPatientInfoByCardorIcCardOperationCompleted(object arg) {
            if ((this.GetPatientInfoByCardorIcCardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientInfoByCardorIcCardCompleted(this, new GetPatientInfoByCardorIcCardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HIS.org/GetPatientBaseInfoByCardorIcCard", RequestNamespace="http://HIS.org/", ResponseNamespace="http://HIS.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPatientBaseInfoByCardorIcCard(string strXml) {
            object[] results = this.Invoke("GetPatientBaseInfoByCardorIcCard", new object[] {
                        strXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientBaseInfoByCardorIcCardAsync(string strXml) {
            this.GetPatientBaseInfoByCardorIcCardAsync(strXml, null);
        }
        
        /// <remarks/>
        public void GetPatientBaseInfoByCardorIcCardAsync(string strXml, object userState) {
            if ((this.GetPatientBaseInfoByCardorIcCardOperationCompleted == null)) {
                this.GetPatientBaseInfoByCardorIcCardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientBaseInfoByCardorIcCardOperationCompleted);
            }
            this.InvokeAsync("GetPatientBaseInfoByCardorIcCard", new object[] {
                        strXml}, this.GetPatientBaseInfoByCardorIcCardOperationCompleted, userState);
        }
        
        private void OnGetPatientBaseInfoByCardorIcCardOperationCompleted(object arg) {
            if ((this.GetPatientBaseInfoByCardorIcCardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientBaseInfoByCardorIcCardCompleted(this, new GetPatientBaseInfoByCardorIcCardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HIS.org/Test", RequestNamespace="http://HIS.org/", ResponseNamespace="http://HIS.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int Test(ref System.Data.DataSet ds) {
            object[] results = this.Invoke("Test", new object[] {
                        ds});
            ds = ((System.Data.DataSet)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void TestAsync(System.Data.DataSet ds) {
            this.TestAsync(ds, null);
        }
        
        /// <remarks/>
        public void TestAsync(System.Data.DataSet ds, object userState) {
            if ((this.TestOperationCompleted == null)) {
                this.TestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestOperationCompleted);
            }
            this.InvokeAsync("Test", new object[] {
                        ds}, this.TestOperationCompleted, userState);
        }
        
        private void OnTestOperationCompleted(object arg) {
            if ((this.TestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestCompleted(this, new TestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HIS.org/GetUndrugInfo", RequestNamespace="http://HIS.org/", ResponseNamespace="http://HIS.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetUndrugInfo(ref System.Data.DataSet ds) {
            object[] results = this.Invoke("GetUndrugInfo", new object[] {
                        ds});
            ds = ((System.Data.DataSet)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetUndrugInfoAsync(System.Data.DataSet ds) {
            this.GetUndrugInfoAsync(ds, null);
        }
        
        /// <remarks/>
        public void GetUndrugInfoAsync(System.Data.DataSet ds, object userState) {
            if ((this.GetUndrugInfoOperationCompleted == null)) {
                this.GetUndrugInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUndrugInfoOperationCompleted);
            }
            this.InvokeAsync("GetUndrugInfo", new object[] {
                        ds}, this.GetUndrugInfoOperationCompleted, userState);
        }
        
        private void OnGetUndrugInfoOperationCompleted(object arg) {
            if ((this.GetUndrugInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUndrugInfoCompleted(this, new GetUndrugInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HIS.org/GetDrugInfo", RequestNamespace="http://HIS.org/", ResponseNamespace="http://HIS.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetDrugInfo(ref System.Data.DataSet ds) {
            object[] results = this.Invoke("GetDrugInfo", new object[] {
                        ds});
            ds = ((System.Data.DataSet)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetDrugInfoAsync(System.Data.DataSet ds) {
            this.GetDrugInfoAsync(ds, null);
        }
        
        /// <remarks/>
        public void GetDrugInfoAsync(System.Data.DataSet ds, object userState) {
            if ((this.GetDrugInfoOperationCompleted == null)) {
                this.GetDrugInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDrugInfoOperationCompleted);
            }
            this.InvokeAsync("GetDrugInfo", new object[] {
                        ds}, this.GetDrugInfoOperationCompleted, userState);
        }
        
        private void OnGetDrugInfoOperationCompleted(object arg) {
            if ((this.GetDrugInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDrugInfoCompleted(this, new GetDrugInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HIS.org/GetYBYPMLByPactCode", RequestNamespace="http://HIS.org/", ResponseNamespace="http://HIS.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetYBYPMLByPactCode(string pact_code, ref System.Data.DataSet ds) {
            object[] results = this.Invoke("GetYBYPMLByPactCode", new object[] {
                        pact_code,
                        ds});
            ds = ((System.Data.DataSet)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetYBYPMLByPactCodeAsync(string pact_code, System.Data.DataSet ds) {
            this.GetYBYPMLByPactCodeAsync(pact_code, ds, null);
        }
        
        /// <remarks/>
        public void GetYBYPMLByPactCodeAsync(string pact_code, System.Data.DataSet ds, object userState) {
            if ((this.GetYBYPMLByPactCodeOperationCompleted == null)) {
                this.GetYBYPMLByPactCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetYBYPMLByPactCodeOperationCompleted);
            }
            this.InvokeAsync("GetYBYPMLByPactCode", new object[] {
                        pact_code,
                        ds}, this.GetYBYPMLByPactCodeOperationCompleted, userState);
        }
        
        private void OnGetYBYPMLByPactCodeOperationCompleted(object arg) {
            if ((this.GetYBYPMLByPactCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetYBYPMLByPactCodeCompleted(this, new GetYBYPMLByPactCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HIS.org/GetPatientNoByCardNo", RequestNamespace="http://HIS.org/", ResponseNamespace="http://HIS.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetPatientNoByCardNo(ref System.Data.DataSet patient_no, string cardno) {
            object[] results = this.Invoke("GetPatientNoByCardNo", new object[] {
                        patient_no,
                        cardno});
            patient_no = ((System.Data.DataSet)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientNoByCardNoAsync(System.Data.DataSet patient_no, string cardno) {
            this.GetPatientNoByCardNoAsync(patient_no, cardno, null);
        }
        
        /// <remarks/>
        public void GetPatientNoByCardNoAsync(System.Data.DataSet patient_no, string cardno, object userState) {
            if ((this.GetPatientNoByCardNoOperationCompleted == null)) {
                this.GetPatientNoByCardNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientNoByCardNoOperationCompleted);
            }
            this.InvokeAsync("GetPatientNoByCardNo", new object[] {
                        patient_no,
                        cardno}, this.GetPatientNoByCardNoOperationCompleted, userState);
        }
        
        private void OnGetPatientNoByCardNoOperationCompleted(object arg) {
            if ((this.GetPatientNoByCardNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientNoByCardNoCompleted(this, new GetPatientNoByCardNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HIS.org/GetOperationInfoByDate", RequestNamespace="http://HIS.org/", ResponseNamespace="http://HIS.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetOperationInfoByDate(ref System.Data.DataSet operationInfo, string date) {
            object[] results = this.Invoke("GetOperationInfoByDate", new object[] {
                        operationInfo,
                        date});
            operationInfo = ((System.Data.DataSet)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetOperationInfoByDateAsync(System.Data.DataSet operationInfo, string date) {
            this.GetOperationInfoByDateAsync(operationInfo, date, null);
        }
        
        /// <remarks/>
        public void GetOperationInfoByDateAsync(System.Data.DataSet operationInfo, string date, object userState) {
            if ((this.GetOperationInfoByDateOperationCompleted == null)) {
                this.GetOperationInfoByDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOperationInfoByDateOperationCompleted);
            }
            this.InvokeAsync("GetOperationInfoByDate", new object[] {
                        operationInfo,
                        date}, this.GetOperationInfoByDateOperationCompleted, userState);
        }
        
        private void OnGetOperationInfoByDateOperationCompleted(object arg) {
            if ((this.GetOperationInfoByDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOperationInfoByDateCompleted(this, new GetOperationInfoByDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HIS.org/QueryAllRegisterInfoBySeedate", RequestNamespace="http://HIS.org/", ResponseNamespace="http://HIS.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int QueryAllRegisterInfoBySeedate(ref System.Data.DataSet deptschema, System.DateTime seedate) {
            object[] results = this.Invoke("QueryAllRegisterInfoBySeedate", new object[] {
                        deptschema,
                        seedate});
            deptschema = ((System.Data.DataSet)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void QueryAllRegisterInfoBySeedateAsync(System.Data.DataSet deptschema, System.DateTime seedate) {
            this.QueryAllRegisterInfoBySeedateAsync(deptschema, seedate, null);
        }
        
        /// <remarks/>
        public void QueryAllRegisterInfoBySeedateAsync(System.Data.DataSet deptschema, System.DateTime seedate, object userState) {
            if ((this.QueryAllRegisterInfoBySeedateOperationCompleted == null)) {
                this.QueryAllRegisterInfoBySeedateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryAllRegisterInfoBySeedateOperationCompleted);
            }
            this.InvokeAsync("QueryAllRegisterInfoBySeedate", new object[] {
                        deptschema,
                        seedate}, this.QueryAllRegisterInfoBySeedateOperationCompleted, userState);
        }
        
        private void OnQueryAllRegisterInfoBySeedateOperationCompleted(object arg) {
            if ((this.QueryAllRegisterInfoBySeedateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryAllRegisterInfoBySeedateCompleted(this, new QueryAllRegisterInfoBySeedateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HIS.org/QueryInhosInfoByICCard", RequestNamespace="http://HIS.org/", ResponseNamespace="http://HIS.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int QueryInhosInfoByICCard(ref System.Data.DataSet inhos_info, string ic_cardno) {
            object[] results = this.Invoke("QueryInhosInfoByICCard", new object[] {
                        inhos_info,
                        ic_cardno});
            inhos_info = ((System.Data.DataSet)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void QueryInhosInfoByICCardAsync(System.Data.DataSet inhos_info, string ic_cardno) {
            this.QueryInhosInfoByICCardAsync(inhos_info, ic_cardno, null);
        }
        
        /// <remarks/>
        public void QueryInhosInfoByICCardAsync(System.Data.DataSet inhos_info, string ic_cardno, object userState) {
            if ((this.QueryInhosInfoByICCardOperationCompleted == null)) {
                this.QueryInhosInfoByICCardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryInhosInfoByICCardOperationCompleted);
            }
            this.InvokeAsync("QueryInhosInfoByICCard", new object[] {
                        inhos_info,
                        ic_cardno}, this.QueryInhosInfoByICCardOperationCompleted, userState);
        }
        
        private void OnQueryInhosInfoByICCardOperationCompleted(object arg) {
            if ((this.QueryInhosInfoByICCardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryInhosInfoByICCardCompleted(this, new QueryInhosInfoByICCardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HIS.org/QueryInhosDrugFeeInfoByCardNo", RequestNamespace="http://HIS.org/", ResponseNamespace="http://HIS.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int QueryInhosDrugFeeInfoByCardNo(ref System.Data.DataSet inhos_feeinfo, string card_no, string in_times) {
            object[] results = this.Invoke("QueryInhosDrugFeeInfoByCardNo", new object[] {
                        inhos_feeinfo,
                        card_no,
                        in_times});
            inhos_feeinfo = ((System.Data.DataSet)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void QueryInhosDrugFeeInfoByCardNoAsync(System.Data.DataSet inhos_feeinfo, string card_no, string in_times) {
            this.QueryInhosDrugFeeInfoByCardNoAsync(inhos_feeinfo, card_no, in_times, null);
        }
        
        /// <remarks/>
        public void QueryInhosDrugFeeInfoByCardNoAsync(System.Data.DataSet inhos_feeinfo, string card_no, string in_times, object userState) {
            if ((this.QueryInhosDrugFeeInfoByCardNoOperationCompleted == null)) {
                this.QueryInhosDrugFeeInfoByCardNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryInhosDrugFeeInfoByCardNoOperationCompleted);
            }
            this.InvokeAsync("QueryInhosDrugFeeInfoByCardNo", new object[] {
                        inhos_feeinfo,
                        card_no,
                        in_times}, this.QueryInhosDrugFeeInfoByCardNoOperationCompleted, userState);
        }
        
        private void OnQueryInhosDrugFeeInfoByCardNoOperationCompleted(object arg) {
            if ((this.QueryInhosDrugFeeInfoByCardNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryInhosDrugFeeInfoByCardNoCompleted(this, new QueryInhosDrugFeeInfoByCardNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HIS.org/QueryInhosUnDrugFeeInfoByCardNo", RequestNamespace="http://HIS.org/", ResponseNamespace="http://HIS.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int QueryInhosUnDrugFeeInfoByCardNo(ref System.Data.DataSet inhos_feeinfo, string card_no, string in_times) {
            object[] results = this.Invoke("QueryInhosUnDrugFeeInfoByCardNo", new object[] {
                        inhos_feeinfo,
                        card_no,
                        in_times});
            inhos_feeinfo = ((System.Data.DataSet)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void QueryInhosUnDrugFeeInfoByCardNoAsync(System.Data.DataSet inhos_feeinfo, string card_no, string in_times) {
            this.QueryInhosUnDrugFeeInfoByCardNoAsync(inhos_feeinfo, card_no, in_times, null);
        }
        
        /// <remarks/>
        public void QueryInhosUnDrugFeeInfoByCardNoAsync(System.Data.DataSet inhos_feeinfo, string card_no, string in_times, object userState) {
            if ((this.QueryInhosUnDrugFeeInfoByCardNoOperationCompleted == null)) {
                this.QueryInhosUnDrugFeeInfoByCardNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryInhosUnDrugFeeInfoByCardNoOperationCompleted);
            }
            this.InvokeAsync("QueryInhosUnDrugFeeInfoByCardNo", new object[] {
                        inhos_feeinfo,
                        card_no,
                        in_times}, this.QueryInhosUnDrugFeeInfoByCardNoOperationCompleted, userState);
        }
        
        private void OnQueryInhosUnDrugFeeInfoByCardNoOperationCompleted(object arg) {
            if ((this.QueryInhosUnDrugFeeInfoByCardNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryInhosUnDrugFeeInfoByCardNoCompleted(this, new QueryInhosUnDrugFeeInfoByCardNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HIS.org/QueryOutPatientFeeDetailByICCard", RequestNamespace="http://HIS.org/", ResponseNamespace="http://HIS.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int QueryOutPatientFeeDetailByICCard(ref System.Data.DataSet out_feeinfo, string ic_cardno, string date) {
            object[] results = this.Invoke("QueryOutPatientFeeDetailByICCard", new object[] {
                        out_feeinfo,
                        ic_cardno,
                        date});
            out_feeinfo = ((System.Data.DataSet)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void QueryOutPatientFeeDetailByICCardAsync(System.Data.DataSet out_feeinfo, string ic_cardno, string date) {
            this.QueryOutPatientFeeDetailByICCardAsync(out_feeinfo, ic_cardno, date, null);
        }
        
        /// <remarks/>
        public void QueryOutPatientFeeDetailByICCardAsync(System.Data.DataSet out_feeinfo, string ic_cardno, string date, object userState) {
            if ((this.QueryOutPatientFeeDetailByICCardOperationCompleted == null)) {
                this.QueryOutPatientFeeDetailByICCardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryOutPatientFeeDetailByICCardOperationCompleted);
            }
            this.InvokeAsync("QueryOutPatientFeeDetailByICCard", new object[] {
                        out_feeinfo,
                        ic_cardno,
                        date}, this.QueryOutPatientFeeDetailByICCardOperationCompleted, userState);
        }
        
        private void OnQueryOutPatientFeeDetailByICCardOperationCompleted(object arg) {
            if ((this.QueryOutPatientFeeDetailByICCardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryOutPatientFeeDetailByICCardCompleted(this, new QueryOutPatientFeeDetailByICCardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HIS.org/QueryRegInfoByICCard", RequestNamespace="http://HIS.org/", ResponseNamespace="http://HIS.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int QueryRegInfoByICCard(ref System.Data.DataSet reg_info, string ic_cardno, string date) {
            object[] results = this.Invoke("QueryRegInfoByICCard", new object[] {
                        reg_info,
                        ic_cardno,
                        date});
            reg_info = ((System.Data.DataSet)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void QueryRegInfoByICCardAsync(System.Data.DataSet reg_info, string ic_cardno, string date) {
            this.QueryRegInfoByICCardAsync(reg_info, ic_cardno, date, null);
        }
        
        /// <remarks/>
        public void QueryRegInfoByICCardAsync(System.Data.DataSet reg_info, string ic_cardno, string date, object userState) {
            if ((this.QueryRegInfoByICCardOperationCompleted == null)) {
                this.QueryRegInfoByICCardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryRegInfoByICCardOperationCompleted);
            }
            this.InvokeAsync("QueryRegInfoByICCard", new object[] {
                        reg_info,
                        ic_cardno,
                        date}, this.QueryRegInfoByICCardOperationCompleted, userState);
        }
        
        private void OnQueryRegInfoByICCardOperationCompleted(object arg) {
            if ((this.QueryRegInfoByICCardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryRegInfoByICCardCompleted(this, new QueryRegInfoByICCardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HIS.org/QueryChkInfoByICCard", RequestNamespace="http://HIS.org/", ResponseNamespace="http://HIS.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int QueryChkInfoByICCard(ref System.Data.DataSet chk_info, string ic_cardno, string date) {
            object[] results = this.Invoke("QueryChkInfoByICCard", new object[] {
                        chk_info,
                        ic_cardno,
                        date});
            chk_info = ((System.Data.DataSet)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void QueryChkInfoByICCardAsync(System.Data.DataSet chk_info, string ic_cardno, string date) {
            this.QueryChkInfoByICCardAsync(chk_info, ic_cardno, date, null);
        }
        
        /// <remarks/>
        public void QueryChkInfoByICCardAsync(System.Data.DataSet chk_info, string ic_cardno, string date, object userState) {
            if ((this.QueryChkInfoByICCardOperationCompleted == null)) {
                this.QueryChkInfoByICCardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryChkInfoByICCardOperationCompleted);
            }
            this.InvokeAsync("QueryChkInfoByICCard", new object[] {
                        chk_info,
                        ic_cardno,
                        date}, this.QueryChkInfoByICCardOperationCompleted, userState);
        }
        
        private void OnQueryChkInfoByICCardOperationCompleted(object arg) {
            if ((this.QueryChkInfoByICCardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryChkInfoByICCardCompleted(this, new QueryChkInfoByICCardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HIS.org/QueryRegInfobyDate", RequestNamespace="http://HIS.org/", ResponseNamespace="http://HIS.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int QueryRegInfobyDate(ref System.Data.DataSet reg_info, System.DateTime date) {
            object[] results = this.Invoke("QueryRegInfobyDate", new object[] {
                        reg_info,
                        date});
            reg_info = ((System.Data.DataSet)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void QueryRegInfobyDateAsync(System.Data.DataSet reg_info, System.DateTime date) {
            this.QueryRegInfobyDateAsync(reg_info, date, null);
        }
        
        /// <remarks/>
        public void QueryRegInfobyDateAsync(System.Data.DataSet reg_info, System.DateTime date, object userState) {
            if ((this.QueryRegInfobyDateOperationCompleted == null)) {
                this.QueryRegInfobyDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryRegInfobyDateOperationCompleted);
            }
            this.InvokeAsync("QueryRegInfobyDate", new object[] {
                        reg_info,
                        date}, this.QueryRegInfobyDateOperationCompleted, userState);
        }
        
        private void OnQueryRegInfobyDateOperationCompleted(object arg) {
            if ((this.QueryRegInfobyDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryRegInfobyDateCompleted(this, new QueryRegInfobyDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HIS.org/QueryBySeedate", RequestNamespace="http://HIS.org/", ResponseNamespace="http://HIS.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int QueryBySeedate(ref System.Data.DataSet deptschema, System.DateTime seedate) {
            object[] results = this.Invoke("QueryBySeedate", new object[] {
                        deptschema,
                        seedate});
            deptschema = ((System.Data.DataSet)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void QueryBySeedateAsync(System.Data.DataSet deptschema, System.DateTime seedate) {
            this.QueryBySeedateAsync(deptschema, seedate, null);
        }
        
        /// <remarks/>
        public void QueryBySeedateAsync(System.Data.DataSet deptschema, System.DateTime seedate, object userState) {
            if ((this.QueryBySeedateOperationCompleted == null)) {
                this.QueryBySeedateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryBySeedateOperationCompleted);
            }
            this.InvokeAsync("QueryBySeedate", new object[] {
                        deptschema,
                        seedate}, this.QueryBySeedateOperationCompleted, userState);
        }
        
        private void OnQueryBySeedateOperationCompleted(object arg) {
            if ((this.QueryBySeedateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryBySeedateCompleted(this, new QueryBySeedateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HIS.org/QueryDoctBySeedate", RequestNamespace="http://HIS.org/", ResponseNamespace="http://HIS.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int QueryDoctBySeedate(ref System.Data.DataSet doctschema, string seedate, string deptcode, string regcode) {
            object[] results = this.Invoke("QueryDoctBySeedate", new object[] {
                        doctschema,
                        seedate,
                        deptcode,
                        regcode});
            doctschema = ((System.Data.DataSet)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void QueryDoctBySeedateAsync(System.Data.DataSet doctschema, string seedate, string deptcode, string regcode) {
            this.QueryDoctBySeedateAsync(doctschema, seedate, deptcode, regcode, null);
        }
        
        /// <remarks/>
        public void QueryDoctBySeedateAsync(System.Data.DataSet doctschema, string seedate, string deptcode, string regcode, object userState) {
            if ((this.QueryDoctBySeedateOperationCompleted == null)) {
                this.QueryDoctBySeedateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryDoctBySeedateOperationCompleted);
            }
            this.InvokeAsync("QueryDoctBySeedate", new object[] {
                        doctschema,
                        seedate,
                        deptcode,
                        regcode}, this.QueryDoctBySeedateOperationCompleted, userState);
        }
        
        private void OnQueryDoctBySeedateOperationCompleted(object arg) {
            if ((this.QueryDoctBySeedateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryDoctBySeedateCompleted(this, new QueryDoctBySeedateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HIS.org/UpdateAutregde", RequestNamespace="http://HIS.org/", ResponseNamespace="http://HIS.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateAutregde(string id) {
            object[] results = this.Invoke("UpdateAutregde", new object[] {
                        id});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateAutregdeAsync(string id) {
            this.UpdateAutregdeAsync(id, null);
        }
        
        /// <remarks/>
        public void UpdateAutregdeAsync(string id, object userState) {
            if ((this.UpdateAutregdeOperationCompleted == null)) {
                this.UpdateAutregdeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateAutregdeOperationCompleted);
            }
            this.InvokeAsync("UpdateAutregde", new object[] {
                        id}, this.UpdateAutregdeOperationCompleted, userState);
        }
        
        private void OnUpdateAutregdeOperationCompleted(object arg) {
            if ((this.UpdateAutregdeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateAutregdeCompleted(this, new UpdateAutregdeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HIS.org/QueryRegLev", RequestNamespace="http://HIS.org/", ResponseNamespace="http://HIS.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int QueryRegLev(ref System.Data.DataSet regfee, string reglev) {
            object[] results = this.Invoke("QueryRegLev", new object[] {
                        regfee,
                        reglev});
            regfee = ((System.Data.DataSet)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void QueryRegLevAsync(System.Data.DataSet regfee, string reglev) {
            this.QueryRegLevAsync(regfee, reglev, null);
        }
        
        /// <remarks/>
        public void QueryRegLevAsync(System.Data.DataSet regfee, string reglev, object userState) {
            if ((this.QueryRegLevOperationCompleted == null)) {
                this.QueryRegLevOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryRegLevOperationCompleted);
            }
            this.InvokeAsync("QueryRegLev", new object[] {
                        regfee,
                        reglev}, this.QueryRegLevOperationCompleted, userState);
        }
        
        private void OnQueryRegLevOperationCompleted(object arg) {
            if ((this.QueryRegLevCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryRegLevCompleted(this, new QueryRegLevCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HIS.org/QueryPatientInfobyCardNo", RequestNamespace="http://HIS.org/", ResponseNamespace="http://HIS.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int QueryPatientInfobyCardNo(ref System.Data.DataSet patientinfo, string cardno) {
            object[] results = this.Invoke("QueryPatientInfobyCardNo", new object[] {
                        patientinfo,
                        cardno});
            patientinfo = ((System.Data.DataSet)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void QueryPatientInfobyCardNoAsync(System.Data.DataSet patientinfo, string cardno) {
            this.QueryPatientInfobyCardNoAsync(patientinfo, cardno, null);
        }
        
        /// <remarks/>
        public void QueryPatientInfobyCardNoAsync(System.Data.DataSet patientinfo, string cardno, object userState) {
            if ((this.QueryPatientInfobyCardNoOperationCompleted == null)) {
                this.QueryPatientInfobyCardNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryPatientInfobyCardNoOperationCompleted);
            }
            this.InvokeAsync("QueryPatientInfobyCardNo", new object[] {
                        patientinfo,
                        cardno}, this.QueryPatientInfobyCardNoOperationCompleted, userState);
        }
        
        private void OnQueryPatientInfobyCardNoOperationCompleted(object arg) {
            if ((this.QueryPatientInfobyCardNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryPatientInfobyCardNoCompleted(this, new QueryPatientInfobyCardNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HIS.org/SaveAutoPatient", RequestNamespace="http://HIS.org/", ResponseNamespace="http://HIS.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveAutoPatient(ref string clinicseeno, string cardno, string schemaid, string clinic, string autcost, string oldcost) {
            object[] results = this.Invoke("SaveAutoPatient", new object[] {
                        clinicseeno,
                        cardno,
                        schemaid,
                        clinic,
                        autcost,
                        oldcost});
            clinicseeno = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveAutoPatientAsync(string clinicseeno, string cardno, string schemaid, string clinic, string autcost, string oldcost) {
            this.SaveAutoPatientAsync(clinicseeno, cardno, schemaid, clinic, autcost, oldcost, null);
        }
        
        /// <remarks/>
        public void SaveAutoPatientAsync(string clinicseeno, string cardno, string schemaid, string clinic, string autcost, string oldcost, object userState) {
            if ((this.SaveAutoPatientOperationCompleted == null)) {
                this.SaveAutoPatientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveAutoPatientOperationCompleted);
            }
            this.InvokeAsync("SaveAutoPatient", new object[] {
                        clinicseeno,
                        cardno,
                        schemaid,
                        clinic,
                        autcost,
                        oldcost}, this.SaveAutoPatientOperationCompleted, userState);
        }
        
        private void OnSaveAutoPatientOperationCompleted(object arg) {
            if ((this.SaveAutoPatientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveAutoPatientCompleted(this, new SaveAutoPatientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HIS.org/GetPatientInfoByIccard", RequestNamespace="http://HIS.org/", ResponseNamespace="http://HIS.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPatientInfoByIccard(string ic_cardno) {
            object[] results = this.Invoke("GetPatientInfoByIccard", new object[] {
                        ic_cardno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientInfoByIccardAsync(string ic_cardno) {
            this.GetPatientInfoByIccardAsync(ic_cardno, null);
        }
        
        /// <remarks/>
        public void GetPatientInfoByIccardAsync(string ic_cardno, object userState) {
            if ((this.GetPatientInfoByIccardOperationCompleted == null)) {
                this.GetPatientInfoByIccardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientInfoByIccardOperationCompleted);
            }
            this.InvokeAsync("GetPatientInfoByIccard", new object[] {
                        ic_cardno}, this.GetPatientInfoByIccardOperationCompleted, userState);
        }
        
        private void OnGetPatientInfoByIccardOperationCompleted(object arg) {
            if ((this.GetPatientInfoByIccardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientInfoByIccardCompleted(this, new GetPatientInfoByIccardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HIS.org/GetPatientInfoBycardNo", RequestNamespace="http://HIS.org/", ResponseNamespace="http://HIS.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPatientInfoBycardNo(string card_no) {
            object[] results = this.Invoke("GetPatientInfoBycardNo", new object[] {
                        card_no});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientInfoBycardNoAsync(string card_no) {
            this.GetPatientInfoBycardNoAsync(card_no, null);
        }
        
        /// <remarks/>
        public void GetPatientInfoBycardNoAsync(string card_no, object userState) {
            if ((this.GetPatientInfoBycardNoOperationCompleted == null)) {
                this.GetPatientInfoBycardNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientInfoBycardNoOperationCompleted);
            }
            this.InvokeAsync("GetPatientInfoBycardNo", new object[] {
                        card_no}, this.GetPatientInfoBycardNoOperationCompleted, userState);
        }
        
        private void OnGetPatientInfoBycardNoOperationCompleted(object arg) {
            if ((this.GetPatientInfoBycardNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientInfoBycardNoCompleted(this, new GetPatientInfoBycardNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HIS.org/UserLogin", RequestNamespace="http://HIS.org/", ResponseNamespace="http://HIS.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UserLogin(string userID, string pwd) {
            object[] results = this.Invoke("UserLogin", new object[] {
                        userID,
                        pwd});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UserLoginAsync(string userID, string pwd) {
            this.UserLoginAsync(userID, pwd, null);
        }
        
        /// <remarks/>
        public void UserLoginAsync(string userID, string pwd, object userState) {
            if ((this.UserLoginOperationCompleted == null)) {
                this.UserLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserLoginOperationCompleted);
            }
            this.InvokeAsync("UserLogin", new object[] {
                        userID,
                        pwd}, this.UserLoginOperationCompleted, userState);
        }
        
        private void OnUserLoginOperationCompleted(object arg) {
            if ((this.UserLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserLoginCompleted(this, new UserLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HIS.org/Decrypt", RequestNamespace="http://HIS.org/", ResponseNamespace="http://HIS.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Decrypt(string pwd) {
            object[] results = this.Invoke("Decrypt", new object[] {
                        pwd});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DecryptAsync(string pwd) {
            this.DecryptAsync(pwd, null);
        }
        
        /// <remarks/>
        public void DecryptAsync(string pwd, object userState) {
            if ((this.DecryptOperationCompleted == null)) {
                this.DecryptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDecryptOperationCompleted);
            }
            this.InvokeAsync("Decrypt", new object[] {
                        pwd}, this.DecryptOperationCompleted, userState);
        }
        
        private void OnDecryptOperationCompleted(object arg) {
            if ((this.DecryptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DecryptCompleted(this, new DecryptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HIS.org/InsertCasPhotoCardNo", RequestNamespace="http://HIS.org/", ResponseNamespace="http://HIS.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertCasPhotoCardNo(string CARD_NO, string NAME, string STAS, string PHOTO_DATE, string PACKAGE_DATE, string LAST_OUT_DATE) {
            object[] results = this.Invoke("InsertCasPhotoCardNo", new object[] {
                        CARD_NO,
                        NAME,
                        STAS,
                        PHOTO_DATE,
                        PACKAGE_DATE,
                        LAST_OUT_DATE});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertCasPhotoCardNoAsync(string CARD_NO, string NAME, string STAS, string PHOTO_DATE, string PACKAGE_DATE, string LAST_OUT_DATE) {
            this.InsertCasPhotoCardNoAsync(CARD_NO, NAME, STAS, PHOTO_DATE, PACKAGE_DATE, LAST_OUT_DATE, null);
        }
        
        /// <remarks/>
        public void InsertCasPhotoCardNoAsync(string CARD_NO, string NAME, string STAS, string PHOTO_DATE, string PACKAGE_DATE, string LAST_OUT_DATE, object userState) {
            if ((this.InsertCasPhotoCardNoOperationCompleted == null)) {
                this.InsertCasPhotoCardNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertCasPhotoCardNoOperationCompleted);
            }
            this.InvokeAsync("InsertCasPhotoCardNo", new object[] {
                        CARD_NO,
                        NAME,
                        STAS,
                        PHOTO_DATE,
                        PACKAGE_DATE,
                        LAST_OUT_DATE}, this.InsertCasPhotoCardNoOperationCompleted, userState);
        }
        
        private void OnInsertCasPhotoCardNoOperationCompleted(object arg) {
            if ((this.InsertCasPhotoCardNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertCasPhotoCardNoCompleted(this, new InsertCasPhotoCardNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HIS.org/UpdateCasPhotoCardNo", RequestNamespace="http://HIS.org/", ResponseNamespace="http://HIS.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateCasPhotoCardNo(string CARD_NO, string PHOTO_DATE) {
            object[] results = this.Invoke("UpdateCasPhotoCardNo", new object[] {
                        CARD_NO,
                        PHOTO_DATE});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateCasPhotoCardNoAsync(string CARD_NO, string PHOTO_DATE) {
            this.UpdateCasPhotoCardNoAsync(CARD_NO, PHOTO_DATE, null);
        }
        
        /// <remarks/>
        public void UpdateCasPhotoCardNoAsync(string CARD_NO, string PHOTO_DATE, object userState) {
            if ((this.UpdateCasPhotoCardNoOperationCompleted == null)) {
                this.UpdateCasPhotoCardNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCasPhotoCardNoOperationCompleted);
            }
            this.InvokeAsync("UpdateCasPhotoCardNo", new object[] {
                        CARD_NO,
                        PHOTO_DATE}, this.UpdateCasPhotoCardNoOperationCompleted, userState);
        }
        
        private void OnUpdateCasPhotoCardNoOperationCompleted(object arg) {
            if ((this.UpdateCasPhotoCardNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCasPhotoCardNoCompleted(this, new UpdateCasPhotoCardNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HIS.org/UpdateLastPhotoOutDate", RequestNamespace="http://HIS.org/", ResponseNamespace="http://HIS.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateLastPhotoOutDate(string CARD_NO, string LASTPHOTO_OUT_DATE) {
            object[] results = this.Invoke("UpdateLastPhotoOutDate", new object[] {
                        CARD_NO,
                        LASTPHOTO_OUT_DATE});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateLastPhotoOutDateAsync(string CARD_NO, string LASTPHOTO_OUT_DATE) {
            this.UpdateLastPhotoOutDateAsync(CARD_NO, LASTPHOTO_OUT_DATE, null);
        }
        
        /// <remarks/>
        public void UpdateLastPhotoOutDateAsync(string CARD_NO, string LASTPHOTO_OUT_DATE, object userState) {
            if ((this.UpdateLastPhotoOutDateOperationCompleted == null)) {
                this.UpdateLastPhotoOutDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateLastPhotoOutDateOperationCompleted);
            }
            this.InvokeAsync("UpdateLastPhotoOutDate", new object[] {
                        CARD_NO,
                        LASTPHOTO_OUT_DATE}, this.UpdateLastPhotoOutDateOperationCompleted, userState);
        }
        
        private void OnUpdateLastPhotoOutDateOperationCompleted(object arg) {
            if ((this.UpdateLastPhotoOutDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateLastPhotoOutDateCompleted(this, new UpdateLastPhotoOutDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HIS.org/QueryCardNoBySecondCode", RequestNamespace="http://HIS.org/", ResponseNamespace="http://HIS.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int QueryCardNoBySecondCode(ref System.Data.DataSet CardNoList, string cardno) {
            object[] results = this.Invoke("QueryCardNoBySecondCode", new object[] {
                        CardNoList,
                        cardno});
            CardNoList = ((System.Data.DataSet)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void QueryCardNoBySecondCodeAsync(System.Data.DataSet CardNoList, string cardno) {
            this.QueryCardNoBySecondCodeAsync(CardNoList, cardno, null);
        }
        
        /// <remarks/>
        public void QueryCardNoBySecondCodeAsync(System.Data.DataSet CardNoList, string cardno, object userState) {
            if ((this.QueryCardNoBySecondCodeOperationCompleted == null)) {
                this.QueryCardNoBySecondCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryCardNoBySecondCodeOperationCompleted);
            }
            this.InvokeAsync("QueryCardNoBySecondCode", new object[] {
                        CardNoList,
                        cardno}, this.QueryCardNoBySecondCodeOperationCompleted, userState);
        }
        
        private void OnQueryCardNoBySecondCodeOperationCompleted(object arg) {
            if ((this.QueryCardNoBySecondCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryCardNoBySecondCodeCompleted(this, new QueryCardNoBySecondCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HIS.org/QueryDiagnoseByInpatientNo", RequestNamespace="http://HIS.org/", ResponseNamespace="http://HIS.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int QueryDiagnoseByInpatientNo(ref System.Data.DataSet DiagnoseList, string inpatientno) {
            object[] results = this.Invoke("QueryDiagnoseByInpatientNo", new object[] {
                        DiagnoseList,
                        inpatientno});
            DiagnoseList = ((System.Data.DataSet)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void QueryDiagnoseByInpatientNoAsync(System.Data.DataSet DiagnoseList, string inpatientno) {
            this.QueryDiagnoseByInpatientNoAsync(DiagnoseList, inpatientno, null);
        }
        
        /// <remarks/>
        public void QueryDiagnoseByInpatientNoAsync(System.Data.DataSet DiagnoseList, string inpatientno, object userState) {
            if ((this.QueryDiagnoseByInpatientNoOperationCompleted == null)) {
                this.QueryDiagnoseByInpatientNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryDiagnoseByInpatientNoOperationCompleted);
            }
            this.InvokeAsync("QueryDiagnoseByInpatientNo", new object[] {
                        DiagnoseList,
                        inpatientno}, this.QueryDiagnoseByInpatientNoOperationCompleted, userState);
        }
        
        private void OnQueryDiagnoseByInpatientNoOperationCompleted(object arg) {
            if ((this.QueryDiagnoseByInpatientNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryDiagnoseByInpatientNoCompleted(this, new QueryDiagnoseByInpatientNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HIS.org/QueryPhotoCardNo", RequestNamespace="http://HIS.org/", ResponseNamespace="http://HIS.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] QueryPhotoCardNo(string CARD_NO) {
            object[] results = this.Invoke("QueryPhotoCardNo", new object[] {
                        CARD_NO});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void QueryPhotoCardNoAsync(string CARD_NO) {
            this.QueryPhotoCardNoAsync(CARD_NO, null);
        }
        
        /// <remarks/>
        public void QueryPhotoCardNoAsync(string CARD_NO, object userState) {
            if ((this.QueryPhotoCardNoOperationCompleted == null)) {
                this.QueryPhotoCardNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryPhotoCardNoOperationCompleted);
            }
            this.InvokeAsync("QueryPhotoCardNo", new object[] {
                        CARD_NO}, this.QueryPhotoCardNoOperationCompleted, userState);
        }
        
        private void OnQueryPhotoCardNoOperationCompleted(object arg) {
            if ((this.QueryPhotoCardNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryPhotoCardNoCompleted(this, new QueryPhotoCardNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HIS.org/GetMZPatientInfoForGYS", RequestNamespace="http://HIS.org/", ResponseNamespace="http://HIS.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetMZPatientInfoForGYS(ref System.Data.DataSet patientinfo, string cardno) {
            object[] results = this.Invoke("GetMZPatientInfoForGYS", new object[] {
                        patientinfo,
                        cardno});
            patientinfo = ((System.Data.DataSet)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetMZPatientInfoForGYSAsync(System.Data.DataSet patientinfo, string cardno) {
            this.GetMZPatientInfoForGYSAsync(patientinfo, cardno, null);
        }
        
        /// <remarks/>
        public void GetMZPatientInfoForGYSAsync(System.Data.DataSet patientinfo, string cardno, object userState) {
            if ((this.GetMZPatientInfoForGYSOperationCompleted == null)) {
                this.GetMZPatientInfoForGYSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMZPatientInfoForGYSOperationCompleted);
            }
            this.InvokeAsync("GetMZPatientInfoForGYS", new object[] {
                        patientinfo,
                        cardno}, this.GetMZPatientInfoForGYSOperationCompleted, userState);
        }
        
        private void OnGetMZPatientInfoForGYSOperationCompleted(object arg) {
            if ((this.GetMZPatientInfoForGYSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMZPatientInfoForGYSCompleted(this, new GetMZPatientInfoForGYSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HIS.org/GetZYPatientInfoForGYS", RequestNamespace="http://HIS.org/", ResponseNamespace="http://HIS.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetZYPatientInfoForGYS(ref System.Data.DataSet patientinfo, string cardno) {
            object[] results = this.Invoke("GetZYPatientInfoForGYS", new object[] {
                        patientinfo,
                        cardno});
            patientinfo = ((System.Data.DataSet)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetZYPatientInfoForGYSAsync(System.Data.DataSet patientinfo, string cardno) {
            this.GetZYPatientInfoForGYSAsync(patientinfo, cardno, null);
        }
        
        /// <remarks/>
        public void GetZYPatientInfoForGYSAsync(System.Data.DataSet patientinfo, string cardno, object userState) {
            if ((this.GetZYPatientInfoForGYSOperationCompleted == null)) {
                this.GetZYPatientInfoForGYSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetZYPatientInfoForGYSOperationCompleted);
            }
            this.InvokeAsync("GetZYPatientInfoForGYS", new object[] {
                        patientinfo,
                        cardno}, this.GetZYPatientInfoForGYSOperationCompleted, userState);
        }
        
        private void OnGetZYPatientInfoForGYSOperationCompleted(object arg) {
            if ((this.GetZYPatientInfoForGYSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetZYPatientInfoForGYSCompleted(this, new GetZYPatientInfoForGYSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HIS.org/GetDeptInfoForGYS", RequestNamespace="http://HIS.org/", ResponseNamespace="http://HIS.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetDeptInfoForGYS(ref System.Data.DataSet deptinfo) {
            object[] results = this.Invoke("GetDeptInfoForGYS", new object[] {
                        deptinfo});
            deptinfo = ((System.Data.DataSet)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetDeptInfoForGYSAsync(System.Data.DataSet deptinfo) {
            this.GetDeptInfoForGYSAsync(deptinfo, null);
        }
        
        /// <remarks/>
        public void GetDeptInfoForGYSAsync(System.Data.DataSet deptinfo, object userState) {
            if ((this.GetDeptInfoForGYSOperationCompleted == null)) {
                this.GetDeptInfoForGYSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDeptInfoForGYSOperationCompleted);
            }
            this.InvokeAsync("GetDeptInfoForGYS", new object[] {
                        deptinfo}, this.GetDeptInfoForGYSOperationCompleted, userState);
        }
        
        private void OnGetDeptInfoForGYSOperationCompleted(object arg) {
            if ((this.GetDeptInfoForGYSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDeptInfoForGYSCompleted(this, new GetDeptInfoForGYSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HIS.org/GetNurseInfoForGYS", RequestNamespace="http://HIS.org/", ResponseNamespace="http://HIS.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetNurseInfoForGYS(ref System.Data.DataSet nurseinfo) {
            object[] results = this.Invoke("GetNurseInfoForGYS", new object[] {
                        nurseinfo});
            nurseinfo = ((System.Data.DataSet)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetNurseInfoForGYSAsync(System.Data.DataSet nurseinfo) {
            this.GetNurseInfoForGYSAsync(nurseinfo, null);
        }
        
        /// <remarks/>
        public void GetNurseInfoForGYSAsync(System.Data.DataSet nurseinfo, object userState) {
            if ((this.GetNurseInfoForGYSOperationCompleted == null)) {
                this.GetNurseInfoForGYSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNurseInfoForGYSOperationCompleted);
            }
            this.InvokeAsync("GetNurseInfoForGYS", new object[] {
                        nurseinfo}, this.GetNurseInfoForGYSOperationCompleted, userState);
        }
        
        private void OnGetNurseInfoForGYSOperationCompleted(object arg) {
            if ((this.GetNurseInfoForGYSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNurseInfoForGYSCompleted(this, new GetNurseInfoForGYSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HIS.org/GetOPSInfoForGYS", RequestNamespace="http://HIS.org/", ResponseNamespace="http://HIS.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetOPSInfoForGYS(ref System.Data.DataSet patientinfo, string cardno) {
            object[] results = this.Invoke("GetOPSInfoForGYS", new object[] {
                        patientinfo,
                        cardno});
            patientinfo = ((System.Data.DataSet)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetOPSInfoForGYSAsync(System.Data.DataSet patientinfo, string cardno) {
            this.GetOPSInfoForGYSAsync(patientinfo, cardno, null);
        }
        
        /// <remarks/>
        public void GetOPSInfoForGYSAsync(System.Data.DataSet patientinfo, string cardno, object userState) {
            if ((this.GetOPSInfoForGYSOperationCompleted == null)) {
                this.GetOPSInfoForGYSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOPSInfoForGYSOperationCompleted);
            }
            this.InvokeAsync("GetOPSInfoForGYS", new object[] {
                        patientinfo,
                        cardno}, this.GetOPSInfoForGYSOperationCompleted, userState);
        }
        
        private void OnGetOPSInfoForGYSOperationCompleted(object arg) {
            if ((this.GetOPSInfoForGYSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOPSInfoForGYSCompleted(this, new GetOPSInfoForGYSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HIS.org/GetPatientInfoByInpatientNo", RequestNamespace="http://HIS.org/", ResponseNamespace="http://HIS.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPatientInfoByInpatientNo(string InpatientNo) {
            object[] results = this.Invoke("GetPatientInfoByInpatientNo", new object[] {
                        InpatientNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientInfoByInpatientNoAsync(string InpatientNo) {
            this.GetPatientInfoByInpatientNoAsync(InpatientNo, null);
        }
        
        /// <remarks/>
        public void GetPatientInfoByInpatientNoAsync(string InpatientNo, object userState) {
            if ((this.GetPatientInfoByInpatientNoOperationCompleted == null)) {
                this.GetPatientInfoByInpatientNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientInfoByInpatientNoOperationCompleted);
            }
            this.InvokeAsync("GetPatientInfoByInpatientNo", new object[] {
                        InpatientNo}, this.GetPatientInfoByInpatientNoOperationCompleted, userState);
        }
        
        private void OnGetPatientInfoByInpatientNoOperationCompleted(object arg) {
            if ((this.GetPatientInfoByInpatientNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientInfoByInpatientNoCompleted(this, new GetPatientInfoByInpatientNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HIS.org/SaveLISFSRecord", RequestNamespace="http://HIS.org/", ResponseNamespace="http://HIS.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SaveLISFSRecord(string type, string empi_id, string card_no, string name, string content) {
            object[] results = this.Invoke("SaveLISFSRecord", new object[] {
                        type,
                        empi_id,
                        card_no,
                        name,
                        content});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SaveLISFSRecordAsync(string type, string empi_id, string card_no, string name, string content) {
            this.SaveLISFSRecordAsync(type, empi_id, card_no, name, content, null);
        }
        
        /// <remarks/>
        public void SaveLISFSRecordAsync(string type, string empi_id, string card_no, string name, string content, object userState) {
            if ((this.SaveLISFSRecordOperationCompleted == null)) {
                this.SaveLISFSRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveLISFSRecordOperationCompleted);
            }
            this.InvokeAsync("SaveLISFSRecord", new object[] {
                        type,
                        empi_id,
                        card_no,
                        name,
                        content}, this.SaveLISFSRecordOperationCompleted, userState);
        }
        
        private void OnSaveLISFSRecordOperationCompleted(object arg) {
            if ((this.SaveLISFSRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveLISFSRecordCompleted(this, new SaveLISFSRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HIS.org/GetPatientWithNewOrder", RequestNamespace="http://HIS.org/", ResponseNamespace="http://HIS.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetPatientWithNewOrder(ref System.Data.DataSet ds, int time_interval, string dept_code) {
            object[] results = this.Invoke("GetPatientWithNewOrder", new object[] {
                        ds,
                        time_interval,
                        dept_code});
            ds = ((System.Data.DataSet)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientWithNewOrderAsync(System.Data.DataSet ds, int time_interval, string dept_code) {
            this.GetPatientWithNewOrderAsync(ds, time_interval, dept_code, null);
        }
        
        /// <remarks/>
        public void GetPatientWithNewOrderAsync(System.Data.DataSet ds, int time_interval, string dept_code, object userState) {
            if ((this.GetPatientWithNewOrderOperationCompleted == null)) {
                this.GetPatientWithNewOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientWithNewOrderOperationCompleted);
            }
            this.InvokeAsync("GetPatientWithNewOrder", new object[] {
                        ds,
                        time_interval,
                        dept_code}, this.GetPatientWithNewOrderOperationCompleted, userState);
        }
        
        private void OnGetPatientWithNewOrderOperationCompleted(object arg) {
            if ((this.GetPatientWithNewOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientWithNewOrderCompleted(this, new GetPatientWithNewOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HIS.org/GetCancelSchema", RequestNamespace="http://HIS.org/", ResponseNamespace="http://HIS.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetCancelSchema(ref System.Data.DataSet schemaInfo) {
            object[] results = this.Invoke("GetCancelSchema", new object[] {
                        schemaInfo});
            schemaInfo = ((System.Data.DataSet)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetCancelSchemaAsync(System.Data.DataSet schemaInfo) {
            this.GetCancelSchemaAsync(schemaInfo, null);
        }
        
        /// <remarks/>
        public void GetCancelSchemaAsync(System.Data.DataSet schemaInfo, object userState) {
            if ((this.GetCancelSchemaOperationCompleted == null)) {
                this.GetCancelSchemaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCancelSchemaOperationCompleted);
            }
            this.InvokeAsync("GetCancelSchema", new object[] {
                        schemaInfo}, this.GetCancelSchemaOperationCompleted, userState);
        }
        
        private void OnGetCancelSchemaOperationCompleted(object arg) {
            if ((this.GetCancelSchemaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCancelSchemaCompleted(this, new GetCancelSchemaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HIS.org/GetHYXTerminal", RequestNamespace="http://HIS.org/", ResponseNamespace="http://HIS.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetHYXTerminal(string cardno, ref System.Data.DataSet HYXInfo) {
            object[] results = this.Invoke("GetHYXTerminal", new object[] {
                        cardno,
                        HYXInfo});
            HYXInfo = ((System.Data.DataSet)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetHYXTerminalAsync(string cardno, System.Data.DataSet HYXInfo) {
            this.GetHYXTerminalAsync(cardno, HYXInfo, null);
        }
        
        /// <remarks/>
        public void GetHYXTerminalAsync(string cardno, System.Data.DataSet HYXInfo, object userState) {
            if ((this.GetHYXTerminalOperationCompleted == null)) {
                this.GetHYXTerminalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHYXTerminalOperationCompleted);
            }
            this.InvokeAsync("GetHYXTerminal", new object[] {
                        cardno,
                        HYXInfo}, this.GetHYXTerminalOperationCompleted, userState);
        }
        
        private void OnGetHYXTerminalOperationCompleted(object arg) {
            if ((this.GetHYXTerminalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHYXTerminalCompleted(this, new GetHYXTerminalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void HellorWorldCompletedEventHandler(object sender, HellorWorldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HellorWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HellorWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void InitConnCompletedEventHandler(object sender, InitConnCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitConnCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitConnCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAllPatientNoCompletedEventHandler(object sender, GetAllPatientNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllPatientNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllPatientNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet ds {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAllPatientNoByPatientNoCompletedEventHandler(object sender, GetAllPatientNoByPatientNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllPatientNoByPatientNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllPatientNoByPatientNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetConfirmInfoOfXCGByICCardNOCompletedEventHandler(object sender, GetConfirmInfoOfXCGByICCardNOCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetConfirmInfoOfXCGByICCardNOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetConfirmInfoOfXCGByICCardNOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetConfirmInfoOfXCGByCardNOCompletedEventHandler(object sender, GetConfirmInfoOfXCGByCardNOCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetConfirmInfoOfXCGByCardNOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetConfirmInfoOfXCGByCardNOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetConfirmInfoOfXDTByCardNOCompletedEventHandler(object sender, GetConfirmInfoOfXDTByCardNOCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetConfirmInfoOfXDTByCardNOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetConfirmInfoOfXDTByCardNOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetConfirmInfoOfXDTByICCardNOCompletedEventHandler(object sender, GetConfirmInfoOfXDTByICCardNOCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetConfirmInfoOfXDTByICCardNOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetConfirmInfoOfXDTByICCardNOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetPatientInfoByCardorIcCardCompletedEventHandler(object sender, GetPatientInfoByCardorIcCardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientInfoByCardorIcCardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientInfoByCardorIcCardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetPatientBaseInfoByCardorIcCardCompletedEventHandler(object sender, GetPatientBaseInfoByCardorIcCardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientBaseInfoByCardorIcCardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientBaseInfoByCardorIcCardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void TestCompletedEventHandler(object sender, TestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet ds {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetUndrugInfoCompletedEventHandler(object sender, GetUndrugInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUndrugInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUndrugInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet ds {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDrugInfoCompletedEventHandler(object sender, GetDrugInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDrugInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDrugInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet ds {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetYBYPMLByPactCodeCompletedEventHandler(object sender, GetYBYPMLByPactCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetYBYPMLByPactCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetYBYPMLByPactCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet ds {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetPatientNoByCardNoCompletedEventHandler(object sender, GetPatientNoByCardNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientNoByCardNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientNoByCardNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet patient_no {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetOperationInfoByDateCompletedEventHandler(object sender, GetOperationInfoByDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOperationInfoByDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOperationInfoByDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet operationInfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void QueryAllRegisterInfoBySeedateCompletedEventHandler(object sender, QueryAllRegisterInfoBySeedateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryAllRegisterInfoBySeedateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryAllRegisterInfoBySeedateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet deptschema {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void QueryInhosInfoByICCardCompletedEventHandler(object sender, QueryInhosInfoByICCardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryInhosInfoByICCardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryInhosInfoByICCardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet inhos_info {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void QueryInhosDrugFeeInfoByCardNoCompletedEventHandler(object sender, QueryInhosDrugFeeInfoByCardNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryInhosDrugFeeInfoByCardNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryInhosDrugFeeInfoByCardNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet inhos_feeinfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void QueryInhosUnDrugFeeInfoByCardNoCompletedEventHandler(object sender, QueryInhosUnDrugFeeInfoByCardNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryInhosUnDrugFeeInfoByCardNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryInhosUnDrugFeeInfoByCardNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet inhos_feeinfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void QueryOutPatientFeeDetailByICCardCompletedEventHandler(object sender, QueryOutPatientFeeDetailByICCardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryOutPatientFeeDetailByICCardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryOutPatientFeeDetailByICCardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet out_feeinfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void QueryRegInfoByICCardCompletedEventHandler(object sender, QueryRegInfoByICCardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryRegInfoByICCardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryRegInfoByICCardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet reg_info {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void QueryChkInfoByICCardCompletedEventHandler(object sender, QueryChkInfoByICCardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryChkInfoByICCardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryChkInfoByICCardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet chk_info {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void QueryRegInfobyDateCompletedEventHandler(object sender, QueryRegInfobyDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryRegInfobyDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryRegInfobyDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet reg_info {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void QueryBySeedateCompletedEventHandler(object sender, QueryBySeedateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryBySeedateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryBySeedateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet deptschema {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void QueryDoctBySeedateCompletedEventHandler(object sender, QueryDoctBySeedateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryDoctBySeedateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryDoctBySeedateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet doctschema {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateAutregdeCompletedEventHandler(object sender, UpdateAutregdeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateAutregdeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateAutregdeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void QueryRegLevCompletedEventHandler(object sender, QueryRegLevCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryRegLevCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryRegLevCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet regfee {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void QueryPatientInfobyCardNoCompletedEventHandler(object sender, QueryPatientInfobyCardNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryPatientInfobyCardNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryPatientInfobyCardNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet patientinfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SaveAutoPatientCompletedEventHandler(object sender, SaveAutoPatientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveAutoPatientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveAutoPatientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string clinicseeno {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetPatientInfoByIccardCompletedEventHandler(object sender, GetPatientInfoByIccardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientInfoByIccardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientInfoByIccardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetPatientInfoBycardNoCompletedEventHandler(object sender, GetPatientInfoBycardNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientInfoBycardNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientInfoBycardNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UserLoginCompletedEventHandler(object sender, UserLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UserLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DecryptCompletedEventHandler(object sender, DecryptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DecryptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DecryptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void InsertCasPhotoCardNoCompletedEventHandler(object sender, InsertCasPhotoCardNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertCasPhotoCardNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertCasPhotoCardNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateCasPhotoCardNoCompletedEventHandler(object sender, UpdateCasPhotoCardNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCasPhotoCardNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCasPhotoCardNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateLastPhotoOutDateCompletedEventHandler(object sender, UpdateLastPhotoOutDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateLastPhotoOutDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateLastPhotoOutDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void QueryCardNoBySecondCodeCompletedEventHandler(object sender, QueryCardNoBySecondCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryCardNoBySecondCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryCardNoBySecondCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet CardNoList {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void QueryDiagnoseByInpatientNoCompletedEventHandler(object sender, QueryDiagnoseByInpatientNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryDiagnoseByInpatientNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryDiagnoseByInpatientNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet DiagnoseList {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void QueryPhotoCardNoCompletedEventHandler(object sender, QueryPhotoCardNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryPhotoCardNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryPhotoCardNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetMZPatientInfoForGYSCompletedEventHandler(object sender, GetMZPatientInfoForGYSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMZPatientInfoForGYSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMZPatientInfoForGYSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet patientinfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetZYPatientInfoForGYSCompletedEventHandler(object sender, GetZYPatientInfoForGYSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetZYPatientInfoForGYSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetZYPatientInfoForGYSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet patientinfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDeptInfoForGYSCompletedEventHandler(object sender, GetDeptInfoForGYSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDeptInfoForGYSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDeptInfoForGYSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet deptinfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetNurseInfoForGYSCompletedEventHandler(object sender, GetNurseInfoForGYSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNurseInfoForGYSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNurseInfoForGYSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet nurseinfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetOPSInfoForGYSCompletedEventHandler(object sender, GetOPSInfoForGYSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOPSInfoForGYSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOPSInfoForGYSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet patientinfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetPatientInfoByInpatientNoCompletedEventHandler(object sender, GetPatientInfoByInpatientNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientInfoByInpatientNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientInfoByInpatientNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SaveLISFSRecordCompletedEventHandler(object sender, SaveLISFSRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveLISFSRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveLISFSRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetPatientWithNewOrderCompletedEventHandler(object sender, GetPatientWithNewOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientWithNewOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientWithNewOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet ds {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetCancelSchemaCompletedEventHandler(object sender, GetCancelSchemaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCancelSchemaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCancelSchemaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet schemaInfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetHYXTerminalCompletedEventHandler(object sender, GetHYXTerminalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHYXTerminalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHYXTerminalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet HYXInfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
    }
}

#pragma warning restore 1591