//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.1
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.1 版自动生成。
// 
#pragma warning disable 1591

namespace PathHISZGQJK.wys_pacs_web {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="CISServiceSoap", Namespace="http://www.landwind.com.cn/cis")]
    public partial class CISService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetServerTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback PrepareReportOperationCompleted;
        
        private CredentialSoapHeader credentialSoapHeaderValueField;
        
        private System.Threading.SendOrPostCallback SyncStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback UserLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPrintListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSearchListOperationCompleted;
        
        private System.Threading.SendOrPostCallback MergeStudyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStudyUIDSOperationCompleted;
        
        private System.Threading.SendOrPostCallback PingOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangePasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNewPackOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetReportPrintStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetListByTableNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetListBySqlOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecSQLOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public CISService() {
            this.Url = global::PathHISZGQJK.Properties.Settings.Default.PathHISZGQJK_wys_pacs_web_CISService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public CredentialSoapHeader CredentialSoapHeaderValue {
            get {
                return this.credentialSoapHeaderValueField;
            }
            set {
                this.credentialSoapHeaderValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetServerTimeCompletedEventHandler GetServerTimeCompleted;
        
        /// <remarks/>
        public event PrepareReportCompletedEventHandler PrepareReportCompleted;
        
        /// <remarks/>
        public event SyncStatusCompletedEventHandler SyncStatusCompleted;
        
        /// <remarks/>
        public event UserLoginCompletedEventHandler UserLoginCompleted;
        
        /// <remarks/>
        public event GetListCompletedEventHandler GetListCompleted;
        
        /// <remarks/>
        public event GetPrintListCompletedEventHandler GetPrintListCompleted;
        
        /// <remarks/>
        public event GetSearchListCompletedEventHandler GetSearchListCompleted;
        
        /// <remarks/>
        public event MergeStudyCompletedEventHandler MergeStudyCompleted;
        
        /// <remarks/>
        public event GetStudyUIDSCompletedEventHandler GetStudyUIDSCompleted;
        
        /// <remarks/>
        public event PingCompletedEventHandler PingCompleted;
        
        /// <remarks/>
        public event ChangePasswordCompletedEventHandler ChangePasswordCompleted;
        
        /// <remarks/>
        public event GetNewPackCompletedEventHandler GetNewPackCompleted;
        
        /// <remarks/>
        public event UploadCompletedEventHandler UploadCompleted;
        
        /// <remarks/>
        public event GetFileCompletedEventHandler GetFileCompleted;
        
        /// <remarks/>
        public event SetReportPrintStatusCompletedEventHandler SetReportPrintStatusCompleted;
        
        /// <remarks/>
        public event GetListByTableNameCompletedEventHandler GetListByTableNameCompleted;
        
        /// <remarks/>
        public event GetListBySqlCompletedEventHandler GetListBySqlCompleted;
        
        /// <remarks/>
        public event ExecSQLCompletedEventHandler ExecSQLCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.landwind.com.cn/cis/GetServerTime", RequestNamespace="http://www.landwind.com.cn/cis", ResponseNamespace="http://www.landwind.com.cn/cis", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetServerTime() {
            object[] results = this.Invoke("GetServerTime", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetServerTimeAsync() {
            this.GetServerTimeAsync(null);
        }
        
        /// <remarks/>
        public void GetServerTimeAsync(object userState) {
            if ((this.GetServerTimeOperationCompleted == null)) {
                this.GetServerTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetServerTimeOperationCompleted);
            }
            this.InvokeAsync("GetServerTime", new object[0], this.GetServerTimeOperationCompleted, userState);
        }
        
        private void OnGetServerTimeOperationCompleted(object arg) {
            if ((this.GetServerTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetServerTimeCompleted(this, new GetServerTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.landwind.com.cn/cis/PrepareReport", RequestNamespace="http://www.landwind.com.cn/cis", ResponseNamespace="http://www.landwind.com.cn/cis", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long PrepareReport(string Title, string ReportType, string ReportTag) {
            object[] results = this.Invoke("PrepareReport", new object[] {
                        Title,
                        ReportType,
                        ReportTag});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void PrepareReportAsync(string Title, string ReportType, string ReportTag) {
            this.PrepareReportAsync(Title, ReportType, ReportTag, null);
        }
        
        /// <remarks/>
        public void PrepareReportAsync(string Title, string ReportType, string ReportTag, object userState) {
            if ((this.PrepareReportOperationCompleted == null)) {
                this.PrepareReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPrepareReportOperationCompleted);
            }
            this.InvokeAsync("PrepareReport", new object[] {
                        Title,
                        ReportType,
                        ReportTag}, this.PrepareReportOperationCompleted, userState);
        }
        
        private void OnPrepareReportOperationCompleted(object arg) {
            if ((this.PrepareReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PrepareReportCompleted(this, new PrepareReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("CredentialSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.landwind.com.cn/cis/SyncStatus", RequestNamespace="http://www.landwind.com.cn/cis", ResponseNamespace="http://www.landwind.com.cn/cis", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long SyncStatus(string Title, string ReportType) {
            object[] results = this.Invoke("SyncStatus", new object[] {
                        Title,
                        ReportType});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void SyncStatusAsync(string Title, string ReportType) {
            this.SyncStatusAsync(Title, ReportType, null);
        }
        
        /// <remarks/>
        public void SyncStatusAsync(string Title, string ReportType, object userState) {
            if ((this.SyncStatusOperationCompleted == null)) {
                this.SyncStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSyncStatusOperationCompleted);
            }
            this.InvokeAsync("SyncStatus", new object[] {
                        Title,
                        ReportType}, this.SyncStatusOperationCompleted, userState);
        }
        
        private void OnSyncStatusOperationCompleted(object arg) {
            if ((this.SyncStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SyncStatusCompleted(this, new SyncStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("CredentialSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.landwind.com.cn/cis/UserLogin", RequestNamespace="http://www.landwind.com.cn/cis", ResponseNamespace="http://www.landwind.com.cn/cis", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public T_USER UserLogin(string UserID, string UserPassword) {
            object[] results = this.Invoke("UserLogin", new object[] {
                        UserID,
                        UserPassword});
            return ((T_USER)(results[0]));
        }
        
        /// <remarks/>
        public void UserLoginAsync(string UserID, string UserPassword) {
            this.UserLoginAsync(UserID, UserPassword, null);
        }
        
        /// <remarks/>
        public void UserLoginAsync(string UserID, string UserPassword, object userState) {
            if ((this.UserLoginOperationCompleted == null)) {
                this.UserLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserLoginOperationCompleted);
            }
            this.InvokeAsync("UserLogin", new object[] {
                        UserID,
                        UserPassword}, this.UserLoginOperationCompleted, userState);
        }
        
        private void OnUserLoginOperationCompleted(object arg) {
            if ((this.UserLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserLoginCompleted(this, new UserLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.landwind.com.cn/cis/GetList", RequestNamespace="http://www.landwind.com.cn/cis", ResponseNamespace="http://www.landwind.com.cn/cis", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetList(string strWhere) {
            object[] results = this.Invoke("GetList", new object[] {
                        strWhere});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetListAsync(string strWhere) {
            this.GetListAsync(strWhere, null);
        }
        
        /// <remarks/>
        public void GetListAsync(string strWhere, object userState) {
            if ((this.GetListOperationCompleted == null)) {
                this.GetListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetListOperationCompleted);
            }
            this.InvokeAsync("GetList", new object[] {
                        strWhere}, this.GetListOperationCompleted, userState);
        }
        
        private void OnGetListOperationCompleted(object arg) {
            if ((this.GetListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetListCompleted(this, new GetListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.landwind.com.cn/cis/GetPrintList", RequestNamespace="http://www.landwind.com.cn/cis", ResponseNamespace="http://www.landwind.com.cn/cis", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPrintList(string strWhere) {
            object[] results = this.Invoke("GetPrintList", new object[] {
                        strWhere});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPrintListAsync(string strWhere) {
            this.GetPrintListAsync(strWhere, null);
        }
        
        /// <remarks/>
        public void GetPrintListAsync(string strWhere, object userState) {
            if ((this.GetPrintListOperationCompleted == null)) {
                this.GetPrintListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPrintListOperationCompleted);
            }
            this.InvokeAsync("GetPrintList", new object[] {
                        strWhere}, this.GetPrintListOperationCompleted, userState);
        }
        
        private void OnGetPrintListOperationCompleted(object arg) {
            if ((this.GetPrintListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPrintListCompleted(this, new GetPrintListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.landwind.com.cn/cis/GetSearchList", RequestNamespace="http://www.landwind.com.cn/cis", ResponseNamespace="http://www.landwind.com.cn/cis", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSearchList(string PatientID, string PatientName, string KeyWord, string FromDate, string ToDate) {
            object[] results = this.Invoke("GetSearchList", new object[] {
                        PatientID,
                        PatientName,
                        KeyWord,
                        FromDate,
                        ToDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSearchListAsync(string PatientID, string PatientName, string KeyWord, string FromDate, string ToDate) {
            this.GetSearchListAsync(PatientID, PatientName, KeyWord, FromDate, ToDate, null);
        }
        
        /// <remarks/>
        public void GetSearchListAsync(string PatientID, string PatientName, string KeyWord, string FromDate, string ToDate, object userState) {
            if ((this.GetSearchListOperationCompleted == null)) {
                this.GetSearchListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSearchListOperationCompleted);
            }
            this.InvokeAsync("GetSearchList", new object[] {
                        PatientID,
                        PatientName,
                        KeyWord,
                        FromDate,
                        ToDate}, this.GetSearchListOperationCompleted, userState);
        }
        
        private void OnGetSearchListOperationCompleted(object arg) {
            if ((this.GetSearchListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSearchListCompleted(this, new GetSearchListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.landwind.com.cn/cis/MergeStudy", RequestNamespace="http://www.landwind.com.cn/cis", ResponseNamespace="http://www.landwind.com.cn/cis", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool MergeStudy(string PatientIdentity, string VisitIdentity, string StudyIdentity) {
            object[] results = this.Invoke("MergeStudy", new object[] {
                        PatientIdentity,
                        VisitIdentity,
                        StudyIdentity});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void MergeStudyAsync(string PatientIdentity, string VisitIdentity, string StudyIdentity) {
            this.MergeStudyAsync(PatientIdentity, VisitIdentity, StudyIdentity, null);
        }
        
        /// <remarks/>
        public void MergeStudyAsync(string PatientIdentity, string VisitIdentity, string StudyIdentity, object userState) {
            if ((this.MergeStudyOperationCompleted == null)) {
                this.MergeStudyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMergeStudyOperationCompleted);
            }
            this.InvokeAsync("MergeStudy", new object[] {
                        PatientIdentity,
                        VisitIdentity,
                        StudyIdentity}, this.MergeStudyOperationCompleted, userState);
        }
        
        private void OnMergeStudyOperationCompleted(object arg) {
            if ((this.MergeStudyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MergeStudyCompleted(this, new MergeStudyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.landwind.com.cn/cis/GetStudyUIDS", RequestNamespace="http://www.landwind.com.cn/cis", ResponseNamespace="http://www.landwind.com.cn/cis", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetStudyUIDS(long Identity, int iType) {
            object[] results = this.Invoke("GetStudyUIDS", new object[] {
                        Identity,
                        iType});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetStudyUIDSAsync(long Identity, int iType) {
            this.GetStudyUIDSAsync(Identity, iType, null);
        }
        
        /// <remarks/>
        public void GetStudyUIDSAsync(long Identity, int iType, object userState) {
            if ((this.GetStudyUIDSOperationCompleted == null)) {
                this.GetStudyUIDSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStudyUIDSOperationCompleted);
            }
            this.InvokeAsync("GetStudyUIDS", new object[] {
                        Identity,
                        iType}, this.GetStudyUIDSOperationCompleted, userState);
        }
        
        private void OnGetStudyUIDSOperationCompleted(object arg) {
            if ((this.GetStudyUIDSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStudyUIDSCompleted(this, new GetStudyUIDSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.landwind.com.cn/cis/Ping", RequestNamespace="http://www.landwind.com.cn/cis", ResponseNamespace="http://www.landwind.com.cn/cis", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Ping() {
            object[] results = this.Invoke("Ping", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void PingAsync() {
            this.PingAsync(null);
        }
        
        /// <remarks/>
        public void PingAsync(object userState) {
            if ((this.PingOperationCompleted == null)) {
                this.PingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPingOperationCompleted);
            }
            this.InvokeAsync("Ping", new object[0], this.PingOperationCompleted, userState);
        }
        
        private void OnPingOperationCompleted(object arg) {
            if ((this.PingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PingCompleted(this, new PingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.landwind.com.cn/cis/ChangePassword", RequestNamespace="http://www.landwind.com.cn/cis", ResponseNamespace="http://www.landwind.com.cn/cis", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ChangePassword(string NewPassword, long UserIdentity) {
            object[] results = this.Invoke("ChangePassword", new object[] {
                        NewPassword,
                        UserIdentity});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ChangePasswordAsync(string NewPassword, long UserIdentity) {
            this.ChangePasswordAsync(NewPassword, UserIdentity, null);
        }
        
        /// <remarks/>
        public void ChangePasswordAsync(string NewPassword, long UserIdentity, object userState) {
            if ((this.ChangePasswordOperationCompleted == null)) {
                this.ChangePasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangePasswordOperationCompleted);
            }
            this.InvokeAsync("ChangePassword", new object[] {
                        NewPassword,
                        UserIdentity}, this.ChangePasswordOperationCompleted, userState);
        }
        
        private void OnChangePasswordOperationCompleted(object arg) {
            if ((this.ChangePasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangePasswordCompleted(this, new ChangePasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.landwind.com.cn/cis/GetNewPack", RequestNamespace="http://www.landwind.com.cn/cis", ResponseNamespace="http://www.landwind.com.cn/cis", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public T_PACK GetNewPack(int VisionNumber, int PackLevel) {
            object[] results = this.Invoke("GetNewPack", new object[] {
                        VisionNumber,
                        PackLevel});
            return ((T_PACK)(results[0]));
        }
        
        /// <remarks/>
        public void GetNewPackAsync(int VisionNumber, int PackLevel) {
            this.GetNewPackAsync(VisionNumber, PackLevel, null);
        }
        
        /// <remarks/>
        public void GetNewPackAsync(int VisionNumber, int PackLevel, object userState) {
            if ((this.GetNewPackOperationCompleted == null)) {
                this.GetNewPackOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNewPackOperationCompleted);
            }
            this.InvokeAsync("GetNewPack", new object[] {
                        VisionNumber,
                        PackLevel}, this.GetNewPackOperationCompleted, userState);
        }
        
        private void OnGetNewPackOperationCompleted(object arg) {
            if ((this.GetNewPackCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNewPackCompleted(this, new GetNewPackCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.landwind.com.cn/cis/Upload", RequestNamespace="http://www.landwind.com.cn/cis", ResponseNamespace="http://www.landwind.com.cn/cis", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Upload(string StudyInfo) {
            object[] results = this.Invoke("Upload", new object[] {
                        StudyInfo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UploadAsync(string StudyInfo) {
            this.UploadAsync(StudyInfo, null);
        }
        
        /// <remarks/>
        public void UploadAsync(string StudyInfo, object userState) {
            if ((this.UploadOperationCompleted == null)) {
                this.UploadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadOperationCompleted);
            }
            this.InvokeAsync("Upload", new object[] {
                        StudyInfo}, this.UploadOperationCompleted, userState);
        }
        
        private void OnUploadOperationCompleted(object arg) {
            if ((this.UploadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadCompleted(this, new UploadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.landwind.com.cn/cis/GetFile", RequestNamespace="http://www.landwind.com.cn/cis", ResponseNamespace="http://www.landwind.com.cn/cis", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetFile(string requestFileName) {
            object[] results = this.Invoke("GetFile", new object[] {
                        requestFileName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetFileAsync(string requestFileName) {
            this.GetFileAsync(requestFileName, null);
        }
        
        /// <remarks/>
        public void GetFileAsync(string requestFileName, object userState) {
            if ((this.GetFileOperationCompleted == null)) {
                this.GetFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFileOperationCompleted);
            }
            this.InvokeAsync("GetFile", new object[] {
                        requestFileName}, this.GetFileOperationCompleted, userState);
        }
        
        private void OnGetFileOperationCompleted(object arg) {
            if ((this.GetFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFileCompleted(this, new GetFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.landwind.com.cn/cis/SetReportPrintStatus", RequestNamespace="http://www.landwind.com.cn/cis", ResponseNamespace="http://www.landwind.com.cn/cis", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SetReportPrintStatus(string ReportIdentity, int Printed) {
            object[] results = this.Invoke("SetReportPrintStatus", new object[] {
                        ReportIdentity,
                        Printed});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SetReportPrintStatusAsync(string ReportIdentity, int Printed) {
            this.SetReportPrintStatusAsync(ReportIdentity, Printed, null);
        }
        
        /// <remarks/>
        public void SetReportPrintStatusAsync(string ReportIdentity, int Printed, object userState) {
            if ((this.SetReportPrintStatusOperationCompleted == null)) {
                this.SetReportPrintStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetReportPrintStatusOperationCompleted);
            }
            this.InvokeAsync("SetReportPrintStatus", new object[] {
                        ReportIdentity,
                        Printed}, this.SetReportPrintStatusOperationCompleted, userState);
        }
        
        private void OnSetReportPrintStatusOperationCompleted(object arg) {
            if ((this.SetReportPrintStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetReportPrintStatusCompleted(this, new SetReportPrintStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.landwind.com.cn/cis/GetListByTableName", RequestNamespace="http://www.landwind.com.cn/cis", ResponseNamespace="http://www.landwind.com.cn/cis", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetListByTableName(string strTableName, string strWhere) {
            object[] results = this.Invoke("GetListByTableName", new object[] {
                        strTableName,
                        strWhere});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetListByTableNameAsync(string strTableName, string strWhere) {
            this.GetListByTableNameAsync(strTableName, strWhere, null);
        }
        
        /// <remarks/>
        public void GetListByTableNameAsync(string strTableName, string strWhere, object userState) {
            if ((this.GetListByTableNameOperationCompleted == null)) {
                this.GetListByTableNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetListByTableNameOperationCompleted);
            }
            this.InvokeAsync("GetListByTableName", new object[] {
                        strTableName,
                        strWhere}, this.GetListByTableNameOperationCompleted, userState);
        }
        
        private void OnGetListByTableNameOperationCompleted(object arg) {
            if ((this.GetListByTableNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetListByTableNameCompleted(this, new GetListByTableNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.landwind.com.cn/cis/GetListBySql", RequestNamespace="http://www.landwind.com.cn/cis", ResponseNamespace="http://www.landwind.com.cn/cis", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetListBySql(string strSQL) {
            object[] results = this.Invoke("GetListBySql", new object[] {
                        strSQL});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetListBySqlAsync(string strSQL) {
            this.GetListBySqlAsync(strSQL, null);
        }
        
        /// <remarks/>
        public void GetListBySqlAsync(string strSQL, object userState) {
            if ((this.GetListBySqlOperationCompleted == null)) {
                this.GetListBySqlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetListBySqlOperationCompleted);
            }
            this.InvokeAsync("GetListBySql", new object[] {
                        strSQL}, this.GetListBySqlOperationCompleted, userState);
        }
        
        private void OnGetListBySqlOperationCompleted(object arg) {
            if ((this.GetListBySqlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetListBySqlCompleted(this, new GetListBySqlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.landwind.com.cn/cis/ExecSQL", RequestNamespace="http://www.landwind.com.cn/cis", ResponseNamespace="http://www.landwind.com.cn/cis", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ExecSQL(string strSQL) {
            object[] results = this.Invoke("ExecSQL", new object[] {
                        strSQL});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ExecSQLAsync(string strSQL) {
            this.ExecSQLAsync(strSQL, null);
        }
        
        /// <remarks/>
        public void ExecSQLAsync(string strSQL, object userState) {
            if ((this.ExecSQLOperationCompleted == null)) {
                this.ExecSQLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecSQLOperationCompleted);
            }
            this.InvokeAsync("ExecSQL", new object[] {
                        strSQL}, this.ExecSQLOperationCompleted, userState);
        }
        
        private void OnExecSQLOperationCompleted(object arg) {
            if ((this.ExecSQLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecSQLCompleted(this, new ExecSQLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.landwind.com.cn/cis")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://www.landwind.com.cn/cis", IsNullable=false)]
    public partial class CredentialSoapHeader : System.Web.Services.Protocols.SoapHeader {
        
        private string userNameField;
        
        private long lineIdentityField;
        
        private string ipField;
        
        private string macField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public long LineIdentity {
            get {
                return this.lineIdentityField;
            }
            set {
                this.lineIdentityField = value;
            }
        }
        
        /// <remarks/>
        public string IP {
            get {
                return this.ipField;
            }
            set {
                this.ipField = value;
            }
        }
        
        /// <remarks/>
        public string Mac {
            get {
                return this.macField;
            }
            set {
                this.macField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.landwind.com.cn/cis")]
    public partial class T_PACK {
        
        private long packIdentityField;
        
        private string packNameField;
        
        private int visionNumberField;
        
        private int packTypeField;
        
        private int packLevelField;
        
        private string packDescriptField;
        
        private string visionField;
        
        private string packURLField;
        
        private string allURLField;
        
        /// <remarks/>
        public long PackIdentity {
            get {
                return this.packIdentityField;
            }
            set {
                this.packIdentityField = value;
            }
        }
        
        /// <remarks/>
        public string PackName {
            get {
                return this.packNameField;
            }
            set {
                this.packNameField = value;
            }
        }
        
        /// <remarks/>
        public int VisionNumber {
            get {
                return this.visionNumberField;
            }
            set {
                this.visionNumberField = value;
            }
        }
        
        /// <remarks/>
        public int PackType {
            get {
                return this.packTypeField;
            }
            set {
                this.packTypeField = value;
            }
        }
        
        /// <remarks/>
        public int PackLevel {
            get {
                return this.packLevelField;
            }
            set {
                this.packLevelField = value;
            }
        }
        
        /// <remarks/>
        public string PackDescript {
            get {
                return this.packDescriptField;
            }
            set {
                this.packDescriptField = value;
            }
        }
        
        /// <remarks/>
        public string Vision {
            get {
                return this.visionField;
            }
            set {
                this.visionField = value;
            }
        }
        
        /// <remarks/>
        public string PackURL {
            get {
                return this.packURLField;
            }
            set {
                this.packURLField = value;
            }
        }
        
        /// <remarks/>
        public string AllURL {
            get {
                return this.allURLField;
            }
            set {
                this.allURLField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.landwind.com.cn/cis")]
    public partial class T_USER {
        
        private long userIdentityField;
        
        private long departmentIdentityField;
        
        private string userIDField;
        
        private string userNameField;
        
        private string userPasswordField;
        
        private long groupIdentityField;
        
        private int userRight1Field;
        
        private int userRight2Field;
        
        private int userRight3Field;
        
        private int userRight4Field;
        
        private int userRight5Field;
        
        private int userRight6Field;
        
        private string userSexField;
        
        private string userBirthdayField;
        
        private string userDutyField;
        
        private string userTelField;
        
        private int userStopedField;
        
        private string userStopedMemoField;
        
        /// <remarks/>
        public long UserIdentity {
            get {
                return this.userIdentityField;
            }
            set {
                this.userIdentityField = value;
            }
        }
        
        /// <remarks/>
        public long DepartmentIdentity {
            get {
                return this.departmentIdentityField;
            }
            set {
                this.departmentIdentityField = value;
            }
        }
        
        /// <remarks/>
        public string UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string UserPassword {
            get {
                return this.userPasswordField;
            }
            set {
                this.userPasswordField = value;
            }
        }
        
        /// <remarks/>
        public long GroupIdentity {
            get {
                return this.groupIdentityField;
            }
            set {
                this.groupIdentityField = value;
            }
        }
        
        /// <remarks/>
        public int UserRight1 {
            get {
                return this.userRight1Field;
            }
            set {
                this.userRight1Field = value;
            }
        }
        
        /// <remarks/>
        public int UserRight2 {
            get {
                return this.userRight2Field;
            }
            set {
                this.userRight2Field = value;
            }
        }
        
        /// <remarks/>
        public int UserRight3 {
            get {
                return this.userRight3Field;
            }
            set {
                this.userRight3Field = value;
            }
        }
        
        /// <remarks/>
        public int UserRight4 {
            get {
                return this.userRight4Field;
            }
            set {
                this.userRight4Field = value;
            }
        }
        
        /// <remarks/>
        public int UserRight5 {
            get {
                return this.userRight5Field;
            }
            set {
                this.userRight5Field = value;
            }
        }
        
        /// <remarks/>
        public int UserRight6 {
            get {
                return this.userRight6Field;
            }
            set {
                this.userRight6Field = value;
            }
        }
        
        /// <remarks/>
        public string UserSex {
            get {
                return this.userSexField;
            }
            set {
                this.userSexField = value;
            }
        }
        
        /// <remarks/>
        public string UserBirthday {
            get {
                return this.userBirthdayField;
            }
            set {
                this.userBirthdayField = value;
            }
        }
        
        /// <remarks/>
        public string UserDuty {
            get {
                return this.userDutyField;
            }
            set {
                this.userDutyField = value;
            }
        }
        
        /// <remarks/>
        public string UserTel {
            get {
                return this.userTelField;
            }
            set {
                this.userTelField = value;
            }
        }
        
        /// <remarks/>
        public int UserStoped {
            get {
                return this.userStopedField;
            }
            set {
                this.userStopedField = value;
            }
        }
        
        /// <remarks/>
        public string UserStopedMemo {
            get {
                return this.userStopedMemoField;
            }
            set {
                this.userStopedMemoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetServerTimeCompletedEventHandler(object sender, GetServerTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetServerTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetServerTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void PrepareReportCompletedEventHandler(object sender, PrepareReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PrepareReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PrepareReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SyncStatusCompletedEventHandler(object sender, SyncStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SyncStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SyncStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UserLoginCompletedEventHandler(object sender, UserLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UserLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public T_USER Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((T_USER)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetListCompletedEventHandler(object sender, GetListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetPrintListCompletedEventHandler(object sender, GetPrintListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPrintListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPrintListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetSearchListCompletedEventHandler(object sender, GetSearchListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSearchListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSearchListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void MergeStudyCompletedEventHandler(object sender, MergeStudyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MergeStudyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MergeStudyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetStudyUIDSCompletedEventHandler(object sender, GetStudyUIDSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStudyUIDSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStudyUIDSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void PingCompletedEventHandler(object sender, PingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ChangePasswordCompletedEventHandler(object sender, ChangePasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangePasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangePasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetNewPackCompletedEventHandler(object sender, GetNewPackCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNewPackCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNewPackCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public T_PACK Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((T_PACK)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UploadCompletedEventHandler(object sender, UploadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetFileCompletedEventHandler(object sender, GetFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SetReportPrintStatusCompletedEventHandler(object sender, SetReportPrintStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetReportPrintStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetReportPrintStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetListByTableNameCompletedEventHandler(object sender, GetListByTableNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetListByTableNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetListByTableNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetListBySqlCompletedEventHandler(object sender, GetListBySqlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetListBySqlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetListBySqlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ExecSQLCompletedEventHandler(object sender, ExecSQLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecSQLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecSQLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591